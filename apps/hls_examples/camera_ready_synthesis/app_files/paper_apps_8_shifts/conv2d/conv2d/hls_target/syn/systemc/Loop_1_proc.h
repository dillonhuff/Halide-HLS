// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_1_proc_HH_
#define _Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_1_proc : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<72> > p_hw_input_stencil_stream_V_value_V_dout;
    sc_in< sc_logic > p_hw_input_stencil_stream_V_value_V_empty_n;
    sc_out< sc_logic > p_hw_input_stencil_stream_V_value_V_read;
    sc_out< sc_lv<8> > hw_output_V_value_V;
    sc_out< sc_logic > hw_output_V_value_V_ap_vld;
    sc_in< sc_logic > hw_output_V_value_V_ap_ack;
    sc_out< sc_lv<1> > hw_output_V_last_V;
    sc_out< sc_logic > hw_output_V_last_V_ap_vld;
    sc_in< sc_logic > hw_output_V_last_V_ap_ack;


    // Module declarations
    Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_1_proc);

    ~Loop_1_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > p_hw_input_stencil_stream_V_value_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_459;
    sc_signal< sc_logic > hw_output_V_value_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_flatten_reg_459;
    sc_signal< sc_logic > hw_output_V_last_V_blk_n;
    sc_signal< sc_lv<3> > indvar_flatten_reg_118;
    sc_signal< sc_lv<2> > p_hw_output_y_scan_1_reg_129;
    sc_signal< sc_lv<2> > p_hw_output_x_scan_2_reg_140;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_151_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< sc_logic > ap_sig_ioackin_hw_output_V_value_V_ap_ack;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_flatten_reg_459;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_flatten_reg_459;
    sc_signal< sc_lv<3> > indvar_flatten_next_fu_157_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond8_fu_163_p2;
    sc_signal< sc_lv<1> > exitcond8_reg_468;
    sc_signal< sc_lv<2> > p_hw_output_x_scan_s_fu_169_p3;
    sc_signal< sc_lv<2> > p_hw_output_x_scan_s_reg_473;
    sc_signal< sc_lv<1> > tmp_mid1_fu_177_p2;
    sc_signal< sc_lv<1> > tmp_mid1_reg_478;
    sc_signal< sc_lv<1> > tmp5_fu_183_p2;
    sc_signal< sc_lv<1> > tmp5_reg_483;
    sc_signal< sc_lv<2> > p_hw_output_y_scan_s_fu_195_p3;
    sc_signal< sc_lv<2> > p_hw_output_x_scan_1_fu_203_p2;
    sc_signal< sc_lv<8> > p_357_reg_498;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_p_357_reg_498;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_p_357_reg_498;
    sc_signal< sc_lv<9> > p_319_fu_282_p2;
    sc_signal< sc_lv<9> > p_319_reg_503;
    sc_signal< sc_lv<9> > tmp1_fu_310_p2;
    sc_signal< sc_lv<9> > tmp1_reg_508;
    sc_signal< sc_lv<6> > tmp_4_reg_513;
    sc_signal< sc_lv<6> > ap_reg_pp0_iter2_tmp_4_reg_513;
    sc_signal< sc_lv<7> > tmp_5_reg_518;
    sc_signal< sc_lv<9> > tmp4_fu_358_p2;
    sc_signal< sc_lv<9> > tmp4_reg_523;
    sc_signal< sc_lv<1> > tmp_last_V_fu_369_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_528;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp_last_V_reg_528;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_tmp_last_V_reg_528;
    sc_signal< sc_lv<10> > p_331_fu_381_p2;
    sc_signal< sc_lv<10> > p_331_reg_533;
    sc_signal< sc_lv<10> > tmp3_fu_401_p2;
    sc_signal< sc_lv<10> > tmp3_reg_538;
    sc_signal< sc_lv<11> > p_355_fu_430_p2;
    sc_signal< sc_lv<11> > p_355_reg_543;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_flag00001001;
    sc_signal< sc_logic > ap_reg_ioackin_hw_output_V_value_V_ap_ack;
    sc_signal< sc_logic > ap_reg_ioackin_hw_output_V_last_V_ap_ack;
    sc_signal< sc_lv<2> > p_hw_output_y_scan_2_fu_189_p2;
    sc_signal< sc_lv<8> > p_309_fu_214_p1;
    sc_signal< sc_lv<8> > p_321_fu_222_p4;
    sc_signal< sc_lv<8> > p_345_fu_236_p4;
    sc_signal< sc_lv<7> > tmp_2_fu_260_p4;
    sc_signal< sc_lv<8> > p_317_fu_270_p3;
    sc_signal< sc_lv<9> > p_312_cast_fu_218_p1;
    sc_signal< sc_lv<9> > p_318_cast_fu_278_p1;
    sc_signal< sc_lv<7> > tmp_3_fu_288_p4;
    sc_signal< sc_lv<8> > p_329_fu_298_p3;
    sc_signal< sc_lv<9> > p_330_cast_cast_fu_306_p1;
    sc_signal< sc_lv<9> > p_324_cast_cast_fu_232_p1;
    sc_signal< sc_lv<7> > tmp_6_fu_336_p4;
    sc_signal< sc_lv<8> > p_353_fu_346_p3;
    sc_signal< sc_lv<9> > p_354_cast_cast_fu_354_p1;
    sc_signal< sc_lv<9> > p_348_cast_cast_fu_246_p1;
    sc_signal< sc_lv<1> > tmp_s_fu_364_p2;
    sc_signal< sc_lv<1> > tmp_mid2_fu_209_p3;
    sc_signal< sc_lv<10> > p_319_cast_fu_375_p1;
    sc_signal< sc_lv<10> > tmp1_cast_fu_378_p1;
    sc_signal< sc_lv<8> > p_341_fu_387_p3;
    sc_signal< sc_lv<10> > p_342_cast_cast_fu_394_p1;
    sc_signal< sc_lv<10> > tmp4_cast_fu_398_p1;
    sc_signal< sc_lv<8> > p_335_fu_410_p3;
    sc_signal< sc_lv<11> > p_336_cast_fu_417_p1;
    sc_signal< sc_lv<11> > p_331_cast_fu_407_p1;
    sc_signal< sc_lv<11> > tmp2_fu_421_p2;
    sc_signal< sc_lv<11> > tmp3_cast_fu_427_p1;
    sc_signal< sc_lv<12> > p_360_cast_fu_436_p1;
    sc_signal< sc_lv<12> > p_355_cast_fu_439_p1;
    sc_signal< sc_lv<12> > p_361_fu_442_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00001001();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack();
    void thread_exitcond8_fu_163_p2();
    void thread_exitcond_flatten_fu_151_p2();
    void thread_hw_output_V_last_V();
    void thread_hw_output_V_last_V_ap_vld();
    void thread_hw_output_V_last_V_blk_n();
    void thread_hw_output_V_value_V();
    void thread_hw_output_V_value_V_ap_vld();
    void thread_hw_output_V_value_V_blk_n();
    void thread_indvar_flatten_next_fu_157_p2();
    void thread_p_309_fu_214_p1();
    void thread_p_312_cast_fu_218_p1();
    void thread_p_317_fu_270_p3();
    void thread_p_318_cast_fu_278_p1();
    void thread_p_319_cast_fu_375_p1();
    void thread_p_319_fu_282_p2();
    void thread_p_321_fu_222_p4();
    void thread_p_324_cast_cast_fu_232_p1();
    void thread_p_329_fu_298_p3();
    void thread_p_330_cast_cast_fu_306_p1();
    void thread_p_331_cast_fu_407_p1();
    void thread_p_331_fu_381_p2();
    void thread_p_335_fu_410_p3();
    void thread_p_336_cast_fu_417_p1();
    void thread_p_341_fu_387_p3();
    void thread_p_342_cast_cast_fu_394_p1();
    void thread_p_345_fu_236_p4();
    void thread_p_348_cast_cast_fu_246_p1();
    void thread_p_353_fu_346_p3();
    void thread_p_354_cast_cast_fu_354_p1();
    void thread_p_355_cast_fu_439_p1();
    void thread_p_355_fu_430_p2();
    void thread_p_360_cast_fu_436_p1();
    void thread_p_361_fu_442_p2();
    void thread_p_hw_input_stencil_stream_V_value_V_blk_n();
    void thread_p_hw_input_stencil_stream_V_value_V_read();
    void thread_p_hw_output_x_scan_1_fu_203_p2();
    void thread_p_hw_output_x_scan_s_fu_169_p3();
    void thread_p_hw_output_y_scan_2_fu_189_p2();
    void thread_p_hw_output_y_scan_s_fu_195_p3();
    void thread_tmp1_cast_fu_378_p1();
    void thread_tmp1_fu_310_p2();
    void thread_tmp2_fu_421_p2();
    void thread_tmp3_cast_fu_427_p1();
    void thread_tmp3_fu_401_p2();
    void thread_tmp4_cast_fu_398_p1();
    void thread_tmp4_fu_358_p2();
    void thread_tmp5_fu_183_p2();
    void thread_tmp_2_fu_260_p4();
    void thread_tmp_3_fu_288_p4();
    void thread_tmp_6_fu_336_p4();
    void thread_tmp_last_V_fu_369_p2();
    void thread_tmp_mid1_fu_177_p2();
    void thread_tmp_mid2_fu_209_p3();
    void thread_tmp_s_fu_364_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

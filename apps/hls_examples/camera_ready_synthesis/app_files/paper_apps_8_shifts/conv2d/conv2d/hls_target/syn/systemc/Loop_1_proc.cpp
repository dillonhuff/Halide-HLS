// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state7 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_1_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const bool Loop_1_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<3> Loop_1_proc::ap_const_lv3_0 = "000";
const sc_lv<2> Loop_1_proc::ap_const_lv2_0 = "00";
const sc_lv<3> Loop_1_proc::ap_const_lv3_4 = "100";
const sc_lv<3> Loop_1_proc::ap_const_lv3_1 = "1";
const sc_lv<2> Loop_1_proc::ap_const_lv2_2 = "10";
const sc_lv<2> Loop_1_proc::ap_const_lv2_1 = "1";
const sc_lv<32> Loop_1_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_30 = "110000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_37 = "110111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_40 = "1000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_47 = "1000111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_E = "1110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1E = "11110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_20 = "100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_25 = "100101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_28 = "101000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2E = "101110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_38 = "111000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_3E = "111110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_B = "1011";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_459 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_459 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_459 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_459 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_151_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_exitcond8_fu_163_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_x_scan_2_reg_140 );
    sensitive << ( exitcond_flatten_fu_151_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_151_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_118 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );
    sensitive << ( ap_reg_pp0_iter3_tmp_last_V_reg_528 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_361_fu_442_p2 );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_459 );

    SC_METHOD(thread_indvar_flatten_next_fu_157_p2);
    sensitive << ( indvar_flatten_reg_118 );

    SC_METHOD(thread_p_309_fu_214_p1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_312_cast_fu_218_p1);
    sensitive << ( p_309_fu_214_p1 );

    SC_METHOD(thread_p_317_fu_270_p3);
    sensitive << ( tmp_2_fu_260_p4 );

    SC_METHOD(thread_p_318_cast_fu_278_p1);
    sensitive << ( p_317_fu_270_p3 );

    SC_METHOD(thread_p_319_cast_fu_375_p1);
    sensitive << ( p_319_reg_503 );

    SC_METHOD(thread_p_319_fu_282_p2);
    sensitive << ( p_312_cast_fu_218_p1 );
    sensitive << ( p_318_cast_fu_278_p1 );

    SC_METHOD(thread_p_321_fu_222_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_324_cast_cast_fu_232_p1);
    sensitive << ( p_321_fu_222_p4 );

    SC_METHOD(thread_p_329_fu_298_p3);
    sensitive << ( tmp_3_fu_288_p4 );

    SC_METHOD(thread_p_330_cast_cast_fu_306_p1);
    sensitive << ( p_329_fu_298_p3 );

    SC_METHOD(thread_p_331_cast_fu_407_p1);
    sensitive << ( p_331_reg_533 );

    SC_METHOD(thread_p_331_fu_381_p2);
    sensitive << ( p_319_cast_fu_375_p1 );
    sensitive << ( tmp1_cast_fu_378_p1 );

    SC_METHOD(thread_p_335_fu_410_p3);
    sensitive << ( ap_reg_pp0_iter2_tmp_4_reg_513 );

    SC_METHOD(thread_p_336_cast_fu_417_p1);
    sensitive << ( p_335_fu_410_p3 );

    SC_METHOD(thread_p_341_fu_387_p3);
    sensitive << ( tmp_5_reg_518 );

    SC_METHOD(thread_p_342_cast_cast_fu_394_p1);
    sensitive << ( p_341_fu_387_p3 );

    SC_METHOD(thread_p_345_fu_236_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_348_cast_cast_fu_246_p1);
    sensitive << ( p_345_fu_236_p4 );

    SC_METHOD(thread_p_353_fu_346_p3);
    sensitive << ( tmp_6_fu_336_p4 );

    SC_METHOD(thread_p_354_cast_cast_fu_354_p1);
    sensitive << ( p_353_fu_346_p3 );

    SC_METHOD(thread_p_355_cast_fu_439_p1);
    sensitive << ( p_355_reg_543 );

    SC_METHOD(thread_p_355_fu_430_p2);
    sensitive << ( tmp2_fu_421_p2 );
    sensitive << ( tmp3_cast_fu_427_p1 );

    SC_METHOD(thread_p_360_cast_fu_436_p1);
    sensitive << ( ap_reg_pp0_iter3_p_357_reg_498 );

    SC_METHOD(thread_p_361_fu_442_p2);
    sensitive << ( p_360_cast_fu_436_p1 );
    sensitive << ( p_355_cast_fu_439_p1 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_459 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_459 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_hw_output_x_scan_1_fu_203_p2);
    sensitive << ( p_hw_output_x_scan_s_fu_169_p3 );

    SC_METHOD(thread_p_hw_output_x_scan_s_fu_169_p3);
    sensitive << ( p_hw_output_x_scan_2_reg_140 );
    sensitive << ( exitcond8_fu_163_p2 );

    SC_METHOD(thread_p_hw_output_y_scan_2_fu_189_p2);
    sensitive << ( p_hw_output_y_scan_1_reg_129 );

    SC_METHOD(thread_p_hw_output_y_scan_s_fu_195_p3);
    sensitive << ( p_hw_output_y_scan_1_reg_129 );
    sensitive << ( exitcond8_fu_163_p2 );
    sensitive << ( p_hw_output_y_scan_2_fu_189_p2 );

    SC_METHOD(thread_tmp1_cast_fu_378_p1);
    sensitive << ( tmp1_reg_508 );

    SC_METHOD(thread_tmp1_fu_310_p2);
    sensitive << ( p_330_cast_cast_fu_306_p1 );
    sensitive << ( p_324_cast_cast_fu_232_p1 );

    SC_METHOD(thread_tmp2_fu_421_p2);
    sensitive << ( p_336_cast_fu_417_p1 );
    sensitive << ( p_331_cast_fu_407_p1 );

    SC_METHOD(thread_tmp3_cast_fu_427_p1);
    sensitive << ( tmp3_reg_538 );

    SC_METHOD(thread_tmp3_fu_401_p2);
    sensitive << ( p_342_cast_cast_fu_394_p1 );
    sensitive << ( tmp4_cast_fu_398_p1 );

    SC_METHOD(thread_tmp4_cast_fu_398_p1);
    sensitive << ( tmp4_reg_523 );

    SC_METHOD(thread_tmp4_fu_358_p2);
    sensitive << ( p_354_cast_cast_fu_354_p1 );
    sensitive << ( p_348_cast_cast_fu_246_p1 );

    SC_METHOD(thread_tmp5_fu_183_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_y_scan_1_reg_129 );
    sensitive << ( exitcond_flatten_fu_151_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_2_fu_260_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_3_fu_288_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_6_fu_336_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_last_V_fu_369_p2);
    sensitive << ( tmp_s_fu_364_p2 );
    sensitive << ( tmp_mid2_fu_209_p3 );

    SC_METHOD(thread_tmp_mid1_fu_177_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_y_scan_1_reg_129 );
    sensitive << ( exitcond_flatten_fu_151_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_mid2_fu_209_p3);
    sensitive << ( exitcond8_reg_468 );
    sensitive << ( tmp_mid1_reg_478 );
    sensitive << ( tmp5_reg_483 );

    SC_METHOD(thread_tmp_s_fu_364_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_459 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( p_hw_output_x_scan_s_reg_473 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_fu_151_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_dout, "(port)p_hw_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_empty_n, "(port)p_hw_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_read, "(port)p_hw_input_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_blk_n, "p_hw_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_459, "exitcond_flatten_reg_459");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_459, "ap_reg_pp0_iter3_exitcond_flatten_reg_459");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_118, "indvar_flatten_reg_118");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_reg_129, "p_hw_output_y_scan_1_reg_129");
    sc_trace(mVcdFile, p_hw_output_x_scan_2_reg_140, "p_hw_output_x_scan_2_reg_140");
    sc_trace(mVcdFile, exitcond_flatten_fu_151_p2, "exitcond_flatten_fu_151_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_459, "ap_reg_pp0_iter1_exitcond_flatten_reg_459");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_459, "ap_reg_pp0_iter2_exitcond_flatten_reg_459");
    sc_trace(mVcdFile, indvar_flatten_next_fu_157_p2, "indvar_flatten_next_fu_157_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond8_fu_163_p2, "exitcond8_fu_163_p2");
    sc_trace(mVcdFile, exitcond8_reg_468, "exitcond8_reg_468");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_fu_169_p3, "p_hw_output_x_scan_s_fu_169_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_reg_473, "p_hw_output_x_scan_s_reg_473");
    sc_trace(mVcdFile, tmp_mid1_fu_177_p2, "tmp_mid1_fu_177_p2");
    sc_trace(mVcdFile, tmp_mid1_reg_478, "tmp_mid1_reg_478");
    sc_trace(mVcdFile, tmp5_fu_183_p2, "tmp5_fu_183_p2");
    sc_trace(mVcdFile, tmp5_reg_483, "tmp5_reg_483");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_fu_195_p3, "p_hw_output_y_scan_s_fu_195_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_1_fu_203_p2, "p_hw_output_x_scan_1_fu_203_p2");
    sc_trace(mVcdFile, p_357_reg_498, "p_357_reg_498");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_357_reg_498, "ap_reg_pp0_iter2_p_357_reg_498");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_p_357_reg_498, "ap_reg_pp0_iter3_p_357_reg_498");
    sc_trace(mVcdFile, p_319_fu_282_p2, "p_319_fu_282_p2");
    sc_trace(mVcdFile, p_319_reg_503, "p_319_reg_503");
    sc_trace(mVcdFile, tmp1_fu_310_p2, "tmp1_fu_310_p2");
    sc_trace(mVcdFile, tmp1_reg_508, "tmp1_reg_508");
    sc_trace(mVcdFile, tmp_4_reg_513, "tmp_4_reg_513");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_4_reg_513, "ap_reg_pp0_iter2_tmp_4_reg_513");
    sc_trace(mVcdFile, tmp_5_reg_518, "tmp_5_reg_518");
    sc_trace(mVcdFile, tmp4_fu_358_p2, "tmp4_fu_358_p2");
    sc_trace(mVcdFile, tmp4_reg_523, "tmp4_reg_523");
    sc_trace(mVcdFile, tmp_last_V_fu_369_p2, "tmp_last_V_fu_369_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_528, "tmp_last_V_reg_528");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_last_V_reg_528, "ap_reg_pp0_iter2_tmp_last_V_reg_528");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_last_V_reg_528, "ap_reg_pp0_iter3_tmp_last_V_reg_528");
    sc_trace(mVcdFile, p_331_fu_381_p2, "p_331_fu_381_p2");
    sc_trace(mVcdFile, p_331_reg_533, "p_331_reg_533");
    sc_trace(mVcdFile, tmp3_fu_401_p2, "tmp3_fu_401_p2");
    sc_trace(mVcdFile, tmp3_reg_538, "tmp3_reg_538");
    sc_trace(mVcdFile, p_355_fu_430_p2, "p_355_fu_430_p2");
    sc_trace(mVcdFile, p_355_reg_543, "p_355_reg_543");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_fu_189_p2, "p_hw_output_y_scan_2_fu_189_p2");
    sc_trace(mVcdFile, p_309_fu_214_p1, "p_309_fu_214_p1");
    sc_trace(mVcdFile, p_321_fu_222_p4, "p_321_fu_222_p4");
    sc_trace(mVcdFile, p_345_fu_236_p4, "p_345_fu_236_p4");
    sc_trace(mVcdFile, tmp_2_fu_260_p4, "tmp_2_fu_260_p4");
    sc_trace(mVcdFile, p_317_fu_270_p3, "p_317_fu_270_p3");
    sc_trace(mVcdFile, p_312_cast_fu_218_p1, "p_312_cast_fu_218_p1");
    sc_trace(mVcdFile, p_318_cast_fu_278_p1, "p_318_cast_fu_278_p1");
    sc_trace(mVcdFile, tmp_3_fu_288_p4, "tmp_3_fu_288_p4");
    sc_trace(mVcdFile, p_329_fu_298_p3, "p_329_fu_298_p3");
    sc_trace(mVcdFile, p_330_cast_cast_fu_306_p1, "p_330_cast_cast_fu_306_p1");
    sc_trace(mVcdFile, p_324_cast_cast_fu_232_p1, "p_324_cast_cast_fu_232_p1");
    sc_trace(mVcdFile, tmp_6_fu_336_p4, "tmp_6_fu_336_p4");
    sc_trace(mVcdFile, p_353_fu_346_p3, "p_353_fu_346_p3");
    sc_trace(mVcdFile, p_354_cast_cast_fu_354_p1, "p_354_cast_cast_fu_354_p1");
    sc_trace(mVcdFile, p_348_cast_cast_fu_246_p1, "p_348_cast_cast_fu_246_p1");
    sc_trace(mVcdFile, tmp_s_fu_364_p2, "tmp_s_fu_364_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_209_p3, "tmp_mid2_fu_209_p3");
    sc_trace(mVcdFile, p_319_cast_fu_375_p1, "p_319_cast_fu_375_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_378_p1, "tmp1_cast_fu_378_p1");
    sc_trace(mVcdFile, p_341_fu_387_p3, "p_341_fu_387_p3");
    sc_trace(mVcdFile, p_342_cast_cast_fu_394_p1, "p_342_cast_cast_fu_394_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_398_p1, "tmp4_cast_fu_398_p1");
    sc_trace(mVcdFile, p_335_fu_410_p3, "p_335_fu_410_p3");
    sc_trace(mVcdFile, p_336_cast_fu_417_p1, "p_336_cast_fu_417_p1");
    sc_trace(mVcdFile, p_331_cast_fu_407_p1, "p_331_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp2_fu_421_p2, "tmp2_fu_421_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_427_p1, "tmp3_cast_fu_427_p1");
    sc_trace(mVcdFile, p_360_cast_fu_436_p1, "p_360_cast_fu_436_p1");
    sc_trace(mVcdFile, p_355_cast_fu_439_p1, "p_355_cast_fu_439_p1");
    sc_trace(mVcdFile, p_361_fu_442_p2, "p_361_fu_442_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_151_p2.read()))) {
        indvar_flatten_reg_118 = indvar_flatten_next_fu_157_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_118 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_151_p2.read()))) {
        p_hw_output_x_scan_2_reg_140 = p_hw_output_x_scan_1_fu_203_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_x_scan_2_reg_140 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_151_p2.read()))) {
        p_hw_output_y_scan_1_reg_129 = p_hw_output_y_scan_s_fu_195_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_y_scan_1_reg_129 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_459 = exitcond_flatten_reg_459.read();
        exitcond_flatten_reg_459 = exitcond_flatten_fu_151_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_459 = ap_reg_pp0_iter1_exitcond_flatten_reg_459.read();
        ap_reg_pp0_iter2_p_357_reg_498 = p_357_reg_498.read();
        ap_reg_pp0_iter2_tmp_4_reg_513 = tmp_4_reg_513.read();
        ap_reg_pp0_iter2_tmp_last_V_reg_528 = tmp_last_V_reg_528.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_459 = ap_reg_pp0_iter2_exitcond_flatten_reg_459.read();
        ap_reg_pp0_iter3_p_357_reg_498 = ap_reg_pp0_iter2_p_357_reg_498.read();
        ap_reg_pp0_iter3_tmp_last_V_reg_528 = ap_reg_pp0_iter2_tmp_last_V_reg_528.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_151_p2.read()))) {
        exitcond8_reg_468 = exitcond8_fu_163_p2.read();
        p_hw_output_x_scan_s_reg_473 = p_hw_output_x_scan_s_fu_169_p3.read();
        tmp5_reg_483 = tmp5_fu_183_p2.read();
        tmp_mid1_reg_478 = tmp_mid1_fu_177_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_319_reg_503 = p_319_fu_282_p2.read();
        p_357_reg_498 = p_hw_input_stencil_stream_V_value_V_dout.read().range(71, 64);
        tmp1_reg_508 = tmp1_fu_310_p2.read();
        tmp4_reg_523 = tmp4_fu_358_p2.read();
        tmp_4_reg_513 = p_hw_input_stencil_stream_V_value_V_dout.read().range(37, 32);
        tmp_5_reg_518 = p_hw_input_stencil_stream_V_value_V_dout.read().range(46, 40);
        tmp_last_V_reg_528 = tmp_last_V_fu_369_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_459.read()))) {
        p_331_reg_533 = p_331_fu_381_p2.read();
        tmp3_reg_538 = tmp3_fu_401_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_459.read()))) {
        p_355_reg_543 = p_355_fu_430_p2.read();
    }
}

void Loop_1_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()));
}

void Loop_1_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_151_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_exitcond8_fu_163_p2() {
    exitcond8_fu_163_p2 = (!p_hw_output_x_scan_2_reg_140.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_2_reg_140.read() == ap_const_lv2_2);
}

void Loop_1_proc::thread_exitcond_flatten_fu_151_p2() {
    exitcond_flatten_fu_151_p2 = (!indvar_flatten_reg_118.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_118.read() == ap_const_lv3_4);
}

void Loop_1_proc::thread_hw_output_V_last_V() {
    hw_output_V_last_V = ap_reg_pp0_iter3_tmp_last_V_reg_528.read();
}

void Loop_1_proc::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()))) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V() {
    hw_output_V_value_V = p_361_fu_442_p2.read().range(11, 4);
}

void Loop_1_proc::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_459.read()))) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_indvar_flatten_next_fu_157_p2() {
    indvar_flatten_next_fu_157_p2 = (!indvar_flatten_reg_118.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_118.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Loop_1_proc::thread_p_309_fu_214_p1() {
    p_309_fu_214_p1 = p_hw_input_stencil_stream_V_value_V_dout.read().range(8-1, 0);
}

void Loop_1_proc::thread_p_312_cast_fu_218_p1() {
    p_312_cast_fu_218_p1 = esl_zext<9,8>(p_309_fu_214_p1.read());
}

void Loop_1_proc::thread_p_317_fu_270_p3() {
    p_317_fu_270_p3 = esl_concat<7,1>(tmp_2_fu_260_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_318_cast_fu_278_p1() {
    p_318_cast_fu_278_p1 = esl_zext<9,8>(p_317_fu_270_p3.read());
}

void Loop_1_proc::thread_p_319_cast_fu_375_p1() {
    p_319_cast_fu_375_p1 = esl_zext<10,9>(p_319_reg_503.read());
}

void Loop_1_proc::thread_p_319_fu_282_p2() {
    p_319_fu_282_p2 = (!p_312_cast_fu_218_p1.read().is_01() || !p_318_cast_fu_278_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_312_cast_fu_218_p1.read()) + sc_biguint<9>(p_318_cast_fu_278_p1.read()));
}

void Loop_1_proc::thread_p_321_fu_222_p4() {
    p_321_fu_222_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(23, 16);
}

void Loop_1_proc::thread_p_324_cast_cast_fu_232_p1() {
    p_324_cast_cast_fu_232_p1 = esl_zext<9,8>(p_321_fu_222_p4.read());
}

void Loop_1_proc::thread_p_329_fu_298_p3() {
    p_329_fu_298_p3 = esl_concat<7,1>(tmp_3_fu_288_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_330_cast_cast_fu_306_p1() {
    p_330_cast_cast_fu_306_p1 = esl_zext<9,8>(p_329_fu_298_p3.read());
}

void Loop_1_proc::thread_p_331_cast_fu_407_p1() {
    p_331_cast_fu_407_p1 = esl_zext<11,10>(p_331_reg_533.read());
}

void Loop_1_proc::thread_p_331_fu_381_p2() {
    p_331_fu_381_p2 = (!p_319_cast_fu_375_p1.read().is_01() || !tmp1_cast_fu_378_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_319_cast_fu_375_p1.read()) + sc_biguint<10>(tmp1_cast_fu_378_p1.read()));
}

void Loop_1_proc::thread_p_335_fu_410_p3() {
    p_335_fu_410_p3 = esl_concat<6,2>(ap_reg_pp0_iter2_tmp_4_reg_513.read(), ap_const_lv2_0);
}

void Loop_1_proc::thread_p_336_cast_fu_417_p1() {
    p_336_cast_fu_417_p1 = esl_zext<11,8>(p_335_fu_410_p3.read());
}

void Loop_1_proc::thread_p_341_fu_387_p3() {
    p_341_fu_387_p3 = esl_concat<7,1>(tmp_5_reg_518.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_342_cast_cast_fu_394_p1() {
    p_342_cast_cast_fu_394_p1 = esl_zext<10,8>(p_341_fu_387_p3.read());
}

void Loop_1_proc::thread_p_345_fu_236_p4() {
    p_345_fu_236_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(55, 48);
}

void Loop_1_proc::thread_p_348_cast_cast_fu_246_p1() {
    p_348_cast_cast_fu_246_p1 = esl_zext<9,8>(p_345_fu_236_p4.read());
}

void Loop_1_proc::thread_p_353_fu_346_p3() {
    p_353_fu_346_p3 = esl_concat<7,1>(tmp_6_fu_336_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_354_cast_cast_fu_354_p1() {
    p_354_cast_cast_fu_354_p1 = esl_zext<9,8>(p_353_fu_346_p3.read());
}

void Loop_1_proc::thread_p_355_cast_fu_439_p1() {
    p_355_cast_fu_439_p1 = esl_zext<12,11>(p_355_reg_543.read());
}

void Loop_1_proc::thread_p_355_fu_430_p2() {
    p_355_fu_430_p2 = (!tmp2_fu_421_p2.read().is_01() || !tmp3_cast_fu_427_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp2_fu_421_p2.read()) + sc_biguint<11>(tmp3_cast_fu_427_p1.read()));
}

void Loop_1_proc::thread_p_360_cast_fu_436_p1() {
    p_360_cast_fu_436_p1 = esl_zext<12,8>(ap_reg_pp0_iter3_p_357_reg_498.read());
}

void Loop_1_proc::thread_p_361_fu_442_p2() {
    p_361_fu_442_p2 = (!p_360_cast_fu_436_p1.read().is_01() || !p_355_cast_fu_439_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_360_cast_fu_436_p1.read()) + sc_biguint<12>(p_355_cast_fu_439_p1.read()));
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0))) {
        p_hw_input_stencil_stream_V_value_V_blk_n = p_hw_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_hw_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_459.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_p_hw_output_x_scan_1_fu_203_p2() {
    p_hw_output_x_scan_1_fu_203_p2 = (!ap_const_lv2_1.is_01() || !p_hw_output_x_scan_s_fu_169_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(p_hw_output_x_scan_s_fu_169_p3.read()));
}

void Loop_1_proc::thread_p_hw_output_x_scan_s_fu_169_p3() {
    p_hw_output_x_scan_s_fu_169_p3 = (!exitcond8_fu_163_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond8_fu_163_p2.read()[0].to_bool())? ap_const_lv2_0: p_hw_output_x_scan_2_reg_140.read());
}

void Loop_1_proc::thread_p_hw_output_y_scan_2_fu_189_p2() {
    p_hw_output_y_scan_2_fu_189_p2 = (!ap_const_lv2_1.is_01() || !p_hw_output_y_scan_1_reg_129.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(p_hw_output_y_scan_1_reg_129.read()));
}

void Loop_1_proc::thread_p_hw_output_y_scan_s_fu_195_p3() {
    p_hw_output_y_scan_s_fu_195_p3 = (!exitcond8_fu_163_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond8_fu_163_p2.read()[0].to_bool())? p_hw_output_y_scan_2_fu_189_p2.read(): p_hw_output_y_scan_1_reg_129.read());
}

void Loop_1_proc::thread_tmp1_cast_fu_378_p1() {
    tmp1_cast_fu_378_p1 = esl_zext<10,9>(tmp1_reg_508.read());
}

void Loop_1_proc::thread_tmp1_fu_310_p2() {
    tmp1_fu_310_p2 = (!p_330_cast_cast_fu_306_p1.read().is_01() || !p_324_cast_cast_fu_232_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_330_cast_cast_fu_306_p1.read()) + sc_biguint<9>(p_324_cast_cast_fu_232_p1.read()));
}

void Loop_1_proc::thread_tmp2_fu_421_p2() {
    tmp2_fu_421_p2 = (!p_336_cast_fu_417_p1.read().is_01() || !p_331_cast_fu_407_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_336_cast_fu_417_p1.read()) + sc_biguint<11>(p_331_cast_fu_407_p1.read()));
}

void Loop_1_proc::thread_tmp3_cast_fu_427_p1() {
    tmp3_cast_fu_427_p1 = esl_zext<11,10>(tmp3_reg_538.read());
}

void Loop_1_proc::thread_tmp3_fu_401_p2() {
    tmp3_fu_401_p2 = (!p_342_cast_cast_fu_394_p1.read().is_01() || !tmp4_cast_fu_398_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_342_cast_cast_fu_394_p1.read()) + sc_biguint<10>(tmp4_cast_fu_398_p1.read()));
}

void Loop_1_proc::thread_tmp4_cast_fu_398_p1() {
    tmp4_cast_fu_398_p1 = esl_zext<10,9>(tmp4_reg_523.read());
}

void Loop_1_proc::thread_tmp4_fu_358_p2() {
    tmp4_fu_358_p2 = (!p_354_cast_cast_fu_354_p1.read().is_01() || !p_348_cast_cast_fu_246_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_354_cast_cast_fu_354_p1.read()) + sc_biguint<9>(p_348_cast_cast_fu_246_p1.read()));
}

void Loop_1_proc::thread_tmp5_fu_183_p2() {
    tmp5_fu_183_p2 = (!p_hw_output_y_scan_1_reg_129.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_reg_129.read() == ap_const_lv2_1);
}

void Loop_1_proc::thread_tmp_2_fu_260_p4() {
    tmp_2_fu_260_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(14, 8);
}

void Loop_1_proc::thread_tmp_3_fu_288_p4() {
    tmp_3_fu_288_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(30, 24);
}

void Loop_1_proc::thread_tmp_6_fu_336_p4() {
    tmp_6_fu_336_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(62, 56);
}

void Loop_1_proc::thread_tmp_last_V_fu_369_p2() {
    tmp_last_V_fu_369_p2 = (tmp_s_fu_364_p2.read() & tmp_mid2_fu_209_p3.read());
}

void Loop_1_proc::thread_tmp_mid1_fu_177_p2() {
    tmp_mid1_fu_177_p2 = (!p_hw_output_y_scan_1_reg_129.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_reg_129.read() == ap_const_lv2_0);
}

void Loop_1_proc::thread_tmp_mid2_fu_209_p3() {
    tmp_mid2_fu_209_p3 = (!exitcond8_reg_468.read()[0].is_01())? sc_lv<1>(): ((exitcond8_reg_468.read()[0].to_bool())? tmp_mid1_reg_478.read(): tmp5_reg_483.read());
}

void Loop_1_proc::thread_tmp_s_fu_364_p2() {
    tmp_s_fu_364_p2 = (!p_hw_output_x_scan_s_reg_473.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_s_reg_473.read() == ap_const_lv2_1);
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_151_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_151_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_4_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_4_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_4_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_4_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_4_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_4_proc::ap_ST_fsm_state6 = "100";
const sc_lv<32> Loop_4_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_4_proc::ap_const_boolean_1 = true;
const bool Loop_4_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_4_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_4_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_4_proc::ap_const_lv1_1 = "1";
const sc_lv<3> Loop_4_proc::ap_const_lv3_0 = "000";
const sc_lv<2> Loop_4_proc::ap_const_lv2_0 = "00";
const sc_lv<3> Loop_4_proc::ap_const_lv3_4 = "100";
const sc_lv<3> Loop_4_proc::ap_const_lv3_1 = "1";
const sc_lv<2> Loop_4_proc::ap_const_lv2_2 = "10";
const sc_lv<2> Loop_4_proc::ap_const_lv2_1 = "1";
const sc_lv<32> Loop_4_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_4_proc::ap_const_lv32_7 = "111";
const sc_lv<4> Loop_4_proc::ap_const_lv4_0 = "0000";
const sc_lv<32> Loop_4_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_4_proc::ap_const_lv32_3 = "11";

Loop_4_proc::Loop_4_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_307 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_127_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_exitcond6_fu_139_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_x_scan_2_reg_116 );
    sensitive << ( exitcond_flatten_fu_127_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_127_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_94 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );
    sensitive << ( ap_reg_pp0_iter2_tmp_last_V_reg_367 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );
    sensitive << ( ap_reg_pp0_iter2_p_435_reg_346 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_447_cast_fu_297_p1 );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_307 );

    SC_METHOD(thread_indvar_flatten_next_fu_133_p2);
    sensitive << ( indvar_flatten_reg_94 );

    SC_METHOD(thread_p_435_fu_190_p1);
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_438_fu_204_p1);
    sensitive << ( p_s_fu_194_p4 );

    SC_METHOD(thread_p_439_fu_214_p2);
    sensitive << ( p_435_fu_190_p1 );
    sensitive << ( p_438_fu_204_p1 );

    SC_METHOD(thread_p_442_fu_251_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_307 );
    sensitive << ( tmp_12_reg_357 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_443_fu_208_p2);
    sensitive << ( p_435_fu_190_p1 );
    sensitive << ( p_438_fu_204_p1 );

    SC_METHOD(thread_p_444_fu_256_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_307 );
    sensitive << ( tmp_13_reg_362 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_447_cast_fu_297_p1);
    sensitive << ( p_447_fu_290_p3 );

    SC_METHOD(thread_p_447_fu_290_p3);
    sensitive << ( p_442_reg_372 );
    sensitive << ( tmp_fu_261_p4 );
    sensitive << ( tmp_5_cast_fu_286_p1 );

    SC_METHOD(thread_p_delayed_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_p_delayed_input_stencil_stream_V_value_V_read);
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_hw_output_x_scan_1_fu_179_p2);
    sensitive << ( p_hw_output_x_scan_s_fu_145_p3 );

    SC_METHOD(thread_p_hw_output_x_scan_s_fu_145_p3);
    sensitive << ( p_hw_output_x_scan_2_reg_116 );
    sensitive << ( exitcond6_fu_139_p2 );

    SC_METHOD(thread_p_hw_output_y_scan_2_fu_165_p2);
    sensitive << ( p_hw_output_y_scan_1_reg_105 );

    SC_METHOD(thread_p_hw_output_y_scan_s_fu_171_p3);
    sensitive << ( p_hw_output_y_scan_1_reg_105 );
    sensitive << ( exitcond6_fu_139_p2 );
    sensitive << ( p_hw_output_y_scan_2_fu_165_p2 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_read);
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_s_fu_194_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_14_fu_270_p4);
    sensitive << ( ap_reg_pp0_iter2_p_439_reg_351 );

    SC_METHOD(thread_tmp_15_fu_279_p3);
    sensitive << ( p_444_reg_377 );
    sensitive << ( tmp_14_fu_270_p4 );

    SC_METHOD(thread_tmp_1_fu_159_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_y_scan_1_reg_105 );
    sensitive << ( exitcond_flatten_fu_127_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_3_mid1_fu_153_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_y_scan_1_reg_105 );
    sensitive << ( exitcond_flatten_fu_127_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_3_mid2_fu_185_p3);
    sensitive << ( exitcond6_reg_316 );
    sensitive << ( tmp_3_mid1_reg_326 );
    sensitive << ( tmp_1_reg_331 );

    SC_METHOD(thread_tmp_5_cast_fu_286_p1);
    sensitive << ( tmp_15_fu_279_p3 );

    SC_METHOD(thread_tmp_fu_261_p4);
    sensitive << ( ap_reg_pp0_iter2_p_439_reg_351 );

    SC_METHOD(thread_tmp_last_V_fu_245_p2);
    sensitive << ( tmp_s_fu_240_p2 );
    sensitive << ( tmp_3_mid2_fu_185_p3 );

    SC_METHOD(thread_tmp_s_fu_240_p2);
    sensitive << ( exitcond_flatten_reg_307 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( p_hw_output_x_scan_s_reg_321 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_127_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_4_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_dout, "(port)p_mul_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_empty_n, "(port)p_mul_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_read, "(port)p_mul_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_dout, "(port)p_delayed_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_empty_n, "(port)p_delayed_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_read, "(port)p_delayed_input_stencil_stream_V_value_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_307, "exitcond_flatten_reg_307");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_307, "ap_reg_pp0_iter2_exitcond_flatten_reg_307");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_blk_n, "p_mul_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_blk_n, "p_delayed_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_94, "indvar_flatten_reg_94");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_reg_105, "p_hw_output_y_scan_1_reg_105");
    sc_trace(mVcdFile, p_hw_output_x_scan_2_reg_116, "p_hw_output_x_scan_2_reg_116");
    sc_trace(mVcdFile, exitcond_flatten_fu_127_p2, "exitcond_flatten_fu_127_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_307, "ap_reg_pp0_iter1_exitcond_flatten_reg_307");
    sc_trace(mVcdFile, indvar_flatten_next_fu_133_p2, "indvar_flatten_next_fu_133_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond6_fu_139_p2, "exitcond6_fu_139_p2");
    sc_trace(mVcdFile, exitcond6_reg_316, "exitcond6_reg_316");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_fu_145_p3, "p_hw_output_x_scan_s_fu_145_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_reg_321, "p_hw_output_x_scan_s_reg_321");
    sc_trace(mVcdFile, tmp_3_mid1_fu_153_p2, "tmp_3_mid1_fu_153_p2");
    sc_trace(mVcdFile, tmp_3_mid1_reg_326, "tmp_3_mid1_reg_326");
    sc_trace(mVcdFile, tmp_1_fu_159_p2, "tmp_1_fu_159_p2");
    sc_trace(mVcdFile, tmp_1_reg_331, "tmp_1_reg_331");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_fu_171_p3, "p_hw_output_y_scan_s_fu_171_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_1_fu_179_p2, "p_hw_output_x_scan_1_fu_179_p2");
    sc_trace(mVcdFile, p_435_fu_190_p1, "p_435_fu_190_p1");
    sc_trace(mVcdFile, p_435_reg_346, "p_435_reg_346");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_435_reg_346, "ap_reg_pp0_iter2_p_435_reg_346");
    sc_trace(mVcdFile, p_439_fu_214_p2, "p_439_fu_214_p2");
    sc_trace(mVcdFile, p_439_reg_351, "p_439_reg_351");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_439_reg_351, "ap_reg_pp0_iter2_p_439_reg_351");
    sc_trace(mVcdFile, tmp_12_reg_357, "tmp_12_reg_357");
    sc_trace(mVcdFile, tmp_13_reg_362, "tmp_13_reg_362");
    sc_trace(mVcdFile, tmp_last_V_fu_245_p2, "tmp_last_V_fu_245_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_367, "tmp_last_V_reg_367");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_last_V_reg_367, "ap_reg_pp0_iter2_tmp_last_V_reg_367");
    sc_trace(mVcdFile, p_442_fu_251_p2, "p_442_fu_251_p2");
    sc_trace(mVcdFile, p_442_reg_372, "p_442_reg_372");
    sc_trace(mVcdFile, p_444_fu_256_p2, "p_444_fu_256_p2");
    sc_trace(mVcdFile, p_444_reg_377, "p_444_reg_377");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_fu_165_p2, "p_hw_output_y_scan_2_fu_165_p2");
    sc_trace(mVcdFile, p_s_fu_194_p4, "p_s_fu_194_p4");
    sc_trace(mVcdFile, p_438_fu_204_p1, "p_438_fu_204_p1");
    sc_trace(mVcdFile, p_443_fu_208_p2, "p_443_fu_208_p2");
    sc_trace(mVcdFile, tmp_s_fu_240_p2, "tmp_s_fu_240_p2");
    sc_trace(mVcdFile, tmp_3_mid2_fu_185_p3, "tmp_3_mid2_fu_185_p3");
    sc_trace(mVcdFile, tmp_14_fu_270_p4, "tmp_14_fu_270_p4");
    sc_trace(mVcdFile, tmp_15_fu_279_p3, "tmp_15_fu_279_p3");
    sc_trace(mVcdFile, tmp_fu_261_p4, "tmp_fu_261_p4");
    sc_trace(mVcdFile, tmp_5_cast_fu_286_p1, "tmp_5_cast_fu_286_p1");
    sc_trace(mVcdFile, p_447_fu_290_p3, "p_447_fu_290_p3");
    sc_trace(mVcdFile, p_447_cast_fu_297_p1, "p_447_cast_fu_297_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_4_proc::~Loop_4_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_4_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_127_p2.read()))) {
        indvar_flatten_reg_94 = indvar_flatten_next_fu_133_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_94 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_127_p2.read()))) {
        p_hw_output_x_scan_2_reg_116 = p_hw_output_x_scan_1_fu_179_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_x_scan_2_reg_116 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_127_p2.read()))) {
        p_hw_output_y_scan_1_reg_105 = p_hw_output_y_scan_s_fu_171_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_y_scan_1_reg_105 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_307 = exitcond_flatten_reg_307.read();
        exitcond_flatten_reg_307 = exitcond_flatten_fu_127_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_307 = ap_reg_pp0_iter1_exitcond_flatten_reg_307.read();
        ap_reg_pp0_iter2_p_435_reg_346 = p_435_reg_346.read();
        ap_reg_pp0_iter2_p_439_reg_351 = p_439_reg_351.read();
        ap_reg_pp0_iter2_tmp_last_V_reg_367 = tmp_last_V_reg_367.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_127_p2.read()))) {
        exitcond6_reg_316 = exitcond6_fu_139_p2.read();
        p_hw_output_x_scan_s_reg_321 = p_hw_output_x_scan_s_fu_145_p3.read();
        tmp_1_reg_331 = tmp_1_fu_159_p2.read();
        tmp_3_mid1_reg_326 = tmp_3_mid1_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_435_reg_346 = p_435_fu_190_p1.read();
        p_439_reg_351 = p_439_fu_214_p2.read();
        tmp_12_reg_357 = p_439_fu_214_p2.read().range(7, 4);
        tmp_13_reg_362 = p_443_fu_208_p2.read().range(7, 4);
        tmp_last_V_reg_367 = tmp_last_V_fu_245_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_307.read()))) {
        p_442_reg_372 = p_442_fu_251_p2.read();
        p_444_reg_377 = p_444_fu_256_p2.read();
    }
}

void Loop_4_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_4_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_4_proc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read()))));
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void Loop_4_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_4_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())));
}

void Loop_4_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()));
}

void Loop_4_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_127_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_4_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_4_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_exitcond6_fu_139_p2() {
    exitcond6_fu_139_p2 = (!p_hw_output_x_scan_2_reg_116.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_2_reg_116.read() == ap_const_lv2_2);
}

void Loop_4_proc::thread_exitcond_flatten_fu_127_p2() {
    exitcond_flatten_fu_127_p2 = (!indvar_flatten_reg_94.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_94.read() == ap_const_lv3_4);
}

void Loop_4_proc::thread_hw_output_V_last_V() {
    hw_output_V_last_V = ap_reg_pp0_iter2_tmp_last_V_reg_367.read();
}

void Loop_4_proc::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_hw_output_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_hw_output_V_value_V() {
    hw_output_V_value_V = (!p_447_cast_fu_297_p1.read().is_01() || !ap_reg_pp0_iter2_p_435_reg_346.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_447_cast_fu_297_p1.read()) + sc_biguint<8>(ap_reg_pp0_iter2_p_435_reg_346.read()));
}

void Loop_4_proc::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_hw_output_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_indvar_flatten_next_fu_133_p2() {
    indvar_flatten_next_fu_133_p2 = (!indvar_flatten_reg_94.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_94.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Loop_4_proc::thread_p_435_fu_190_p1() {
    p_435_fu_190_p1 = p_delayed_input_stencil_stream_V_value_V_dout.read().range(8-1, 0);
}

void Loop_4_proc::thread_p_438_fu_204_p1() {
    p_438_fu_204_p1 = esl_zext<8,4>(p_s_fu_194_p4.read());
}

void Loop_4_proc::thread_p_439_fu_214_p2() {
    p_439_fu_214_p2 = (!p_435_fu_190_p1.read().is_01() || !p_438_fu_204_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_435_fu_190_p1.read()) - sc_biguint<8>(p_438_fu_204_p1.read()));
}

void Loop_4_proc::thread_p_442_fu_251_p2() {
    p_442_fu_251_p2 = (!tmp_12_reg_357.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_reg_357.read() != ap_const_lv4_0);
}

void Loop_4_proc::thread_p_443_fu_208_p2() {
    p_443_fu_208_p2 = (!p_438_fu_204_p1.read().is_01() || !p_435_fu_190_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_438_fu_204_p1.read()) - sc_biguint<8>(p_435_fu_190_p1.read()));
}

void Loop_4_proc::thread_p_444_fu_256_p2() {
    p_444_fu_256_p2 = (!tmp_13_reg_362.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_reg_362.read() != ap_const_lv4_0);
}

void Loop_4_proc::thread_p_447_cast_fu_297_p1() {
    p_447_cast_fu_297_p1 = esl_zext<8,6>(p_447_fu_290_p3.read());
}

void Loop_4_proc::thread_p_447_fu_290_p3() {
    p_447_fu_290_p3 = (!p_442_reg_372.read()[0].is_01())? sc_lv<6>(): ((p_442_reg_372.read()[0].to_bool())? tmp_fu_261_p4.read(): tmp_5_cast_fu_286_p1.read());
}

void Loop_4_proc::thread_p_delayed_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
        p_delayed_input_stencil_stream_V_value_V_blk_n = p_delayed_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_delayed_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_p_delayed_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_delayed_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_delayed_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_p_hw_output_x_scan_1_fu_179_p2() {
    p_hw_output_x_scan_1_fu_179_p2 = (!ap_const_lv2_1.is_01() || !p_hw_output_x_scan_s_fu_145_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(p_hw_output_x_scan_s_fu_145_p3.read()));
}

void Loop_4_proc::thread_p_hw_output_x_scan_s_fu_145_p3() {
    p_hw_output_x_scan_s_fu_145_p3 = (!exitcond6_fu_139_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond6_fu_139_p2.read()[0].to_bool())? ap_const_lv2_0: p_hw_output_x_scan_2_reg_116.read());
}

void Loop_4_proc::thread_p_hw_output_y_scan_2_fu_165_p2() {
    p_hw_output_y_scan_2_fu_165_p2 = (!ap_const_lv2_1.is_01() || !p_hw_output_y_scan_1_reg_105.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(p_hw_output_y_scan_1_reg_105.read()));
}

void Loop_4_proc::thread_p_hw_output_y_scan_s_fu_171_p3() {
    p_hw_output_y_scan_s_fu_171_p3 = (!exitcond6_fu_139_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond6_fu_139_p2.read()[0].to_bool())? p_hw_output_y_scan_2_fu_165_p2.read(): p_hw_output_y_scan_1_reg_105.read());
}

void Loop_4_proc::thread_p_mul_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0))) {
        p_mul_stencil_stream_V_value_V_blk_n = p_mul_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_mul_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_p_mul_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_307.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_p_s_fu_194_p4() {
    p_s_fu_194_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(7, 4);
}

void Loop_4_proc::thread_tmp_14_fu_270_p4() {
    tmp_14_fu_270_p4 = ap_reg_pp0_iter2_p_439_reg_351.read().range(3, 2);
}

void Loop_4_proc::thread_tmp_15_fu_279_p3() {
    tmp_15_fu_279_p3 = (!p_444_reg_377.read()[0].is_01())? sc_lv<2>(): ((p_444_reg_377.read()[0].to_bool())? tmp_14_fu_270_p4.read(): ap_const_lv2_0);
}

void Loop_4_proc::thread_tmp_1_fu_159_p2() {
    tmp_1_fu_159_p2 = (!p_hw_output_y_scan_1_reg_105.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_reg_105.read() == ap_const_lv2_1);
}

void Loop_4_proc::thread_tmp_3_mid1_fu_153_p2() {
    tmp_3_mid1_fu_153_p2 = (!p_hw_output_y_scan_1_reg_105.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_reg_105.read() == ap_const_lv2_0);
}

void Loop_4_proc::thread_tmp_3_mid2_fu_185_p3() {
    tmp_3_mid2_fu_185_p3 = (!exitcond6_reg_316.read()[0].is_01())? sc_lv<1>(): ((exitcond6_reg_316.read()[0].to_bool())? tmp_3_mid1_reg_326.read(): tmp_1_reg_331.read());
}

void Loop_4_proc::thread_tmp_5_cast_fu_286_p1() {
    tmp_5_cast_fu_286_p1 = esl_zext<6,2>(tmp_15_fu_279_p3.read());
}

void Loop_4_proc::thread_tmp_fu_261_p4() {
    tmp_fu_261_p4 = ap_reg_pp0_iter2_p_439_reg_351.read().range(7, 2);
}

void Loop_4_proc::thread_tmp_last_V_fu_245_p2() {
    tmp_last_V_fu_245_p2 = (tmp_s_fu_240_p2.read() & tmp_3_mid2_fu_185_p3.read());
}

void Loop_4_proc::thread_tmp_s_fu_240_p2() {
    tmp_s_fu_240_p2 = (!p_hw_output_x_scan_s_reg_321.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_s_reg_321.read() == ap_const_lv2_1);
}

void Loop_4_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_127_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_127_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


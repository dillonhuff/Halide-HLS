

================================================================
== Vivado HLS Report for 'hls_target'
================================================================
* Date:           Tue Mar 17 20:00:03 2020

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        sharpen
* Solution:       hls_target
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.60|      7.94|        0.70|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   33|   33|   34|   34| dataflow |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 1
  DF-Pipeline-0: Size = 8, States = { 1 2 3 4 5 6 7 8 }

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: p_hw_input_stencil_st (11)  [1/1] 0.00ns  loc: hls_target.cpp:52
codeRepl:6  %p_hw_input_stencil_st = alloca i72, align 8

ST_1: p_hw_input_stencil_st_3 (15)  [1/1] 0.00ns
codeRepl:10  %p_hw_input_stencil_st_3 = alloca i72, align 8

ST_1: p_hw_input_stencil_st_4 (19)  [1/1] 0.00ns
codeRepl:14  %p_hw_input_stencil_st_4 = alloca i72, align 8

ST_1: p_delayed_input_stenc (23)  [1/1] 0.00ns  loc: hls_target.cpp:82
codeRepl:18  %p_delayed_input_stenc = alloca i32, align 4

ST_1: p_mul_stencil_stream_s (27)  [1/1] 0.00ns  loc: hls_target.cpp:190
codeRepl:22  %p_mul_stencil_stream_s = alloca i32, align 4

ST_1: StgValue_14 (33)  [2/2] 0.00ns  loc: hls_target.cpp:56
codeRepl:28  call fastcc void @linebuffer.1(i8* %hw_input_V_value_V, i1* %hw_input_V_last_V, i72* %p_hw_input_stencil_st)


 <State 2>: 0.00ns
ST_2: StgValue_15 (33)  [1/2] 0.00ns  loc: hls_target.cpp:56
codeRepl:28  call fastcc void @linebuffer.1(i8* %hw_input_V_value_V, i1* %hw_input_V_last_V, i72* %p_hw_input_stencil_st)


 <State 3>: 0.00ns
ST_3: StgValue_16 (34)  [2/2] 0.00ns
codeRepl:29  call fastcc void @Loop_1_proc(i72* %p_hw_input_stencil_st, i72* %p_hw_input_stencil_st_3, i72* %p_hw_input_stencil_st_4)


 <State 4>: 0.00ns
ST_4: StgValue_17 (34)  [1/2] 0.00ns
codeRepl:29  call fastcc void @Loop_1_proc(i72* %p_hw_input_stencil_st, i72* %p_hw_input_stencil_st_3, i72* %p_hw_input_stencil_st_4)


 <State 5>: 0.00ns
ST_5: StgValue_18 (35)  [2/2] 0.00ns
codeRepl:30  call fastcc void @Loop_2_proc(i72* %p_hw_input_stencil_st_3, i32* %p_delayed_input_stenc)

ST_5: StgValue_19 (36)  [2/2] 0.00ns
codeRepl:31  call fastcc void @Loop_3_proc(i72* %p_hw_input_stencil_st_4, i32* %p_mul_stencil_stream_s)


 <State 6>: 0.00ns
ST_6: StgValue_20 (35)  [1/2] 0.00ns
codeRepl:30  call fastcc void @Loop_2_proc(i72* %p_hw_input_stencil_st_3, i32* %p_delayed_input_stenc)

ST_6: StgValue_21 (36)  [1/2] 0.00ns
codeRepl:31  call fastcc void @Loop_3_proc(i72* %p_hw_input_stencil_st_4, i32* %p_mul_stencil_stream_s)


 <State 7>: 0.00ns
ST_7: StgValue_22 (37)  [2/2] 0.00ns
codeRepl:32  call fastcc void @Loop_4_proc(i8* %hw_output_V_value_V, i1* %hw_output_V_last_V, i32* %p_mul_stencil_stream_s, i32* %p_delayed_input_stenc)


 <State 8>: 2.32ns
ST_8: StgValue_23 (5)  [1/1] 0.00ns  loc: hls_target.cpp:9
codeRepl:0  call void (...)* @_ssdm_op_SpecDataflowPipeline(i32 -1, [1 x i8]* @p_str) nounwind

ST_8: StgValue_24 (6)  [1/1] 0.00ns
codeRepl:1  call void (...)* @_ssdm_op_SpecBitsMap(i8* %hw_input_V_value_V), !map !106

ST_8: StgValue_25 (7)  [1/1] 0.00ns
codeRepl:2  call void (...)* @_ssdm_op_SpecBitsMap(i1* %hw_input_V_last_V), !map !110

ST_8: StgValue_26 (8)  [1/1] 0.00ns
codeRepl:3  call void (...)* @_ssdm_op_SpecBitsMap(i8* %hw_output_V_value_V), !map !114

ST_8: StgValue_27 (9)  [1/1] 0.00ns
codeRepl:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %hw_output_V_last_V), !map !118

ST_8: StgValue_28 (10)  [1/1] 0.00ns
codeRepl:5  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @hls_target_str) nounwind

ST_8: empty (12)  [1/1] 0.00ns
codeRepl:7  %empty = call i32 (...)* @_ssdm_op_SpecChannel([35 x i8]* @p_hw_input_stencil_st_2, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i72* %p_hw_input_stencil_st, i72* %p_hw_input_stencil_st)

ST_8: StgValue_30 (13)  [1/1] 0.00ns
codeRepl:8  call void (...)* @_ssdm_op_SpecInterface(i72* %p_hw_input_stencil_st, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_31 (14)  [1/1] 0.00ns  loc: hls_target.cpp:54
codeRepl:9  call void (...)* @_ssdm_op_SpecMemCore(i72* %p_hw_input_stencil_st, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: empty_21 (16)  [1/1] 0.00ns
codeRepl:11  %empty_21 = call i32 (...)* @_ssdm_op_SpecChannel([52 x i8]* @p_hw_input_stencil_st_1, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i72* %p_hw_input_stencil_st_3, i72* %p_hw_input_stencil_st_3)

ST_8: StgValue_33 (17)  [1/1] 0.00ns
codeRepl:12  call void (...)* @_ssdm_op_SpecInterface(i72* %p_hw_input_stencil_st_3, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_34 (18)  [1/1] 0.00ns  loc: hls_target.cpp:61
codeRepl:13  call void (...)* @_ssdm_op_SpecMemCore(i72* %p_hw_input_stencil_st_3, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: empty_22 (20)  [1/1] 0.00ns
codeRepl:15  %empty_22 = call i32 (...)* @_ssdm_op_SpecChannel([42 x i8]* @p_hw_input_stencil_st, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i72* %p_hw_input_stencil_st_4, i72* %p_hw_input_stencil_st_4)

ST_8: StgValue_36 (21)  [1/1] 0.00ns
codeRepl:16  call void (...)* @_ssdm_op_SpecInterface(i72* %p_hw_input_stencil_st_4, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_37 (22)  [1/1] 0.00ns  loc: hls_target.cpp:65
codeRepl:17  call void (...)* @_ssdm_op_SpecMemCore(i72* %p_hw_input_stencil_st_4, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: empty_23 (24)  [1/1] 0.00ns
codeRepl:19  %empty_23 = call i32 (...)* @_ssdm_op_SpecChannel([40 x i8]* @p_delayed_input_stenc, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i32* %p_delayed_input_stenc, i32* %p_delayed_input_stenc)

ST_8: StgValue_39 (25)  [1/1] 0.00ns
codeRepl:20  call void (...)* @_ssdm_op_SpecInterface(i32* %p_delayed_input_stenc, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_40 (26)  [1/1] 0.00ns  loc: hls_target.cpp:84
codeRepl:21  call void (...)* @_ssdm_op_SpecMemCore(i32* %p_delayed_input_stenc, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: empty_24 (28)  [1/1] 0.00ns
codeRepl:23  %empty_24 = call i32 (...)* @_ssdm_op_SpecChannel([30 x i8]* @p_mul_stencil_stream_s, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i32* %p_mul_stencil_stream_s, i32* %p_mul_stencil_stream_s)

ST_8: StgValue_42 (29)  [1/1] 0.00ns
codeRepl:24  call void (...)* @_ssdm_op_SpecInterface(i32* %p_mul_stencil_stream_s, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_43 (30)  [1/1] 0.00ns  loc: hls_target.cpp:192
codeRepl:25  call void (...)* @_ssdm_op_SpecMemCore(i32* %p_mul_stencil_stream_s, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_8: StgValue_44 (31)  [1/1] 0.00ns  loc: hls_target.cpp:11
codeRepl:26  call void (...)* @_ssdm_op_SpecInterface(i8* %hw_input_V_value_V, i1* %hw_input_V_last_V, [6 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_8: StgValue_45 (32)  [1/1] 0.00ns  loc: hls_target.cpp:12
codeRepl:27  call void (...)* @_ssdm_op_SpecInterface(i8* %hw_output_V_value_V, i1* %hw_output_V_last_V, [6 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str) nounwind

ST_8: StgValue_46 (37)  [1/2] 2.32ns
codeRepl:32  call fastcc void @Loop_4_proc(i8* %hw_output_V_value_V, i1* %hw_output_V_last_V, i32* %p_mul_stencil_stream_s, i32* %p_delayed_input_stenc)

ST_8: StgValue_47 (38)  [1/1] 0.00ns  loc: hls_target.cpp:343
codeRepl:33  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.6ns, clock uncertainty: 0.7ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 2.32ns
The critical path consists of the following:
	'call' operation to 'Loop_4_proc' [37]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

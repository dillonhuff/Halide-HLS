// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "linebuffer_Block_pr.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic linebuffer_Block_pr::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic linebuffer_Block_pr::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> linebuffer_Block_pr::ap_ST_fsm_state1 = "1";
const sc_lv<3> linebuffer_Block_pr::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> linebuffer_Block_pr::ap_ST_fsm_state5 = "100";
const sc_lv<32> linebuffer_Block_pr::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool linebuffer_Block_pr::ap_const_boolean_1 = true;
const sc_lv<32> linebuffer_Block_pr::ap_const_lv32_1 = "1";
const bool linebuffer_Block_pr::ap_const_boolean_0 = false;
const sc_lv<1> linebuffer_Block_pr::ap_const_lv1_0 = "0";
const sc_lv<1> linebuffer_Block_pr::ap_const_lv1_1 = "1";
const sc_lv<3> linebuffer_Block_pr::ap_const_lv3_0 = "000";
const sc_lv<2> linebuffer_Block_pr::ap_const_lv2_0 = "00";
const sc_lv<3> linebuffer_Block_pr::ap_const_lv3_4 = "100";
const sc_lv<3> linebuffer_Block_pr::ap_const_lv3_1 = "1";
const sc_lv<2> linebuffer_Block_pr::ap_const_lv2_2 = "10";
const sc_lv<2> linebuffer_Block_pr::ap_const_lv2_1 = "1";
const sc_lv<32> linebuffer_Block_pr::ap_const_lv32_2 = "10";

linebuffer_Block_pr::linebuffer_Block_pr(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( out_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( out_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( out_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_323 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);
    sensitive << ( out_stream_V_value_V_full_n );
    sensitive << ( or_cond_i_i_i_i_reg_377 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_119_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_buffer_1_1_value_V_1_fu_214_p3);
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_343 );
    sensitive << ( tmp_value_V_1_reg_369 );
    sensitive << ( buffer_1_1_value_V_11_fu_68 );

    SC_METHOD(thread_buffer_1_1_value_V_2_fu_220_p3);
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_343 );
    sensitive << ( tmp_value_V_1_reg_369 );
    sensitive << ( buffer_1_1_value_V_10_fu_64 );

    SC_METHOD(thread_buffer_1_1_value_V_3_fu_232_p3);
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_343 );
    sensitive << ( tmp_value_V_1_reg_369 );
    sensitive << ( buffer_1_1_value_V_4_fu_56 );

    SC_METHOD(thread_buffer_1_1_value_V_5_fu_238_p3);
    sensitive << ( tmp_reg_361 );
    sensitive << ( buffer_1_1_value_V_11_fu_68 );
    sensitive << ( buffer_1_1_value_V_1_fu_214_p3 );

    SC_METHOD(thread_buffer_1_1_value_V_6_fu_245_p3);
    sensitive << ( tmp_reg_361 );
    sensitive << ( buffer_1_1_value_V_10_fu_64 );
    sensitive << ( buffer_1_1_value_V_2_fu_220_p3 );

    SC_METHOD(thread_buffer_1_1_value_V_7_fu_252_p3);
    sensitive << ( tmp_reg_361 );
    sensitive << ( buffer_1_1_value_V_9_fu_60 );
    sensitive << ( buffer_1_1_value_V_fu_226_p3 );

    SC_METHOD(thread_buffer_1_1_value_V_8_fu_259_p3);
    sensitive << ( tmp_reg_361 );
    sensitive << ( buffer_1_1_value_V_4_fu_56 );
    sensitive << ( buffer_1_1_value_V_3_fu_232_p3 );

    SC_METHOD(thread_buffer_1_1_value_V_fu_226_p3);
    sensitive << ( ap_reg_pp0_iter1_tmp_5_reg_343 );
    sensitive << ( tmp_value_V_1_reg_369 );
    sensitive << ( buffer_1_1_value_V_9_fu_60 );

    SC_METHOD(thread_exitcond_flatten_fu_119_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_85 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_idx_0_0_i_i_i_i_mid2_fu_137_p3);
    sensitive << ( idx_0_0_i_i_i_i_reg_108 );
    sensitive << ( tmp_1_fu_131_p2 );

    SC_METHOD(thread_idx_0_fu_149_p2);
    sensitive << ( idx_0_0_i_i_i_i_mid2_fu_137_p3 );

    SC_METHOD(thread_idx_1_0_i_i_i_i_phi_fu_100_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( idx_1_0_i_i_i_i_reg_96 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_323 );
    sensitive << ( idx_1_0_i_i_i_i_t_mi_reg_356 );

    SC_METHOD(thread_idx_1_0_i_i_i_i_t_mi_fu_180_p3);
    sensitive << ( tmp_1_reg_332 );
    sensitive << ( idx_1_0_i_i_i_i_phi_fu_100_p4 );
    sensitive << ( idx_s_fu_174_p2 );

    SC_METHOD(thread_idx_s_fu_174_p2);
    sensitive << ( idx_1_0_i_i_i_i_phi_fu_100_p4 );

    SC_METHOD(thread_in_stream_V_value_V_blk_n);
    sensitive << ( in_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_323 );

    SC_METHOD(thread_in_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_indvar_flatten_next_fu_125_p2);
    sensitive << ( indvar_flatten_reg_85 );

    SC_METHOD(thread_or_cond_i_i_i_i_fu_196_p2);
    sensitive << ( tmp_7_mid2_fu_167_p3 );
    sensitive << ( tmp_s_fu_191_p2 );

    SC_METHOD(thread_out_stream_V_value_V_blk_n);
    sensitive << ( out_stream_V_value_V_full_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );

    SC_METHOD(thread_out_stream_V_value_V_din);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( buffer_1_1_value_V_8_fu_259_p3 );
    sensitive << ( buffer_1_1_value_V_7_fu_252_p3 );
    sensitive << ( buffer_1_1_value_V_6_fu_245_p3 );
    sensitive << ( buffer_1_1_value_V_5_fu_238_p3 );

    SC_METHOD(thread_out_stream_V_value_V_write);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( or_cond_i_i_i_i_reg_377 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_tmp_1_fu_131_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( idx_0_0_i_i_i_i_reg_108 );
    sensitive << ( exitcond_flatten_fu_119_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_4_fu_161_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( tmp_1_reg_332 );
    sensitive << ( idx_1_0_i_i_i_i_phi_fu_100_p4 );

    SC_METHOD(thread_tmp_5_fu_145_p1);
    sensitive << ( idx_0_0_i_i_i_i_mid2_fu_137_p3 );

    SC_METHOD(thread_tmp_7_mid1_fu_155_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( tmp_1_reg_332 );
    sensitive << ( idx_1_0_i_i_i_i_phi_fu_100_p4 );

    SC_METHOD(thread_tmp_7_mid2_fu_167_p3);
    sensitive << ( tmp_1_reg_332 );
    sensitive << ( tmp_7_mid1_fu_155_p2 );
    sensitive << ( tmp_4_fu_161_p2 );

    SC_METHOD(thread_tmp_fu_187_p1);
    sensitive << ( idx_1_0_i_i_i_i_t_mi_fu_180_p3 );

    SC_METHOD(thread_tmp_s_fu_191_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_323 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( idx_0_0_i_i_i_i_mid2_reg_338 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_flatten_fu_119_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "linebuffer_Block_pr_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_stream_V_value_V_dout, "(port)in_stream_V_value_V_dout");
    sc_trace(mVcdFile, in_stream_V_value_V_empty_n, "(port)in_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, in_stream_V_value_V_read, "(port)in_stream_V_value_V_read");
    sc_trace(mVcdFile, out_stream_V_value_V_din, "(port)out_stream_V_value_V_din");
    sc_trace(mVcdFile, out_stream_V_value_V_full_n, "(port)out_stream_V_value_V_full_n");
    sc_trace(mVcdFile, out_stream_V_value_V_write, "(port)out_stream_V_value_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_stream_V_value_V_blk_n, "in_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_323, "exitcond_flatten_reg_323");
    sc_trace(mVcdFile, out_stream_V_value_V_blk_n, "out_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, or_cond_i_i_i_i_reg_377, "or_cond_i_i_i_i_reg_377");
    sc_trace(mVcdFile, indvar_flatten_reg_85, "indvar_flatten_reg_85");
    sc_trace(mVcdFile, idx_1_0_i_i_i_i_reg_96, "idx_1_0_i_i_i_i_reg_96");
    sc_trace(mVcdFile, idx_0_0_i_i_i_i_reg_108, "idx_0_0_i_i_i_i_reg_108");
    sc_trace(mVcdFile, exitcond_flatten_fu_119_p2, "exitcond_flatten_fu_119_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_323, "ap_reg_pp0_iter1_exitcond_flatten_reg_323");
    sc_trace(mVcdFile, indvar_flatten_next_fu_125_p2, "indvar_flatten_next_fu_125_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_1_fu_131_p2, "tmp_1_fu_131_p2");
    sc_trace(mVcdFile, tmp_1_reg_332, "tmp_1_reg_332");
    sc_trace(mVcdFile, idx_0_0_i_i_i_i_mid2_fu_137_p3, "idx_0_0_i_i_i_i_mid2_fu_137_p3");
    sc_trace(mVcdFile, idx_0_0_i_i_i_i_mid2_reg_338, "idx_0_0_i_i_i_i_mid2_reg_338");
    sc_trace(mVcdFile, tmp_5_fu_145_p1, "tmp_5_fu_145_p1");
    sc_trace(mVcdFile, tmp_5_reg_343, "tmp_5_reg_343");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_tmp_5_reg_343, "ap_reg_pp0_iter1_tmp_5_reg_343");
    sc_trace(mVcdFile, idx_0_fu_149_p2, "idx_0_fu_149_p2");
    sc_trace(mVcdFile, idx_1_0_i_i_i_i_t_mi_fu_180_p3, "idx_1_0_i_i_i_i_t_mi_fu_180_p3");
    sc_trace(mVcdFile, idx_1_0_i_i_i_i_t_mi_reg_356, "idx_1_0_i_i_i_i_t_mi_reg_356");
    sc_trace(mVcdFile, tmp_fu_187_p1, "tmp_fu_187_p1");
    sc_trace(mVcdFile, tmp_reg_361, "tmp_reg_361");
    sc_trace(mVcdFile, tmp_value_V_1_reg_369, "tmp_value_V_1_reg_369");
    sc_trace(mVcdFile, or_cond_i_i_i_i_fu_196_p2, "or_cond_i_i_i_i_fu_196_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, idx_1_0_i_i_i_i_phi_fu_100_p4, "idx_1_0_i_i_i_i_phi_fu_100_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, buffer_1_1_value_V_4_fu_56, "buffer_1_1_value_V_4_fu_56");
    sc_trace(mVcdFile, buffer_1_1_value_V_8_fu_259_p3, "buffer_1_1_value_V_8_fu_259_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_9_fu_60, "buffer_1_1_value_V_9_fu_60");
    sc_trace(mVcdFile, buffer_1_1_value_V_7_fu_252_p3, "buffer_1_1_value_V_7_fu_252_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_10_fu_64, "buffer_1_1_value_V_10_fu_64");
    sc_trace(mVcdFile, buffer_1_1_value_V_6_fu_245_p3, "buffer_1_1_value_V_6_fu_245_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_11_fu_68, "buffer_1_1_value_V_11_fu_68");
    sc_trace(mVcdFile, buffer_1_1_value_V_5_fu_238_p3, "buffer_1_1_value_V_5_fu_238_p3");
    sc_trace(mVcdFile, tmp_7_mid1_fu_155_p2, "tmp_7_mid1_fu_155_p2");
    sc_trace(mVcdFile, tmp_4_fu_161_p2, "tmp_4_fu_161_p2");
    sc_trace(mVcdFile, idx_s_fu_174_p2, "idx_s_fu_174_p2");
    sc_trace(mVcdFile, tmp_7_mid2_fu_167_p3, "tmp_7_mid2_fu_167_p3");
    sc_trace(mVcdFile, tmp_s_fu_191_p2, "tmp_s_fu_191_p2");
    sc_trace(mVcdFile, buffer_1_1_value_V_1_fu_214_p3, "buffer_1_1_value_V_1_fu_214_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_2_fu_220_p3, "buffer_1_1_value_V_2_fu_220_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_fu_226_p3, "buffer_1_1_value_V_fu_226_p3");
    sc_trace(mVcdFile, buffer_1_1_value_V_3_fu_232_p3, "buffer_1_1_value_V_3_fu_232_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

linebuffer_Block_pr::~linebuffer_Block_pr() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void linebuffer_Block_pr::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_119_p2.read()))) {
        idx_0_0_i_i_i_i_reg_108 = idx_0_fu_149_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        idx_0_0_i_i_i_i_reg_108 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_323.read()))) {
        idx_1_0_i_i_i_i_reg_96 = idx_1_0_i_i_i_i_t_mi_reg_356.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        idx_1_0_i_i_i_i_reg_96 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_119_p2.read()))) {
        indvar_flatten_reg_85 = indvar_flatten_next_fu_125_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_85 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_323 = exitcond_flatten_reg_323.read();
        ap_reg_pp0_iter1_tmp_5_reg_343 = tmp_5_reg_343.read();
        exitcond_flatten_reg_323 = exitcond_flatten_fu_119_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_323.read()))) {
        buffer_1_1_value_V_10_fu_64 = buffer_1_1_value_V_6_fu_245_p3.read();
        buffer_1_1_value_V_11_fu_68 = buffer_1_1_value_V_5_fu_238_p3.read();
        buffer_1_1_value_V_4_fu_56 = buffer_1_1_value_V_8_fu_259_p3.read();
        buffer_1_1_value_V_9_fu_60 = buffer_1_1_value_V_7_fu_252_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_119_p2.read()))) {
        idx_0_0_i_i_i_i_mid2_reg_338 = idx_0_0_i_i_i_i_mid2_fu_137_p3.read();
        tmp_1_reg_332 = tmp_1_fu_131_p2.read();
        tmp_5_reg_343 = tmp_5_fu_145_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        idx_1_0_i_i_i_i_t_mi_reg_356 = idx_1_0_i_i_i_i_t_mi_fu_180_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        or_cond_i_i_i_i_reg_377 = or_cond_i_i_i_i_fu_196_p2.read();
        tmp_reg_361 = tmp_fu_187_p1.read();
        tmp_value_V_1_reg_369 = in_stream_V_value_V_dout.read();
    }
}

void linebuffer_Block_pr::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void linebuffer_Block_pr::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void linebuffer_Block_pr::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[2];
}

void linebuffer_Block_pr::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linebuffer_Block_pr::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_value_V_full_n.read())));
}

void linebuffer_Block_pr::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_value_V_full_n.read())));
}

void linebuffer_Block_pr::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_value_V_full_n.read())));
}

void linebuffer_Block_pr::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void linebuffer_Block_pr::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void linebuffer_Block_pr::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_value_V_empty_n.read()));
}

void linebuffer_Block_pr::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = (esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_value_V_full_n.read()));
}

void linebuffer_Block_pr::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_119_p2.read())) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void linebuffer_Block_pr::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void linebuffer_Block_pr::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_1_fu_214_p3() {
    buffer_1_1_value_V_1_fu_214_p3 = (!ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].to_bool())? tmp_value_V_1_reg_369.read(): buffer_1_1_value_V_11_fu_68.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_2_fu_220_p3() {
    buffer_1_1_value_V_2_fu_220_p3 = (!ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].to_bool())? buffer_1_1_value_V_10_fu_64.read(): tmp_value_V_1_reg_369.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_3_fu_232_p3() {
    buffer_1_1_value_V_3_fu_232_p3 = (!ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].to_bool())? buffer_1_1_value_V_4_fu_56.read(): tmp_value_V_1_reg_369.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_5_fu_238_p3() {
    buffer_1_1_value_V_5_fu_238_p3 = (!tmp_reg_361.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_361.read()[0].to_bool())? buffer_1_1_value_V_1_fu_214_p3.read(): buffer_1_1_value_V_11_fu_68.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_6_fu_245_p3() {
    buffer_1_1_value_V_6_fu_245_p3 = (!tmp_reg_361.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_361.read()[0].to_bool())? buffer_1_1_value_V_2_fu_220_p3.read(): buffer_1_1_value_V_10_fu_64.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_7_fu_252_p3() {
    buffer_1_1_value_V_7_fu_252_p3 = (!tmp_reg_361.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_361.read()[0].to_bool())? buffer_1_1_value_V_9_fu_60.read(): buffer_1_1_value_V_fu_226_p3.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_8_fu_259_p3() {
    buffer_1_1_value_V_8_fu_259_p3 = (!tmp_reg_361.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_361.read()[0].to_bool())? buffer_1_1_value_V_4_fu_56.read(): buffer_1_1_value_V_3_fu_232_p3.read());
}

void linebuffer_Block_pr::thread_buffer_1_1_value_V_fu_226_p3() {
    buffer_1_1_value_V_fu_226_p3 = (!ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].is_01())? sc_lv<32>(): ((ap_reg_pp0_iter1_tmp_5_reg_343.read()[0].to_bool())? tmp_value_V_1_reg_369.read(): buffer_1_1_value_V_9_fu_60.read());
}

void linebuffer_Block_pr::thread_exitcond_flatten_fu_119_p2() {
    exitcond_flatten_fu_119_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_85.read() == ap_const_lv3_4);
}

void linebuffer_Block_pr::thread_idx_0_0_i_i_i_i_mid2_fu_137_p3() {
    idx_0_0_i_i_i_i_mid2_fu_137_p3 = (!tmp_1_fu_131_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_1_fu_131_p2.read()[0].to_bool())? ap_const_lv2_0: idx_0_0_i_i_i_i_reg_108.read());
}

void linebuffer_Block_pr::thread_idx_0_fu_149_p2() {
    idx_0_fu_149_p2 = (!idx_0_0_i_i_i_i_mid2_fu_137_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(idx_0_0_i_i_i_i_mid2_fu_137_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void linebuffer_Block_pr::thread_idx_1_0_i_i_i_i_phi_fu_100_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_323.read()))) {
        idx_1_0_i_i_i_i_phi_fu_100_p4 = idx_1_0_i_i_i_i_t_mi_reg_356.read();
    } else {
        idx_1_0_i_i_i_i_phi_fu_100_p4 = idx_1_0_i_i_i_i_reg_96.read();
    }
}

void linebuffer_Block_pr::thread_idx_1_0_i_i_i_i_t_mi_fu_180_p3() {
    idx_1_0_i_i_i_i_t_mi_fu_180_p3 = (!tmp_1_reg_332.read()[0].is_01())? sc_lv<2>(): ((tmp_1_reg_332.read()[0].to_bool())? idx_s_fu_174_p2.read(): idx_1_0_i_i_i_i_phi_fu_100_p4.read());
}

void linebuffer_Block_pr::thread_idx_s_fu_174_p2() {
    idx_s_fu_174_p2 = (!ap_const_lv2_1.is_01() || !idx_1_0_i_i_i_i_phi_fu_100_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(idx_1_0_i_i_i_i_phi_fu_100_p4.read()));
}

void linebuffer_Block_pr::thread_in_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0))) {
        in_stream_V_value_V_blk_n = in_stream_V_value_V_empty_n.read();
    } else {
        in_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void linebuffer_Block_pr::thread_in_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_323.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        in_stream_V_value_V_read = ap_const_logic_1;
    } else {
        in_stream_V_value_V_read = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_indvar_flatten_next_fu_125_p2() {
    indvar_flatten_next_fu_125_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_85.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void linebuffer_Block_pr::thread_or_cond_i_i_i_i_fu_196_p2() {
    or_cond_i_i_i_i_fu_196_p2 = (tmp_7_mid2_fu_167_p3.read() & tmp_s_fu_191_p2.read());
}

void linebuffer_Block_pr::thread_out_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1))) {
        out_stream_V_value_V_blk_n = out_stream_V_value_V_full_n.read();
    } else {
        out_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void linebuffer_Block_pr::thread_out_stream_V_value_V_din() {
    out_stream_V_value_V_din = esl_concat<96,32>(esl_concat<64,32>(esl_concat<32,32>(buffer_1_1_value_V_5_fu_238_p3.read(), buffer_1_1_value_V_6_fu_245_p3.read()), buffer_1_1_value_V_7_fu_252_p3.read()), buffer_1_1_value_V_8_fu_259_p3.read());
}

void linebuffer_Block_pr::thread_out_stream_V_value_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(or_cond_i_i_i_i_reg_377.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        out_stream_V_value_V_write = ap_const_logic_1;
    } else {
        out_stream_V_value_V_write = ap_const_logic_0;
    }
}

void linebuffer_Block_pr::thread_tmp_1_fu_131_p2() {
    tmp_1_fu_131_p2 = (!idx_0_0_i_i_i_i_reg_108.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(idx_0_0_i_i_i_i_reg_108.read() == ap_const_lv2_2);
}

void linebuffer_Block_pr::thread_tmp_4_fu_161_p2() {
    tmp_4_fu_161_p2 = (!idx_1_0_i_i_i_i_phi_fu_100_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(idx_1_0_i_i_i_i_phi_fu_100_p4.read() == ap_const_lv2_1);
}

void linebuffer_Block_pr::thread_tmp_5_fu_145_p1() {
    tmp_5_fu_145_p1 = idx_0_0_i_i_i_i_mid2_fu_137_p3.read().range(1-1, 0);
}

void linebuffer_Block_pr::thread_tmp_7_mid1_fu_155_p2() {
    tmp_7_mid1_fu_155_p2 = (!idx_1_0_i_i_i_i_phi_fu_100_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(idx_1_0_i_i_i_i_phi_fu_100_p4.read() == ap_const_lv2_0);
}

void linebuffer_Block_pr::thread_tmp_7_mid2_fu_167_p3() {
    tmp_7_mid2_fu_167_p3 = (!tmp_1_reg_332.read()[0].is_01())? sc_lv<1>(): ((tmp_1_reg_332.read()[0].to_bool())? tmp_7_mid1_fu_155_p2.read(): tmp_4_fu_161_p2.read());
}

void linebuffer_Block_pr::thread_tmp_fu_187_p1() {
    tmp_fu_187_p1 = idx_1_0_i_i_i_i_t_mi_fu_180_p3.read().range(1-1, 0);
}

void linebuffer_Block_pr::thread_tmp_s_fu_191_p2() {
    tmp_s_fu_191_p2 = (!idx_0_0_i_i_i_i_mid2_reg_338.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(idx_0_0_i_i_i_i_mid2_reg_338.read() == ap_const_lv2_1);
}

void linebuffer_Block_pr::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_119_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_119_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


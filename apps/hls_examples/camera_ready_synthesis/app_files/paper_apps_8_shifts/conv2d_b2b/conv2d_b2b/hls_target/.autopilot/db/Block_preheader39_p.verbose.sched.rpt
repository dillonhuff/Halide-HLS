

================================================================
== Vivado HLS Report for 'Block_preheader39_p'
================================================================
* Date:           Sun Mar 15 19:01:26 2020

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        conv2d_b2b
* Solution:       hls_target
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.60|      4.77|        0.70|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|    2|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 3
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
* FSM state operations: 

 <State 1>: 4.77ns
ST_1: p_p2_mul1_stencil_str (6)  [1/1] 0.00ns  loc: hls_target.cpp:173
newFuncRoot:2  %p_p2_mul1_stencil_str = alloca i32, align 4

ST_1: tmp_value_V (11)  [1/1] 2.45ns  loc: hls_target.cpp:186
newFuncRoot:7  %tmp_value_V = call i128 @_ssdm_op_Read.ap_fifo.volatile.i128P(i128* %p_mul_stencil_stream_V_value_V)

ST_1: p_s (12)  [1/1] 0.00ns  loc: hls_target.cpp:197
newFuncRoot:8  %p_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_value_V, i32 4, i32 11)

ST_1: p_315_cast (13)  [1/1] 0.00ns  loc: hls_target.cpp:205
newFuncRoot:9  %p_315_cast = zext i8 %p_s to i9

ST_1: tmp_6 (14)  [1/1] 0.00ns  loc: hls_target.cpp:186
newFuncRoot:10  %tmp_6 = call i6 @_ssdm_op_PartSelect.i6.i128.i32.i32(i128 %tmp_value_V, i32 36, i32 41)

ST_1: p_8 (15)  [1/1] 0.00ns  loc: hls_target.cpp:206
newFuncRoot:11  %p_8 = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %tmp_6, i2 0)

ST_1: p_323_cast (16)  [1/1] 0.00ns  loc: hls_target.cpp:208
newFuncRoot:12  %p_323_cast = zext i8 %p_8 to i9

ST_1: p_9 (17)  [1/1] 2.32ns  loc: hls_target.cpp:208
newFuncRoot:13  %p_9 = add i9 %p_323_cast, %p_315_cast

ST_1: tmp_7 (19)  [1/1] 0.00ns  loc: hls_target.cpp:186
newFuncRoot:15  %tmp_7 = call i7 @_ssdm_op_PartSelect.i7.i128.i32.i32(i128 %tmp_value_V, i32 68, i32 74)

ST_1: p_10 (20)  [1/1] 0.00ns  loc: hls_target.cpp:215
newFuncRoot:16  %p_10 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %tmp_7, i1 false)

ST_1: p_331_cast_cast (21)  [1/1] 0.00ns  loc: hls_target.cpp:221
newFuncRoot:17  %p_331_cast_cast = zext i8 %p_10 to i9

ST_1: p_11 (22)  [1/1] 0.00ns  loc: hls_target.cpp:224
newFuncRoot:18  %p_11 = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tmp_value_V, i32 100, i32 107)

ST_1: p_339_cast_cast (23)  [1/1] 0.00ns  loc: hls_target.cpp:226
newFuncRoot:19  %p_339_cast_cast = zext i8 %p_11 to i9

ST_1: tmp (24)  [1/1] 2.32ns  loc: hls_target.cpp:226
newFuncRoot:20  %tmp = add i9 %p_339_cast_cast, %p_331_cast_cast


 <State 2>: 4.77ns
ST_2: p_324_cast (18)  [1/1] 0.00ns  loc: hls_target.cpp:208
newFuncRoot:14  %p_324_cast = zext i9 %p_9 to i10

ST_2: tmp_cast (25)  [1/1] 0.00ns  loc: hls_target.cpp:226
newFuncRoot:21  %tmp_cast = zext i9 %tmp to i10

ST_2: tmp_value_V_6 (26)  [1/1] 2.32ns  loc: hls_target.cpp:226
newFuncRoot:22  %tmp_value_V_6 = add i10 %p_324_cast, %tmp_cast

ST_2: tmp_value_V_7 (27)  [1/1] 0.00ns  loc: hls_target.cpp:226
newFuncRoot:23  %tmp_value_V_7 = zext i10 %tmp_value_V_6 to i32

ST_2: StgValue_22 (28)  [1/1] 2.45ns  loc: hls_target.cpp:228
newFuncRoot:24  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %p_p2_mul1_stencil_str, i32 %tmp_value_V_7)


 <State 3>: 2.45ns
ST_3: StgValue_23 (4)  [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecMemCore(i128* %p_mul_stencil_stream_V_value_V, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_3: StgValue_24 (5)  [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i128* %p_mul_stencil_stream_V_value_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_3: empty (7)  [1/1] 0.00ns
newFuncRoot:3  %empty = call i32 (...)* @_ssdm_op_SpecChannel([35 x i8]* @p_p2_mul1_stencil_str, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 1, i32 1, i32* %p_p2_mul1_stencil_str, i32* %p_p2_mul1_stencil_str)

ST_3: StgValue_26 (8)  [1/1] 0.00ns
newFuncRoot:4  call void (...)* @_ssdm_op_SpecInterface(i32* %p_p2_mul1_stencil_str, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_3: StgValue_27 (9)  [1/1] 0.00ns  loc: hls_target.cpp:175
newFuncRoot:5  call void (...)* @_ssdm_op_SpecMemCore(i32* %p_p2_mul1_stencil_str, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_3: empty_99 (10)  [1/1] 0.00ns
newFuncRoot:6  %empty_99 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_3: empty_100 (29)  [1/1] 0.00ns
newFuncRoot:25  %empty_100 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_3: empty_101 (30)  [1/1] 0.00ns
newFuncRoot:26  %empty_101 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_3: tmp_value_V_8 (31)  [1/1] 2.45ns  loc: hls_target.cpp:245
newFuncRoot:27  %tmp_value_V_8 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %p_p2_mul1_stencil_str)

ST_3: tmp_value_V_9 (32)  [1/1] 0.00ns  loc: hls_target.cpp:252
newFuncRoot:28  %tmp_value_V_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_value_V_8, i32 3, i32 10)

ST_3: StgValue_33 (33)  [1/1] 0.00ns  loc: hls_target.cpp:260
newFuncRoot:29  call void @_ssdm_op_Write.ap_auto.volatile.i8P.i1P(i8* %hw_output_V_value_V, i1* %hw_output_V_last_V, i8 %tmp_value_V_9, i1 true)

ST_3: empty_102 (34)  [1/1] 0.00ns
newFuncRoot:30  %empty_102 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1)

ST_3: StgValue_35 (35)  [1/1] 0.00ns
newFuncRoot:31  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.6ns, clock uncertainty: 0.7ns.

 <State 1>: 4.77ns
The critical path consists of the following:
	fifo read on port 'p_mul_stencil_stream_V_value_V' (hls_target.cpp:186) [11]  (2.45 ns)
	'add' operation ('tmp', hls_target.cpp:226) [24]  (2.32 ns)

 <State 2>: 4.77ns
The critical path consists of the following:
	'add' operation ('tmp.value.V', hls_target.cpp:226) [26]  (2.32 ns)
	fifo write on port '_p2_mul1_stencil_stream_to_hw_output.V.value.V', hls_target.cpp:173 (hls_target.cpp:228) [28]  (2.45 ns)

 <State 3>: 2.45ns
The critical path consists of the following:
	fifo read on port '_p2_mul1_stencil_stream_to_hw_output.V.value.V', hls_target.cpp:173 (hls_target.cpp:245) [31]  (2.45 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_preheader39_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_preheader39_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_preheader39_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Block_preheader39_p::ap_ST_fsm_state1 = "1";
const sc_lv<3> Block_preheader39_p::ap_ST_fsm_state2 = "10";
const sc_lv<3> Block_preheader39_p::ap_ST_fsm_state3 = "100";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_2 = "10";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_1 = "1";
const sc_lv<1> Block_preheader39_p::ap_const_lv1_1 = "1";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_4 = "100";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_B = "1011";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_24 = "100100";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_29 = "101001";
const sc_lv<2> Block_preheader39_p::ap_const_lv2_0 = "00";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_44 = "1000100";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_4A = "1001010";
const sc_lv<1> Block_preheader39_p::ap_const_lv1_0 = "0";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_64 = "1100100";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_6B = "1101011";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_3 = "11";
const sc_lv<32> Block_preheader39_p::ap_const_lv32_A = "1010";
const bool Block_preheader39_p::ap_const_boolean_1 = true;

Block_preheader39_p::Block_preheader39_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_p2_mul1_stencil_str_fifo_U = new fifo_w32_d1_S("p_p2_mul1_stencil_str_fifo_U");
    p_p2_mul1_stencil_str_fifo_U->clk(ap_clk);
    p_p2_mul1_stencil_str_fifo_U->reset(ap_rst);
    p_p2_mul1_stencil_str_fifo_U->if_read_ce(ap_var_for_const0);
    p_p2_mul1_stencil_str_fifo_U->if_write_ce(ap_var_for_const0);
    p_p2_mul1_stencil_str_fifo_U->if_din(p_p2_mul1_stencil_str_din);
    p_p2_mul1_stencil_str_fifo_U->if_full_n(p_p2_mul1_stencil_str_full_n);
    p_p2_mul1_stencil_str_fifo_U->if_write(p_p2_mul1_stencil_str_write);
    p_p2_mul1_stencil_str_fifo_U->if_dout(p_p2_mul1_stencil_str_dout);
    p_p2_mul1_stencil_str_fifo_U->if_empty_n(p_p2_mul1_stencil_str_empty_n);
    p_p2_mul1_stencil_str_fifo_U->if_read(p_p2_mul1_stencil_str_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_dout );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_p_10_fu_164_p3);
    sensitive << ( tmp_7_fu_154_p4 );

    SC_METHOD(thread_p_11_fu_176_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_315_cast_fu_122_p1);
    sensitive << ( p_s_fu_112_p4 );

    SC_METHOD(thread_p_323_cast_fu_144_p1);
    sensitive << ( p_8_fu_136_p3 );

    SC_METHOD(thread_p_324_cast_fu_196_p1);
    sensitive << ( p_9_reg_230 );

    SC_METHOD(thread_p_331_cast_cast_fu_172_p1);
    sensitive << ( p_10_fu_164_p3 );

    SC_METHOD(thread_p_339_cast_cast_fu_186_p1);
    sensitive << ( p_11_fu_176_p4 );

    SC_METHOD(thread_p_8_fu_136_p3);
    sensitive << ( tmp_6_fu_126_p4 );

    SC_METHOD(thread_p_9_fu_148_p2);
    sensitive << ( p_323_cast_fu_144_p1 );
    sensitive << ( p_315_cast_fu_122_p1 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );

    SC_METHOD(thread_p_p2_mul1_stencil_str_din);
    sensitive << ( p_p2_mul1_stencil_str_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_value_V_6_fu_202_p2 );

    SC_METHOD(thread_p_p2_mul1_stencil_str_read);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_p_p2_mul1_stencil_str_write);
    sensitive << ( p_p2_mul1_stencil_str_full_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_s_fu_112_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_6_fu_126_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_7_fu_154_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_cast_fu_199_p1);
    sensitive << ( tmp_reg_235 );

    SC_METHOD(thread_tmp_fu_190_p2);
    sensitive << ( p_339_cast_cast_fu_186_p1 );
    sensitive << ( p_331_cast_cast_fu_172_p1 );

    SC_METHOD(thread_tmp_value_V_6_fu_202_p2);
    sensitive << ( p_324_cast_fu_196_p1 );
    sensitive << ( tmp_cast_fu_199_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_p2_mul1_stencil_str_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_p2_mul1_stencil_str_empty_n );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_THREAD(thread_ap_var_for_const0);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_preheader39_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_dout, "(port)p_mul_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_empty_n, "(port)p_mul_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_read, "(port)p_mul_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_blk_n, "p_mul_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, p_9_fu_148_p2, "p_9_fu_148_p2");
    sc_trace(mVcdFile, p_9_reg_230, "p_9_reg_230");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_fu_190_p2, "tmp_fu_190_p2");
    sc_trace(mVcdFile, tmp_reg_235, "tmp_reg_235");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_din, "p_p2_mul1_stencil_str_din");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_full_n, "p_p2_mul1_stencil_str_full_n");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_write, "p_p2_mul1_stencil_str_write");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_dout, "p_p2_mul1_stencil_str_dout");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_empty_n, "p_p2_mul1_stencil_str_empty_n");
    sc_trace(mVcdFile, p_p2_mul1_stencil_str_read, "p_p2_mul1_stencil_str_read");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_s_fu_112_p4, "p_s_fu_112_p4");
    sc_trace(mVcdFile, tmp_6_fu_126_p4, "tmp_6_fu_126_p4");
    sc_trace(mVcdFile, p_8_fu_136_p3, "p_8_fu_136_p3");
    sc_trace(mVcdFile, p_323_cast_fu_144_p1, "p_323_cast_fu_144_p1");
    sc_trace(mVcdFile, p_315_cast_fu_122_p1, "p_315_cast_fu_122_p1");
    sc_trace(mVcdFile, tmp_7_fu_154_p4, "tmp_7_fu_154_p4");
    sc_trace(mVcdFile, p_10_fu_164_p3, "p_10_fu_164_p3");
    sc_trace(mVcdFile, p_11_fu_176_p4, "p_11_fu_176_p4");
    sc_trace(mVcdFile, p_339_cast_cast_fu_186_p1, "p_339_cast_cast_fu_186_p1");
    sc_trace(mVcdFile, p_331_cast_cast_fu_172_p1, "p_331_cast_cast_fu_172_p1");
    sc_trace(mVcdFile, p_324_cast_fu_196_p1, "p_324_cast_fu_196_p1");
    sc_trace(mVcdFile, tmp_cast_fu_199_p1, "tmp_cast_fu_199_p1");
    sc_trace(mVcdFile, tmp_value_V_6_fu_202_p2, "tmp_value_V_6_fu_202_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Block_preheader39_p::~Block_preheader39_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete p_p2_mul1_stencil_str_fifo_U;
}

void Block_preheader39_p::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Block_preheader39_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(p_p2_mul1_stencil_str_empty_n.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            if (!(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(p_p2_mul1_stencil_str_empty_n.read(), ap_const_logic_1) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())))) {
        p_9_reg_230 = p_9_fu_148_p2.read();
        tmp_reg_235 = tmp_fu_190_p2.read();
    }
}

void Block_preheader39_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_preheader39_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Block_preheader39_p::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Block_preheader39_p::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read()));
}

void Block_preheader39_p::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_preheader39_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Block_preheader39_p::thread_hw_output_V_last_V() {
    hw_output_V_last_V = ap_const_lv1_1;
}

void Block_preheader39_p::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(p_p2_mul1_stencil_str_empty_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_hw_output_V_last_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Block_preheader39_p::thread_hw_output_V_value_V() {
    hw_output_V_value_V = p_p2_mul1_stencil_str_dout.read().range(10, 3);
}

void Block_preheader39_p::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(p_p2_mul1_stencil_str_empty_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_hw_output_V_value_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Block_preheader39_p::thread_p_10_fu_164_p3() {
    p_10_fu_164_p3 = esl_concat<7,1>(tmp_7_fu_154_p4.read(), ap_const_lv1_0);
}

void Block_preheader39_p::thread_p_11_fu_176_p4() {
    p_11_fu_176_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(107, 100);
}

void Block_preheader39_p::thread_p_315_cast_fu_122_p1() {
    p_315_cast_fu_122_p1 = esl_zext<9,8>(p_s_fu_112_p4.read());
}

void Block_preheader39_p::thread_p_323_cast_fu_144_p1() {
    p_323_cast_fu_144_p1 = esl_zext<9,8>(p_8_fu_136_p3.read());
}

void Block_preheader39_p::thread_p_324_cast_fu_196_p1() {
    p_324_cast_fu_196_p1 = esl_zext<10,9>(p_9_reg_230.read());
}

void Block_preheader39_p::thread_p_331_cast_cast_fu_172_p1() {
    p_331_cast_cast_fu_172_p1 = esl_zext<9,8>(p_10_fu_164_p3.read());
}

void Block_preheader39_p::thread_p_339_cast_cast_fu_186_p1() {
    p_339_cast_cast_fu_186_p1 = esl_zext<9,8>(p_11_fu_176_p4.read());
}

void Block_preheader39_p::thread_p_8_fu_136_p3() {
    p_8_fu_136_p3 = esl_concat<6,2>(tmp_6_fu_126_p4.read(), ap_const_lv2_0);
}

void Block_preheader39_p::thread_p_9_fu_148_p2() {
    p_9_fu_148_p2 = (!p_323_cast_fu_144_p1.read().is_01() || !p_315_cast_fu_122_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_323_cast_fu_144_p1.read()) + sc_biguint<9>(p_315_cast_fu_122_p1.read()));
}

void Block_preheader39_p::thread_p_mul_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_mul_stencil_stream_V_value_V_blk_n = p_mul_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_mul_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Block_preheader39_p::thread_p_mul_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())))) {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_p_p2_mul1_stencil_str_din() {
    p_p2_mul1_stencil_str_din = esl_zext<32,10>(tmp_value_V_6_fu_202_p2.read());
}

void Block_preheader39_p::thread_p_p2_mul1_stencil_str_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read())))) {
        p_p2_mul1_stencil_str_read = ap_const_logic_1;
    } else {
        p_p2_mul1_stencil_str_read = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_p_p2_mul1_stencil_str_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(p_p2_mul1_stencil_str_full_n.read(), ap_const_logic_1))) {
        p_p2_mul1_stencil_str_write = ap_const_logic_1;
    } else {
        p_p2_mul1_stencil_str_write = ap_const_logic_0;
    }
}

void Block_preheader39_p::thread_p_s_fu_112_p4() {
    p_s_fu_112_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(11, 4);
}

void Block_preheader39_p::thread_tmp_6_fu_126_p4() {
    tmp_6_fu_126_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(41, 36);
}

void Block_preheader39_p::thread_tmp_7_fu_154_p4() {
    tmp_7_fu_154_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(74, 68);
}

void Block_preheader39_p::thread_tmp_cast_fu_199_p1() {
    tmp_cast_fu_199_p1 = esl_zext<10,9>(tmp_reg_235.read());
}

void Block_preheader39_p::thread_tmp_fu_190_p2() {
    tmp_fu_190_p2 = (!p_339_cast_cast_fu_186_p1.read().is_01() || !p_331_cast_cast_fu_172_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_339_cast_cast_fu_186_p1.read()) + sc_biguint<9>(p_331_cast_cast_fu_172_p1.read()));
}

void Block_preheader39_p::thread_tmp_value_V_6_fu_202_p2() {
    tmp_value_V_6_fu_202_p2 = (!p_324_cast_fu_196_p1.read().is_01() || !tmp_cast_fu_199_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_324_cast_fu_196_p1.read()) + sc_biguint<10>(tmp_cast_fu_199_p1.read()));
}

void Block_preheader39_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(p_p2_mul1_stencil_str_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_str_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state7 = "100";
const bool Loop_1_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const bool Loop_1_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<21> Loop_1_proc::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1F8C94 = "111111000110010010100";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1 = "1";
const sc_lv<32> Loop_1_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_30 = "110000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_37 = "110111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_40 = "1000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_47 = "1000111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_E = "1110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1E = "11110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_20 = "100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_25 = "100101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_28 = "101000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2E = "101110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_38 = "111000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_3E = "111110";
const sc_lv<2> Loop_1_proc::ap_const_lv2_0 = "00";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_mul_stencil_update_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_354 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_mul_stencil_update_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_354 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_mul_stencil_update_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_354 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_354 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);
    sensitive << ( p_mul_stencil_update_stream_V_value_V_full_n );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_114_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond_flatten_fu_114_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_103 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_indvar_flatten_next_fu_120_p2);
    sensitive << ( indvar_flatten_reg_103 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_327_fu_126_p1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_332_cast_fu_130_p1);
    sensitive << ( p_327_fu_126_p1 );

    SC_METHOD(thread_p_339_fu_182_p3);
    sensitive << ( tmp_6_fu_172_p4 );

    SC_METHOD(thread_p_340_cast_fu_190_p1);
    sensitive << ( p_339_fu_182_p3 );

    SC_METHOD(thread_p_341_cast_fu_276_p1);
    sensitive << ( p_341_reg_368 );

    SC_METHOD(thread_p_341_fu_194_p2);
    sensitive << ( p_332_cast_fu_130_p1 );
    sensitive << ( p_340_cast_fu_190_p1 );

    SC_METHOD(thread_p_343_fu_134_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_348_cast_cast_fu_144_p1);
    sensitive << ( p_343_fu_134_p4 );

    SC_METHOD(thread_p_355_fu_210_p3);
    sensitive << ( tmp_7_fu_200_p4 );

    SC_METHOD(thread_p_356_cast_cast_fu_218_p1);
    sensitive << ( p_355_fu_210_p3 );

    SC_METHOD(thread_p_357_cast_fu_308_p1);
    sensitive << ( p_357_reg_393 );

    SC_METHOD(thread_p_357_fu_282_p2);
    sensitive << ( p_341_cast_fu_276_p1 );
    sensitive << ( tmp1_cast_fu_279_p1 );

    SC_METHOD(thread_p_363_fu_311_p3);
    sensitive << ( ap_reg_pp0_iter2_tmp_8_reg_378 );

    SC_METHOD(thread_p_364_cast_fu_318_p1);
    sensitive << ( p_363_fu_311_p3 );

    SC_METHOD(thread_p_371_fu_288_p3);
    sensitive << ( tmp_9_reg_383 );

    SC_METHOD(thread_p_372_cast_cast_fu_295_p1);
    sensitive << ( p_371_fu_288_p3 );

    SC_METHOD(thread_p_375_fu_148_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_380_cast_cast_fu_158_p1);
    sensitive << ( p_375_fu_148_p4 );

    SC_METHOD(thread_p_387_fu_258_p3);
    sensitive << ( tmp_s_fu_248_p4 );

    SC_METHOD(thread_p_388_cast_cast_fu_266_p1);
    sensitive << ( p_387_fu_258_p3 );

    SC_METHOD(thread_p_389_cast_fu_340_p1);
    sensitive << ( p_389_reg_403 );

    SC_METHOD(thread_p_389_fu_331_p2);
    sensitive << ( tmp2_fu_322_p2 );
    sensitive << ( tmp3_cast_fu_328_p1 );

    SC_METHOD(thread_p_396_cast_fu_337_p1);
    sensitive << ( ap_reg_pp0_iter3_p_391_reg_363 );

    SC_METHOD(thread_p_397_fu_343_p2);
    sensitive << ( p_396_cast_fu_337_p1 );
    sensitive << ( p_389_cast_fu_340_p1 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_354 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_354 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_mul_stencil_update_stream_V_value_V_blk_n);
    sensitive << ( p_mul_stencil_update_stream_V_value_V_full_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );

    SC_METHOD(thread_p_mul_stencil_update_stream_V_value_V_din);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_397_fu_343_p2 );

    SC_METHOD(thread_p_mul_stencil_update_stream_V_value_V_write);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_354 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( real_start_status_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( ap_start );
    sensitive << ( start_control_reg );

    SC_METHOD(thread_tmp1_cast_fu_279_p1);
    sensitive << ( tmp1_reg_373 );

    SC_METHOD(thread_tmp1_fu_222_p2);
    sensitive << ( p_356_cast_cast_fu_218_p1 );
    sensitive << ( p_348_cast_cast_fu_144_p1 );

    SC_METHOD(thread_tmp2_fu_322_p2);
    sensitive << ( p_364_cast_fu_318_p1 );
    sensitive << ( p_357_cast_fu_308_p1 );

    SC_METHOD(thread_tmp3_cast_fu_328_p1);
    sensitive << ( tmp3_reg_398 );

    SC_METHOD(thread_tmp3_fu_302_p2);
    sensitive << ( p_372_cast_cast_fu_295_p1 );
    sensitive << ( tmp4_cast_fu_299_p1 );

    SC_METHOD(thread_tmp4_cast_fu_299_p1);
    sensitive << ( tmp4_reg_388 );

    SC_METHOD(thread_tmp4_fu_270_p2);
    sensitive << ( p_388_cast_cast_fu_266_p1 );
    sensitive << ( p_380_cast_cast_fu_158_p1 );

    SC_METHOD(thread_tmp_6_fu_172_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_7_fu_200_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_s_fu_248_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_fu_114_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    real_start_status_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    start_once_reg = SC_LOGIC_0;
    start_control_reg = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_dout, "(port)p_hw_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_empty_n, "(port)p_hw_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_read, "(port)p_hw_input_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, p_mul_stencil_update_stream_V_value_V_din, "(port)p_mul_stencil_update_stream_V_value_V_din");
    sc_trace(mVcdFile, p_mul_stencil_update_stream_V_value_V_full_n, "(port)p_mul_stencil_update_stream_V_value_V_full_n");
    sc_trace(mVcdFile, p_mul_stencil_update_stream_V_value_V_write, "(port)p_mul_stencil_update_stream_V_value_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, real_start_status_reg, "real_start_status_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, start_control_reg, "start_control_reg");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_blk_n, "p_hw_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_354, "exitcond_flatten_reg_354");
    sc_trace(mVcdFile, p_mul_stencil_update_stream_V_value_V_blk_n, "p_mul_stencil_update_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_354, "ap_reg_pp0_iter3_exitcond_flatten_reg_354");
    sc_trace(mVcdFile, indvar_flatten_reg_103, "indvar_flatten_reg_103");
    sc_trace(mVcdFile, exitcond_flatten_fu_114_p2, "exitcond_flatten_fu_114_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_354, "ap_reg_pp0_iter1_exitcond_flatten_reg_354");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_354, "ap_reg_pp0_iter2_exitcond_flatten_reg_354");
    sc_trace(mVcdFile, indvar_flatten_next_fu_120_p2, "indvar_flatten_next_fu_120_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, p_391_reg_363, "p_391_reg_363");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_391_reg_363, "ap_reg_pp0_iter2_p_391_reg_363");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_p_391_reg_363, "ap_reg_pp0_iter3_p_391_reg_363");
    sc_trace(mVcdFile, p_341_fu_194_p2, "p_341_fu_194_p2");
    sc_trace(mVcdFile, p_341_reg_368, "p_341_reg_368");
    sc_trace(mVcdFile, tmp1_fu_222_p2, "tmp1_fu_222_p2");
    sc_trace(mVcdFile, tmp1_reg_373, "tmp1_reg_373");
    sc_trace(mVcdFile, tmp_8_reg_378, "tmp_8_reg_378");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_8_reg_378, "ap_reg_pp0_iter2_tmp_8_reg_378");
    sc_trace(mVcdFile, tmp_9_reg_383, "tmp_9_reg_383");
    sc_trace(mVcdFile, tmp4_fu_270_p2, "tmp4_fu_270_p2");
    sc_trace(mVcdFile, tmp4_reg_388, "tmp4_reg_388");
    sc_trace(mVcdFile, p_357_fu_282_p2, "p_357_fu_282_p2");
    sc_trace(mVcdFile, p_357_reg_393, "p_357_reg_393");
    sc_trace(mVcdFile, tmp3_fu_302_p2, "tmp3_fu_302_p2");
    sc_trace(mVcdFile, tmp3_reg_398, "tmp3_reg_398");
    sc_trace(mVcdFile, p_389_fu_331_p2, "p_389_fu_331_p2");
    sc_trace(mVcdFile, p_389_reg_403, "p_389_reg_403");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, p_327_fu_126_p1, "p_327_fu_126_p1");
    sc_trace(mVcdFile, p_343_fu_134_p4, "p_343_fu_134_p4");
    sc_trace(mVcdFile, p_375_fu_148_p4, "p_375_fu_148_p4");
    sc_trace(mVcdFile, tmp_6_fu_172_p4, "tmp_6_fu_172_p4");
    sc_trace(mVcdFile, p_339_fu_182_p3, "p_339_fu_182_p3");
    sc_trace(mVcdFile, p_332_cast_fu_130_p1, "p_332_cast_fu_130_p1");
    sc_trace(mVcdFile, p_340_cast_fu_190_p1, "p_340_cast_fu_190_p1");
    sc_trace(mVcdFile, tmp_7_fu_200_p4, "tmp_7_fu_200_p4");
    sc_trace(mVcdFile, p_355_fu_210_p3, "p_355_fu_210_p3");
    sc_trace(mVcdFile, p_356_cast_cast_fu_218_p1, "p_356_cast_cast_fu_218_p1");
    sc_trace(mVcdFile, p_348_cast_cast_fu_144_p1, "p_348_cast_cast_fu_144_p1");
    sc_trace(mVcdFile, tmp_s_fu_248_p4, "tmp_s_fu_248_p4");
    sc_trace(mVcdFile, p_387_fu_258_p3, "p_387_fu_258_p3");
    sc_trace(mVcdFile, p_388_cast_cast_fu_266_p1, "p_388_cast_cast_fu_266_p1");
    sc_trace(mVcdFile, p_380_cast_cast_fu_158_p1, "p_380_cast_cast_fu_158_p1");
    sc_trace(mVcdFile, p_341_cast_fu_276_p1, "p_341_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_279_p1, "tmp1_cast_fu_279_p1");
    sc_trace(mVcdFile, p_371_fu_288_p3, "p_371_fu_288_p3");
    sc_trace(mVcdFile, p_372_cast_cast_fu_295_p1, "p_372_cast_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_299_p1, "tmp4_cast_fu_299_p1");
    sc_trace(mVcdFile, p_363_fu_311_p3, "p_363_fu_311_p3");
    sc_trace(mVcdFile, p_364_cast_fu_318_p1, "p_364_cast_fu_318_p1");
    sc_trace(mVcdFile, p_357_cast_fu_308_p1, "p_357_cast_fu_308_p1");
    sc_trace(mVcdFile, tmp2_fu_322_p2, "tmp2_fu_322_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_328_p1, "tmp3_cast_fu_328_p1");
    sc_trace(mVcdFile, p_396_cast_fu_337_p1, "p_396_cast_fu_337_p1");
    sc_trace(mVcdFile, p_389_cast_fu_340_p1, "p_389_cast_fu_340_p1");
    sc_trace(mVcdFile, p_397_fu_343_p2, "p_397_fu_343_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_114_p2.read()))) {
        indvar_flatten_reg_103 = indvar_flatten_next_fu_120_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_103 = ap_const_lv21_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        real_start_status_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_1)) {
            real_start_status_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()))) {
            real_start_status_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_control_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()) || 
              esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read())))) {
            start_control_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, start_control_reg.read())) {
            start_control_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read())) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_354 = exitcond_flatten_reg_354.read();
        exitcond_flatten_reg_354 = exitcond_flatten_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_354 = ap_reg_pp0_iter1_exitcond_flatten_reg_354.read();
        ap_reg_pp0_iter2_p_391_reg_363 = p_391_reg_363.read();
        ap_reg_pp0_iter2_tmp_8_reg_378 = tmp_8_reg_378.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_354 = ap_reg_pp0_iter2_exitcond_flatten_reg_354.read();
        ap_reg_pp0_iter3_p_391_reg_363 = ap_reg_pp0_iter2_p_391_reg_363.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_341_reg_368 = p_341_fu_194_p2.read();
        p_391_reg_363 = p_hw_input_stencil_stream_V_value_V_dout.read().range(71, 64);
        tmp1_reg_373 = tmp1_fu_222_p2.read();
        tmp4_reg_388 = tmp4_fu_270_p2.read();
        tmp_8_reg_378 = p_hw_input_stencil_stream_V_value_V_dout.read().range(37, 32);
        tmp_9_reg_383 = p_hw_input_stencil_stream_V_value_V_dout.read().range(46, 40);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_354.read()))) {
        p_357_reg_393 = p_357_fu_282_p2.read();
        tmp3_reg_398 = tmp3_fu_302_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_354.read()))) {
        p_389_reg_403 = p_389_fu_331_p2.read();
    }
}

void Loop_1_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_update_stream_V_value_V_full_n.read())));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_update_stream_V_value_V_full_n.read())));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_update_stream_V_value_V_full_n.read())));
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()) && esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_update_stream_V_value_V_full_n.read()));
}

void Loop_1_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_114_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_1_proc::thread_exitcond_flatten_fu_114_p2() {
    exitcond_flatten_fu_114_p2 = (!indvar_flatten_reg_103.read().is_01() || !ap_const_lv21_1F8C94.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_103.read() == ap_const_lv21_1F8C94);
}

void Loop_1_proc::thread_indvar_flatten_next_fu_120_p2() {
    indvar_flatten_next_fu_120_p2 = (!indvar_flatten_reg_103.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_103.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void Loop_1_proc::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_p_327_fu_126_p1() {
    p_327_fu_126_p1 = p_hw_input_stencil_stream_V_value_V_dout.read().range(8-1, 0);
}

void Loop_1_proc::thread_p_332_cast_fu_130_p1() {
    p_332_cast_fu_130_p1 = esl_zext<9,8>(p_327_fu_126_p1.read());
}

void Loop_1_proc::thread_p_339_fu_182_p3() {
    p_339_fu_182_p3 = esl_concat<7,1>(tmp_6_fu_172_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_340_cast_fu_190_p1() {
    p_340_cast_fu_190_p1 = esl_zext<9,8>(p_339_fu_182_p3.read());
}

void Loop_1_proc::thread_p_341_cast_fu_276_p1() {
    p_341_cast_fu_276_p1 = esl_zext<10,9>(p_341_reg_368.read());
}

void Loop_1_proc::thread_p_341_fu_194_p2() {
    p_341_fu_194_p2 = (!p_332_cast_fu_130_p1.read().is_01() || !p_340_cast_fu_190_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_332_cast_fu_130_p1.read()) + sc_biguint<9>(p_340_cast_fu_190_p1.read()));
}

void Loop_1_proc::thread_p_343_fu_134_p4() {
    p_343_fu_134_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(23, 16);
}

void Loop_1_proc::thread_p_348_cast_cast_fu_144_p1() {
    p_348_cast_cast_fu_144_p1 = esl_zext<9,8>(p_343_fu_134_p4.read());
}

void Loop_1_proc::thread_p_355_fu_210_p3() {
    p_355_fu_210_p3 = esl_concat<7,1>(tmp_7_fu_200_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_356_cast_cast_fu_218_p1() {
    p_356_cast_cast_fu_218_p1 = esl_zext<9,8>(p_355_fu_210_p3.read());
}

void Loop_1_proc::thread_p_357_cast_fu_308_p1() {
    p_357_cast_fu_308_p1 = esl_zext<11,10>(p_357_reg_393.read());
}

void Loop_1_proc::thread_p_357_fu_282_p2() {
    p_357_fu_282_p2 = (!p_341_cast_fu_276_p1.read().is_01() || !tmp1_cast_fu_279_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_341_cast_fu_276_p1.read()) + sc_biguint<10>(tmp1_cast_fu_279_p1.read()));
}

void Loop_1_proc::thread_p_363_fu_311_p3() {
    p_363_fu_311_p3 = esl_concat<6,2>(ap_reg_pp0_iter2_tmp_8_reg_378.read(), ap_const_lv2_0);
}

void Loop_1_proc::thread_p_364_cast_fu_318_p1() {
    p_364_cast_fu_318_p1 = esl_zext<11,8>(p_363_fu_311_p3.read());
}

void Loop_1_proc::thread_p_371_fu_288_p3() {
    p_371_fu_288_p3 = esl_concat<7,1>(tmp_9_reg_383.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_372_cast_cast_fu_295_p1() {
    p_372_cast_cast_fu_295_p1 = esl_zext<10,8>(p_371_fu_288_p3.read());
}

void Loop_1_proc::thread_p_375_fu_148_p4() {
    p_375_fu_148_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(55, 48);
}

void Loop_1_proc::thread_p_380_cast_cast_fu_158_p1() {
    p_380_cast_cast_fu_158_p1 = esl_zext<9,8>(p_375_fu_148_p4.read());
}

void Loop_1_proc::thread_p_387_fu_258_p3() {
    p_387_fu_258_p3 = esl_concat<7,1>(tmp_s_fu_248_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_388_cast_cast_fu_266_p1() {
    p_388_cast_cast_fu_266_p1 = esl_zext<9,8>(p_387_fu_258_p3.read());
}

void Loop_1_proc::thread_p_389_cast_fu_340_p1() {
    p_389_cast_fu_340_p1 = esl_zext<12,11>(p_389_reg_403.read());
}

void Loop_1_proc::thread_p_389_fu_331_p2() {
    p_389_fu_331_p2 = (!tmp2_fu_322_p2.read().is_01() || !tmp3_cast_fu_328_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp2_fu_322_p2.read()) + sc_biguint<11>(tmp3_cast_fu_328_p1.read()));
}

void Loop_1_proc::thread_p_396_cast_fu_337_p1() {
    p_396_cast_fu_337_p1 = esl_zext<12,8>(ap_reg_pp0_iter3_p_391_reg_363.read());
}

void Loop_1_proc::thread_p_397_fu_343_p2() {
    p_397_fu_343_p2 = (!p_396_cast_fu_337_p1.read().is_01() || !p_389_cast_fu_340_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_396_cast_fu_337_p1.read()) + sc_biguint<12>(p_389_cast_fu_340_p1.read()));
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0))) {
        p_hw_input_stencil_stream_V_value_V_blk_n = p_hw_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_hw_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_354.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_p_mul_stencil_update_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()))) {
        p_mul_stencil_update_stream_V_value_V_blk_n = p_mul_stencil_update_stream_V_value_V_full_n.read();
    } else {
        p_mul_stencil_update_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_p_mul_stencil_update_stream_V_value_V_din() {
    p_mul_stencil_update_stream_V_value_V_din = esl_zext<32,12>(p_397_fu_343_p2.read());
}

void Loop_1_proc::thread_p_mul_stencil_update_stream_V_value_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_354.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_mul_stencil_update_stream_V_value_V_write = ap_const_logic_1;
    } else {
        p_mul_stencil_update_stream_V_value_V_write = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_real_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, real_start_status_reg.read())) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_1_proc::thread_start_out() {
    start_out = real_start.read();
}

void Loop_1_proc::thread_start_write() {
    start_write = (ap_start.read() & start_control_reg.read());
}

void Loop_1_proc::thread_tmp1_cast_fu_279_p1() {
    tmp1_cast_fu_279_p1 = esl_zext<10,9>(tmp1_reg_373.read());
}

void Loop_1_proc::thread_tmp1_fu_222_p2() {
    tmp1_fu_222_p2 = (!p_356_cast_cast_fu_218_p1.read().is_01() || !p_348_cast_cast_fu_144_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_356_cast_cast_fu_218_p1.read()) + sc_biguint<9>(p_348_cast_cast_fu_144_p1.read()));
}

void Loop_1_proc::thread_tmp2_fu_322_p2() {
    tmp2_fu_322_p2 = (!p_364_cast_fu_318_p1.read().is_01() || !p_357_cast_fu_308_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_364_cast_fu_318_p1.read()) + sc_biguint<11>(p_357_cast_fu_308_p1.read()));
}

void Loop_1_proc::thread_tmp3_cast_fu_328_p1() {
    tmp3_cast_fu_328_p1 = esl_zext<11,10>(tmp3_reg_398.read());
}

void Loop_1_proc::thread_tmp3_fu_302_p2() {
    tmp3_fu_302_p2 = (!p_372_cast_cast_fu_295_p1.read().is_01() || !tmp4_cast_fu_299_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_372_cast_cast_fu_295_p1.read()) + sc_biguint<10>(tmp4_cast_fu_299_p1.read()));
}

void Loop_1_proc::thread_tmp4_cast_fu_299_p1() {
    tmp4_cast_fu_299_p1 = esl_zext<10,9>(tmp4_reg_388.read());
}

void Loop_1_proc::thread_tmp4_fu_270_p2() {
    tmp4_fu_270_p2 = (!p_388_cast_cast_fu_266_p1.read().is_01() || !p_380_cast_cast_fu_158_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_388_cast_cast_fu_266_p1.read()) + sc_biguint<9>(p_380_cast_cast_fu_158_p1.read()));
}

void Loop_1_proc::thread_tmp_6_fu_172_p4() {
    tmp_6_fu_172_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(14, 8);
}

void Loop_1_proc::thread_tmp_7_fu_200_p4() {
    tmp_7_fu_200_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(30, 24);
}

void Loop_1_proc::thread_tmp_s_fu_248_p4() {
    tmp_s_fu_248_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(62, 56);
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_114_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_114_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


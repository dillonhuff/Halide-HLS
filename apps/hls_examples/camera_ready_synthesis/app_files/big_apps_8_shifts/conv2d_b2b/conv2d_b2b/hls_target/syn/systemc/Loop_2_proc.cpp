// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_2_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_2_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_2_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_2_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_2_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_2_proc::ap_ST_fsm_state6 = "100";
const bool Loop_2_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_2_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_2_proc::ap_const_lv32_1 = "1";
const bool Loop_2_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_2_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_2_proc::ap_const_lv1_1 = "1";
const sc_lv<21> Loop_2_proc::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<21> Loop_2_proc::ap_const_lv21_1F80E1 = "111111000000011100001";
const sc_lv<21> Loop_2_proc::ap_const_lv21_1 = "1";
const sc_lv<32> Loop_2_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_2_proc::ap_const_lv32_7 = "111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_24 = "100100";
const sc_lv<32> Loop_2_proc::ap_const_lv32_27 = "100111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_44 = "1000100";
const sc_lv<32> Loop_2_proc::ap_const_lv32_47 = "1000111";
const sc_lv<32> Loop_2_proc::ap_const_lv32_64 = "1100100";
const sc_lv<32> Loop_2_proc::ap_const_lv32_67 = "1100111";
const sc_lv<2> Loop_2_proc::ap_const_lv2_0 = "00";
const sc_lv<32> Loop_2_proc::ap_const_lv32_2 = "10";

Loop_2_proc::Loop_2_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_p2_mul1_stencil_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_203 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_p2_mul1_stencil_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_203 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_p2_mul1_stencil_stream_V_value_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_203 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_203 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);
    sensitive << ( p_p2_mul1_stencil_stream_V_value_V_full_n );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_96_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_exitcond_flatten_fu_96_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_85 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_indvar_flatten_next_fu_102_p2);
    sensitive << ( indvar_flatten_reg_85 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_406_cast_cast_fu_118_p1);
    sensitive << ( tmp_2_fu_108_p4 );

    SC_METHOD(thread_p_415_fu_162_p3);
    sensitive << ( tmp_3_reg_212 );

    SC_METHOD(thread_p_416_cast_fu_169_p1);
    sensitive << ( p_415_fu_162_p3 );

    SC_METHOD(thread_p_425_fu_173_p3);
    sensitive << ( tmp_4_reg_217 );

    SC_METHOD(thread_p_426_cast_fu_180_p1);
    sensitive << ( p_425_fu_173_p3 );

    SC_METHOD(thread_p_436_cast_cast_fu_152_p1);
    sensitive << ( tmp_5_fu_142_p4 );

    SC_METHOD(thread_p_437_fu_193_p2);
    sensitive << ( tmp_cast_fu_184_p1 );
    sensitive << ( tmp1_fu_187_p2 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_203 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_203 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_p2_mul1_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_p2_mul1_stencil_stream_V_value_V_full_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );

    SC_METHOD(thread_p_p2_mul1_stencil_stream_V_value_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );
    sensitive << ( p_437_reg_227 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_p_p2_mul1_stencil_stream_V_value_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_203 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( real_start_status_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( ap_start );
    sensitive << ( start_control_reg );

    SC_METHOD(thread_tmp1_fu_187_p2);
    sensitive << ( p_426_cast_fu_180_p1 );
    sensitive << ( p_416_cast_fu_169_p1 );

    SC_METHOD(thread_tmp_2_fu_108_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_5_fu_142_p4);
    sensitive << ( p_mul_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_cast_fu_184_p1);
    sensitive << ( tmp_reg_222 );

    SC_METHOD(thread_tmp_fu_156_p2);
    sensitive << ( p_436_cast_cast_fu_152_p1 );
    sensitive << ( p_406_cast_cast_fu_118_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond_flatten_fu_96_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    real_start_status_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    start_once_reg = SC_LOGIC_0;
    start_control_reg = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_2_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_dout, "(port)p_mul_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_empty_n, "(port)p_mul_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_read, "(port)p_mul_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, p_p2_mul1_stencil_stream_V_value_V_din, "(port)p_p2_mul1_stencil_stream_V_value_V_din");
    sc_trace(mVcdFile, p_p2_mul1_stencil_stream_V_value_V_full_n, "(port)p_p2_mul1_stencil_stream_V_value_V_full_n");
    sc_trace(mVcdFile, p_p2_mul1_stencil_stream_V_value_V_write, "(port)p_p2_mul1_stencil_stream_V_value_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, real_start_status_reg, "real_start_status_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, start_control_reg, "start_control_reg");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_blk_n, "p_mul_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_203, "exitcond_flatten_reg_203");
    sc_trace(mVcdFile, p_p2_mul1_stencil_stream_V_value_V_blk_n, "p_p2_mul1_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_203, "ap_reg_pp0_iter2_exitcond_flatten_reg_203");
    sc_trace(mVcdFile, indvar_flatten_reg_85, "indvar_flatten_reg_85");
    sc_trace(mVcdFile, exitcond_flatten_fu_96_p2, "exitcond_flatten_fu_96_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_203, "ap_reg_pp0_iter1_exitcond_flatten_reg_203");
    sc_trace(mVcdFile, indvar_flatten_next_fu_102_p2, "indvar_flatten_next_fu_102_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_3_reg_212, "tmp_3_reg_212");
    sc_trace(mVcdFile, tmp_4_reg_217, "tmp_4_reg_217");
    sc_trace(mVcdFile, tmp_fu_156_p2, "tmp_fu_156_p2");
    sc_trace(mVcdFile, tmp_reg_222, "tmp_reg_222");
    sc_trace(mVcdFile, p_437_fu_193_p2, "p_437_fu_193_p2");
    sc_trace(mVcdFile, p_437_reg_227, "p_437_reg_227");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, tmp_2_fu_108_p4, "tmp_2_fu_108_p4");
    sc_trace(mVcdFile, tmp_5_fu_142_p4, "tmp_5_fu_142_p4");
    sc_trace(mVcdFile, p_436_cast_cast_fu_152_p1, "p_436_cast_cast_fu_152_p1");
    sc_trace(mVcdFile, p_406_cast_cast_fu_118_p1, "p_406_cast_cast_fu_118_p1");
    sc_trace(mVcdFile, p_415_fu_162_p3, "p_415_fu_162_p3");
    sc_trace(mVcdFile, p_425_fu_173_p3, "p_425_fu_173_p3");
    sc_trace(mVcdFile, p_426_cast_fu_180_p1, "p_426_cast_fu_180_p1");
    sc_trace(mVcdFile, p_416_cast_fu_169_p1, "p_416_cast_fu_169_p1");
    sc_trace(mVcdFile, tmp_cast_fu_184_p1, "tmp_cast_fu_184_p1");
    sc_trace(mVcdFile, tmp1_fu_187_p2, "tmp1_fu_187_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_2_proc::~Loop_2_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_2_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_96_p2.read()))) {
        indvar_flatten_reg_85 = indvar_flatten_next_fu_102_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_85 = ap_const_lv21_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        real_start_status_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_1)) {
            real_start_status_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()))) {
            real_start_status_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_control_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read()) || 
              esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read())))) {
            start_control_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, start_control_reg.read())) {
            start_control_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, real_start.read())) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_203 = exitcond_flatten_reg_203.read();
        exitcond_flatten_reg_203 = exitcond_flatten_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_203 = ap_reg_pp0_iter1_exitcond_flatten_reg_203.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_203.read()))) {
        p_437_reg_227 = p_437_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        tmp_3_reg_212 = p_mul_stencil_stream_V_value_V_dout.read().range(39, 36);
        tmp_4_reg_217 = p_mul_stencil_stream_V_value_V_dout.read().range(71, 68);
        tmp_reg_222 = tmp_fu_156_p2.read();
    }
}

void Loop_2_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_2_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_2_proc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void Loop_2_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_2_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_stream_V_value_V_full_n.read())));
}

void Loop_2_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_stream_V_value_V_full_n.read())));
}

void Loop_2_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_stream_V_value_V_full_n.read())));
}

void Loop_2_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_2_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_2_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_2_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_2_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()) && esl_seteq<1,1,1>(ap_const_logic_0, p_p2_mul1_stencil_stream_V_value_V_full_n.read()));
}

void Loop_2_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_2_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_2_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Loop_2_proc::thread_exitcond_flatten_fu_96_p2() {
    exitcond_flatten_fu_96_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv21_1F80E1.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_85.read() == ap_const_lv21_1F80E1);
}

void Loop_2_proc::thread_indvar_flatten_next_fu_102_p2() {
    indvar_flatten_next_fu_102_p2 = (!indvar_flatten_reg_85.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_85.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void Loop_2_proc::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_p_406_cast_cast_fu_118_p1() {
    p_406_cast_cast_fu_118_p1 = esl_zext<5,4>(tmp_2_fu_108_p4.read());
}

void Loop_2_proc::thread_p_415_fu_162_p3() {
    p_415_fu_162_p3 = esl_concat<4,2>(tmp_3_reg_212.read(), ap_const_lv2_0);
}

void Loop_2_proc::thread_p_416_cast_fu_169_p1() {
    p_416_cast_fu_169_p1 = esl_zext<7,6>(p_415_fu_162_p3.read());
}

void Loop_2_proc::thread_p_425_fu_173_p3() {
    p_425_fu_173_p3 = esl_concat<4,1>(tmp_4_reg_217.read(), ap_const_lv1_0);
}

void Loop_2_proc::thread_p_426_cast_fu_180_p1() {
    p_426_cast_fu_180_p1 = esl_zext<7,5>(p_425_fu_173_p3.read());
}

void Loop_2_proc::thread_p_436_cast_cast_fu_152_p1() {
    p_436_cast_cast_fu_152_p1 = esl_zext<5,4>(tmp_5_fu_142_p4.read());
}

void Loop_2_proc::thread_p_437_fu_193_p2() {
    p_437_fu_193_p2 = (!tmp_cast_fu_184_p1.read().is_01() || !tmp1_fu_187_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_cast_fu_184_p1.read()) + sc_biguint<7>(tmp1_fu_187_p2.read()));
}

void Loop_2_proc::thread_p_mul_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0))) {
        p_mul_stencil_stream_V_value_V_blk_n = p_mul_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_mul_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_2_proc::thread_p_mul_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_203.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_p_p2_mul1_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()))) {
        p_p2_mul1_stencil_stream_V_value_V_blk_n = p_p2_mul1_stencil_stream_V_value_V_full_n.read();
    } else {
        p_p2_mul1_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_2_proc::thread_p_p2_mul1_stencil_stream_V_value_V_din() {
    p_p2_mul1_stencil_stream_V_value_V_din = esl_zext<32,7>(p_437_reg_227.read());
}

void Loop_2_proc::thread_p_p2_mul1_stencil_stream_V_value_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_203.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_p2_mul1_stencil_stream_V_value_V_write = ap_const_logic_1;
    } else {
        p_p2_mul1_stencil_stream_V_value_V_write = ap_const_logic_0;
    }
}

void Loop_2_proc::thread_real_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, real_start_status_reg.read())) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Loop_2_proc::thread_start_out() {
    start_out = real_start.read();
}

void Loop_2_proc::thread_start_write() {
    start_write = (ap_start.read() & start_control_reg.read());
}

void Loop_2_proc::thread_tmp1_fu_187_p2() {
    tmp1_fu_187_p2 = (!p_426_cast_fu_180_p1.read().is_01() || !p_416_cast_fu_169_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_426_cast_fu_180_p1.read()) + sc_biguint<7>(p_416_cast_fu_169_p1.read()));
}

void Loop_2_proc::thread_tmp_2_fu_108_p4() {
    tmp_2_fu_108_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(7, 4);
}

void Loop_2_proc::thread_tmp_5_fu_142_p4() {
    tmp_5_fu_142_p4 = p_mul_stencil_stream_V_value_V_dout.read().range(103, 100);
}

void Loop_2_proc::thread_tmp_cast_fu_184_p1() {
    tmp_cast_fu_184_p1 = esl_zext<7,5>(tmp_reg_222.read());
}

void Loop_2_proc::thread_tmp_fu_156_p2() {
    tmp_fu_156_p2 = (!p_436_cast_cast_fu_152_p1.read().is_01() || !p_406_cast_cast_fu_118_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_436_cast_cast_fu_152_p1.read()) + sc_biguint<5>(p_406_cast_cast_fu_118_p1.read()));
}

void Loop_2_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_96_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state7 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_1_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const bool Loop_1_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<21> Loop_1_proc::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<11> Loop_1_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1F8C94 = "111111000110010010100";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1 = "1";
const sc_lv<11> Loop_1_proc::ap_const_lv11_77E = "11101111110";
const sc_lv<11> Loop_1_proc::ap_const_lv11_1 = "1";
const sc_lv<11> Loop_1_proc::ap_const_lv11_435 = "10000110101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_20 = "100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_26 = "100110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_40 = "1000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_47 = "1000111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_60 = "1100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_66 = "1100110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_80 = "10000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_85 = "10000101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_A0 = "10100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_A6 = "10100110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_C0 = "11000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_C7 = "11000111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_E0 = "11100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_E6 = "11100110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_100 = "100000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_107 = "100000111";
const sc_lv<11> Loop_1_proc::ap_const_lv11_77D = "11101111101";
const sc_lv<2> Loop_1_proc::ap_const_lv2_0 = "00";
const sc_lv<32> Loop_1_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_B = "1011";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_465 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_160_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_exitcond8_fu_172_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_x_scan_2_reg_149 );
    sensitive << ( exitcond_flatten_fu_160_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_160_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_126 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );
    sensitive << ( tmp_last_V_reg_560 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_406_fu_448_p2 );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_465 );

    SC_METHOD(thread_indvar_flatten_next_fu_166_p2);
    sensitive << ( indvar_flatten_reg_126 );

    SC_METHOD(thread_p_346_fu_211_p1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_349_cast_fu_215_p1);
    sensitive << ( p_346_fu_211_p1 );

    SC_METHOD(thread_p_355_fu_229_p3);
    sensitive << ( tmp_2_fu_219_p4 );

    SC_METHOD(thread_p_356_cast_fu_237_p1);
    sensitive << ( p_355_fu_229_p3 );

    SC_METHOD(thread_p_357_cast_fu_371_p1);
    sensitive << ( p_357_reg_505 );

    SC_METHOD(thread_p_357_fu_241_p2);
    sensitive << ( p_356_cast_fu_237_p1 );
    sensitive << ( p_349_cast_fu_215_p1 );

    SC_METHOD(thread_p_360_fu_247_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_363_cast_cast_fu_257_p1);
    sensitive << ( p_360_fu_247_p4 );

    SC_METHOD(thread_p_369_fu_271_p3);
    sensitive << ( tmp_3_fu_261_p4 );

    SC_METHOD(thread_p_370_cast_cast_fu_279_p1);
    sensitive << ( p_369_fu_271_p3 );

    SC_METHOD(thread_p_371_cast_fu_408_p1);
    sensitive << ( p_371_reg_545 );

    SC_METHOD(thread_p_371_fu_377_p2);
    sensitive << ( p_357_cast_fu_371_p1 );
    sensitive << ( tmp1_cast_fu_374_p1 );

    SC_METHOD(thread_p_376_fu_411_p3);
    sensitive << ( ap_reg_pp0_iter2_tmp_4_reg_515 );

    SC_METHOD(thread_p_377_cast_fu_418_p1);
    sensitive << ( p_376_fu_411_p3 );

    SC_METHOD(thread_p_383_fu_383_p3);
    sensitive << ( tmp_5_reg_520 );

    SC_METHOD(thread_p_384_cast_cast_fu_390_p1);
    sensitive << ( p_383_fu_383_p3 );

    SC_METHOD(thread_p_388_fu_309_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_391_cast_cast_fu_319_p1);
    sensitive << ( p_388_fu_309_p4 );

    SC_METHOD(thread_p_397_fu_333_p3);
    sensitive << ( tmp_6_fu_323_p4 );

    SC_METHOD(thread_p_398_cast_cast_fu_341_p1);
    sensitive << ( p_397_fu_333_p3 );

    SC_METHOD(thread_p_399_cast_fu_442_p1);
    sensitive << ( p_399_reg_555 );

    SC_METHOD(thread_p_399_fu_431_p2);
    sensitive << ( tmp2_fu_422_p2 );
    sensitive << ( tmp3_cast_fu_428_p1 );

    SC_METHOD(thread_p_405_cast_fu_445_p1);
    sensitive << ( ap_reg_pp0_iter3_p_402_reg_530 );

    SC_METHOD(thread_p_406_fu_448_p2);
    sensitive << ( p_405_cast_fu_445_p1 );
    sensitive << ( p_399_cast_fu_442_p1 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_465 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_hw_output_x_scan_1_fu_186_p2);
    sensitive << ( p_hw_output_x_scan_s_fu_178_p3 );

    SC_METHOD(thread_p_hw_output_x_scan_s_fu_178_p3);
    sensitive << ( p_hw_output_x_scan_2_reg_149 );
    sensitive << ( exitcond8_fu_172_p2 );

    SC_METHOD(thread_p_hw_output_y_scan_1_phi_fu_141_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( p_hw_output_y_scan_1_reg_137 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_465 );
    sensitive << ( p_hw_output_y_scan_s_reg_500 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_hw_output_y_scan_2_fu_192_p2);
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_p_hw_output_y_scan_s_fu_204_p3);
    sensitive << ( exitcond8_reg_474 );
    sensitive << ( p_hw_output_y_scan_2_fu_192_p2 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_tmp1_cast_fu_374_p1);
    sensitive << ( tmp1_reg_510 );

    SC_METHOD(thread_tmp1_fu_283_p2);
    sensitive << ( p_370_cast_cast_fu_279_p1 );
    sensitive << ( p_363_cast_cast_fu_257_p1 );

    SC_METHOD(thread_tmp2_fu_422_p2);
    sensitive << ( p_377_cast_fu_418_p1 );
    sensitive << ( p_371_cast_fu_408_p1 );

    SC_METHOD(thread_tmp3_cast_fu_428_p1);
    sensitive << ( tmp3_reg_550 );

    SC_METHOD(thread_tmp3_fu_397_p2);
    sensitive << ( p_384_cast_cast_fu_390_p1 );
    sensitive << ( tmp4_cast_fu_394_p1 );

    SC_METHOD(thread_tmp4_cast_fu_394_p1);
    sensitive << ( tmp4_reg_525 );

    SC_METHOD(thread_tmp4_fu_345_p2);
    sensitive << ( p_398_cast_cast_fu_341_p1 );
    sensitive << ( p_391_cast_cast_fu_319_p1 );

    SC_METHOD(thread_tmp5_fu_198_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( exitcond8_reg_474 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_tmp_2_fu_219_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_3_fu_261_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_6_fu_323_p4);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_tmp_last_V_fu_437_p2);
    sensitive << ( ap_reg_pp0_iter2_tmp_s_reg_535 );
    sensitive << ( tmp_mid2_fu_403_p3 );

    SC_METHOD(thread_tmp_mid1_fu_366_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_465 );
    sensitive << ( ap_reg_pp0_iter1_exitcond8_reg_474 );
    sensitive << ( p_hw_output_y_scan_2_reg_490 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_mid2_fu_403_p3);
    sensitive << ( ap_reg_pp0_iter2_exitcond8_reg_474 );
    sensitive << ( ap_reg_pp0_iter2_tmp5_reg_495 );
    sensitive << ( tmp_mid1_reg_540 );

    SC_METHOD(thread_tmp_s_fu_361_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_465 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( p_hw_output_x_scan_s_reg_480 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_fu_160_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_dout, "(port)p_hw_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_empty_n, "(port)p_hw_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_read, "(port)p_hw_input_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_blk_n, "p_hw_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_465, "exitcond_flatten_reg_465");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_465, "ap_reg_pp0_iter3_exitcond_flatten_reg_465");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_126, "indvar_flatten_reg_126");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_reg_137, "p_hw_output_y_scan_1_reg_137");
    sc_trace(mVcdFile, p_hw_output_x_scan_2_reg_149, "p_hw_output_x_scan_2_reg_149");
    sc_trace(mVcdFile, exitcond_flatten_fu_160_p2, "exitcond_flatten_fu_160_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_465, "ap_reg_pp0_iter1_exitcond_flatten_reg_465");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_465, "ap_reg_pp0_iter2_exitcond_flatten_reg_465");
    sc_trace(mVcdFile, indvar_flatten_next_fu_166_p2, "indvar_flatten_next_fu_166_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond8_fu_172_p2, "exitcond8_fu_172_p2");
    sc_trace(mVcdFile, exitcond8_reg_474, "exitcond8_reg_474");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond8_reg_474, "ap_reg_pp0_iter1_exitcond8_reg_474");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond8_reg_474, "ap_reg_pp0_iter2_exitcond8_reg_474");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_fu_178_p3, "p_hw_output_x_scan_s_fu_178_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_reg_480, "p_hw_output_x_scan_s_reg_480");
    sc_trace(mVcdFile, p_hw_output_x_scan_1_fu_186_p2, "p_hw_output_x_scan_1_fu_186_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_fu_192_p2, "p_hw_output_y_scan_2_fu_192_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_reg_490, "p_hw_output_y_scan_2_reg_490");
    sc_trace(mVcdFile, tmp5_fu_198_p2, "tmp5_fu_198_p2");
    sc_trace(mVcdFile, tmp5_reg_495, "tmp5_reg_495");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp5_reg_495, "ap_reg_pp0_iter2_tmp5_reg_495");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_fu_204_p3, "p_hw_output_y_scan_s_fu_204_p3");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_reg_500, "p_hw_output_y_scan_s_reg_500");
    sc_trace(mVcdFile, p_357_fu_241_p2, "p_357_fu_241_p2");
    sc_trace(mVcdFile, p_357_reg_505, "p_357_reg_505");
    sc_trace(mVcdFile, tmp1_fu_283_p2, "tmp1_fu_283_p2");
    sc_trace(mVcdFile, tmp1_reg_510, "tmp1_reg_510");
    sc_trace(mVcdFile, tmp_4_reg_515, "tmp_4_reg_515");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_4_reg_515, "ap_reg_pp0_iter2_tmp_4_reg_515");
    sc_trace(mVcdFile, tmp_5_reg_520, "tmp_5_reg_520");
    sc_trace(mVcdFile, tmp4_fu_345_p2, "tmp4_fu_345_p2");
    sc_trace(mVcdFile, tmp4_reg_525, "tmp4_reg_525");
    sc_trace(mVcdFile, p_402_reg_530, "p_402_reg_530");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_402_reg_530, "ap_reg_pp0_iter2_p_402_reg_530");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_p_402_reg_530, "ap_reg_pp0_iter3_p_402_reg_530");
    sc_trace(mVcdFile, tmp_s_fu_361_p2, "tmp_s_fu_361_p2");
    sc_trace(mVcdFile, tmp_s_reg_535, "tmp_s_reg_535");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_s_reg_535, "ap_reg_pp0_iter2_tmp_s_reg_535");
    sc_trace(mVcdFile, tmp_mid1_fu_366_p2, "tmp_mid1_fu_366_p2");
    sc_trace(mVcdFile, tmp_mid1_reg_540, "tmp_mid1_reg_540");
    sc_trace(mVcdFile, p_371_fu_377_p2, "p_371_fu_377_p2");
    sc_trace(mVcdFile, p_371_reg_545, "p_371_reg_545");
    sc_trace(mVcdFile, tmp3_fu_397_p2, "tmp3_fu_397_p2");
    sc_trace(mVcdFile, tmp3_reg_550, "tmp3_reg_550");
    sc_trace(mVcdFile, p_399_fu_431_p2, "p_399_fu_431_p2");
    sc_trace(mVcdFile, p_399_reg_555, "p_399_reg_555");
    sc_trace(mVcdFile, tmp_last_V_fu_437_p2, "tmp_last_V_fu_437_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_560, "tmp_last_V_reg_560");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_phi_fu_141_p4, "p_hw_output_y_scan_1_phi_fu_141_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_346_fu_211_p1, "p_346_fu_211_p1");
    sc_trace(mVcdFile, tmp_2_fu_219_p4, "tmp_2_fu_219_p4");
    sc_trace(mVcdFile, p_355_fu_229_p3, "p_355_fu_229_p3");
    sc_trace(mVcdFile, p_356_cast_fu_237_p1, "p_356_cast_fu_237_p1");
    sc_trace(mVcdFile, p_349_cast_fu_215_p1, "p_349_cast_fu_215_p1");
    sc_trace(mVcdFile, p_360_fu_247_p4, "p_360_fu_247_p4");
    sc_trace(mVcdFile, tmp_3_fu_261_p4, "tmp_3_fu_261_p4");
    sc_trace(mVcdFile, p_369_fu_271_p3, "p_369_fu_271_p3");
    sc_trace(mVcdFile, p_370_cast_cast_fu_279_p1, "p_370_cast_cast_fu_279_p1");
    sc_trace(mVcdFile, p_363_cast_cast_fu_257_p1, "p_363_cast_cast_fu_257_p1");
    sc_trace(mVcdFile, p_388_fu_309_p4, "p_388_fu_309_p4");
    sc_trace(mVcdFile, tmp_6_fu_323_p4, "tmp_6_fu_323_p4");
    sc_trace(mVcdFile, p_397_fu_333_p3, "p_397_fu_333_p3");
    sc_trace(mVcdFile, p_398_cast_cast_fu_341_p1, "p_398_cast_cast_fu_341_p1");
    sc_trace(mVcdFile, p_391_cast_cast_fu_319_p1, "p_391_cast_cast_fu_319_p1");
    sc_trace(mVcdFile, p_357_cast_fu_371_p1, "p_357_cast_fu_371_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_374_p1, "tmp1_cast_fu_374_p1");
    sc_trace(mVcdFile, p_383_fu_383_p3, "p_383_fu_383_p3");
    sc_trace(mVcdFile, p_384_cast_cast_fu_390_p1, "p_384_cast_cast_fu_390_p1");
    sc_trace(mVcdFile, tmp4_cast_fu_394_p1, "tmp4_cast_fu_394_p1");
    sc_trace(mVcdFile, p_376_fu_411_p3, "p_376_fu_411_p3");
    sc_trace(mVcdFile, p_377_cast_fu_418_p1, "p_377_cast_fu_418_p1");
    sc_trace(mVcdFile, p_371_cast_fu_408_p1, "p_371_cast_fu_408_p1");
    sc_trace(mVcdFile, tmp2_fu_422_p2, "tmp2_fu_422_p2");
    sc_trace(mVcdFile, tmp3_cast_fu_428_p1, "tmp3_cast_fu_428_p1");
    sc_trace(mVcdFile, tmp_mid2_fu_403_p3, "tmp_mid2_fu_403_p3");
    sc_trace(mVcdFile, p_405_cast_fu_445_p1, "p_405_cast_fu_445_p1");
    sc_trace(mVcdFile, p_399_cast_fu_442_p1, "p_399_cast_fu_442_p1");
    sc_trace(mVcdFile, p_406_fu_448_p2, "p_406_fu_448_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        indvar_flatten_reg_126 = indvar_flatten_next_fu_166_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_126 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        p_hw_output_x_scan_2_reg_149 = p_hw_output_x_scan_1_fu_186_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_x_scan_2_reg_149 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_465.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_reg_137 = p_hw_output_y_scan_s_reg_500.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_y_scan_1_reg_137 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond8_reg_474 = exitcond8_reg_474.read();
        ap_reg_pp0_iter1_exitcond_flatten_reg_465 = exitcond_flatten_reg_465.read();
        exitcond_flatten_reg_465 = exitcond_flatten_fu_160_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond8_reg_474 = ap_reg_pp0_iter1_exitcond8_reg_474.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_465 = ap_reg_pp0_iter1_exitcond_flatten_reg_465.read();
        ap_reg_pp0_iter2_p_402_reg_530 = p_402_reg_530.read();
        ap_reg_pp0_iter2_tmp5_reg_495 = tmp5_reg_495.read();
        ap_reg_pp0_iter2_tmp_4_reg_515 = tmp_4_reg_515.read();
        ap_reg_pp0_iter2_tmp_s_reg_535 = tmp_s_reg_535.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_465 = ap_reg_pp0_iter2_exitcond_flatten_reg_465.read();
        ap_reg_pp0_iter3_p_402_reg_530 = ap_reg_pp0_iter2_p_402_reg_530.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        exitcond8_reg_474 = exitcond8_fu_172_p2.read();
        p_hw_output_x_scan_s_reg_480 = p_hw_output_x_scan_s_fu_178_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_357_reg_505 = p_357_fu_241_p2.read();
        p_402_reg_530 = p_hw_input_stencil_stream_V_value_V_dout.read().range(263, 256);
        p_hw_output_y_scan_2_reg_490 = p_hw_output_y_scan_2_fu_192_p2.read();
        tmp1_reg_510 = tmp1_fu_283_p2.read();
        tmp4_reg_525 = tmp4_fu_345_p2.read();
        tmp_4_reg_515 = p_hw_input_stencil_stream_V_value_V_dout.read().range(133, 128);
        tmp_5_reg_520 = p_hw_input_stencil_stream_V_value_V_dout.read().range(166, 160);
        tmp_s_reg_535 = tmp_s_fu_361_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_465.read()))) {
        p_371_reg_545 = p_371_fu_377_p2.read();
        tmp3_reg_550 = tmp3_fu_397_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_465.read()))) {
        p_399_reg_555 = p_399_fu_431_p2.read();
        tmp_last_V_reg_560 = tmp_last_V_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_output_y_scan_s_reg_500 = p_hw_output_y_scan_s_fu_204_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_reg_474.read()))) {
        tmp5_reg_495 = tmp5_fu_198_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_465.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond8_reg_474.read(), ap_const_lv1_1))) {
        tmp_mid1_reg_540 = tmp_mid1_fu_366_p2.read();
    }
}

void Loop_1_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()));
}

void Loop_1_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_exitcond8_fu_172_p2() {
    exitcond8_fu_172_p2 = (!p_hw_output_x_scan_2_reg_149.read().is_01() || !ap_const_lv11_77E.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_2_reg_149.read() == ap_const_lv11_77E);
}

void Loop_1_proc::thread_exitcond_flatten_fu_160_p2() {
    exitcond_flatten_fu_160_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv21_1F8C94.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_126.read() == ap_const_lv21_1F8C94);
}

void Loop_1_proc::thread_hw_output_V_last_V() {
    hw_output_V_last_V = tmp_last_V_reg_560.read();
}

void Loop_1_proc::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()))) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V() {
    hw_output_V_value_V = p_406_fu_448_p2.read().range(11, 4);
}

void Loop_1_proc::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_465.read()))) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_indvar_flatten_next_fu_166_p2() {
    indvar_flatten_next_fu_166_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_126.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void Loop_1_proc::thread_p_346_fu_211_p1() {
    p_346_fu_211_p1 = p_hw_input_stencil_stream_V_value_V_dout.read().range(8-1, 0);
}

void Loop_1_proc::thread_p_349_cast_fu_215_p1() {
    p_349_cast_fu_215_p1 = esl_zext<9,8>(p_346_fu_211_p1.read());
}

void Loop_1_proc::thread_p_355_fu_229_p3() {
    p_355_fu_229_p3 = esl_concat<7,1>(tmp_2_fu_219_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_356_cast_fu_237_p1() {
    p_356_cast_fu_237_p1 = esl_zext<9,8>(p_355_fu_229_p3.read());
}

void Loop_1_proc::thread_p_357_cast_fu_371_p1() {
    p_357_cast_fu_371_p1 = esl_zext<10,9>(p_357_reg_505.read());
}

void Loop_1_proc::thread_p_357_fu_241_p2() {
    p_357_fu_241_p2 = (!p_356_cast_fu_237_p1.read().is_01() || !p_349_cast_fu_215_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_356_cast_fu_237_p1.read()) + sc_biguint<9>(p_349_cast_fu_215_p1.read()));
}

void Loop_1_proc::thread_p_360_fu_247_p4() {
    p_360_fu_247_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(71, 64);
}

void Loop_1_proc::thread_p_363_cast_cast_fu_257_p1() {
    p_363_cast_cast_fu_257_p1 = esl_zext<9,8>(p_360_fu_247_p4.read());
}

void Loop_1_proc::thread_p_369_fu_271_p3() {
    p_369_fu_271_p3 = esl_concat<7,1>(tmp_3_fu_261_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_370_cast_cast_fu_279_p1() {
    p_370_cast_cast_fu_279_p1 = esl_zext<9,8>(p_369_fu_271_p3.read());
}

void Loop_1_proc::thread_p_371_cast_fu_408_p1() {
    p_371_cast_fu_408_p1 = esl_zext<11,10>(p_371_reg_545.read());
}

void Loop_1_proc::thread_p_371_fu_377_p2() {
    p_371_fu_377_p2 = (!p_357_cast_fu_371_p1.read().is_01() || !tmp1_cast_fu_374_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_357_cast_fu_371_p1.read()) + sc_biguint<10>(tmp1_cast_fu_374_p1.read()));
}

void Loop_1_proc::thread_p_376_fu_411_p3() {
    p_376_fu_411_p3 = esl_concat<6,2>(ap_reg_pp0_iter2_tmp_4_reg_515.read(), ap_const_lv2_0);
}

void Loop_1_proc::thread_p_377_cast_fu_418_p1() {
    p_377_cast_fu_418_p1 = esl_zext<11,8>(p_376_fu_411_p3.read());
}

void Loop_1_proc::thread_p_383_fu_383_p3() {
    p_383_fu_383_p3 = esl_concat<7,1>(tmp_5_reg_520.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_384_cast_cast_fu_390_p1() {
    p_384_cast_cast_fu_390_p1 = esl_zext<10,8>(p_383_fu_383_p3.read());
}

void Loop_1_proc::thread_p_388_fu_309_p4() {
    p_388_fu_309_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(199, 192);
}

void Loop_1_proc::thread_p_391_cast_cast_fu_319_p1() {
    p_391_cast_cast_fu_319_p1 = esl_zext<9,8>(p_388_fu_309_p4.read());
}

void Loop_1_proc::thread_p_397_fu_333_p3() {
    p_397_fu_333_p3 = esl_concat<7,1>(tmp_6_fu_323_p4.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_398_cast_cast_fu_341_p1() {
    p_398_cast_cast_fu_341_p1 = esl_zext<9,8>(p_397_fu_333_p3.read());
}

void Loop_1_proc::thread_p_399_cast_fu_442_p1() {
    p_399_cast_fu_442_p1 = esl_zext<12,11>(p_399_reg_555.read());
}

void Loop_1_proc::thread_p_399_fu_431_p2() {
    p_399_fu_431_p2 = (!tmp2_fu_422_p2.read().is_01() || !tmp3_cast_fu_428_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp2_fu_422_p2.read()) + sc_biguint<11>(tmp3_cast_fu_428_p1.read()));
}

void Loop_1_proc::thread_p_405_cast_fu_445_p1() {
    p_405_cast_fu_445_p1 = esl_zext<12,8>(ap_reg_pp0_iter3_p_402_reg_530.read());
}

void Loop_1_proc::thread_p_406_fu_448_p2() {
    p_406_fu_448_p2 = (!p_405_cast_fu_445_p1.read().is_01() || !p_399_cast_fu_442_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(p_405_cast_fu_445_p1.read()) + sc_biguint<12>(p_399_cast_fu_442_p1.read()));
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0))) {
        p_hw_input_stencil_stream_V_value_V_blk_n = p_hw_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_hw_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_465.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_p_hw_output_x_scan_1_fu_186_p2() {
    p_hw_output_x_scan_1_fu_186_p2 = (!ap_const_lv11_1.is_01() || !p_hw_output_x_scan_s_fu_178_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(p_hw_output_x_scan_s_fu_178_p3.read()));
}

void Loop_1_proc::thread_p_hw_output_x_scan_s_fu_178_p3() {
    p_hw_output_x_scan_s_fu_178_p3 = (!exitcond8_fu_172_p2.read()[0].is_01())? sc_lv<11>(): ((exitcond8_fu_172_p2.read()[0].to_bool())? ap_const_lv11_0: p_hw_output_x_scan_2_reg_149.read());
}

void Loop_1_proc::thread_p_hw_output_y_scan_1_phi_fu_141_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_465.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_phi_fu_141_p4 = p_hw_output_y_scan_s_reg_500.read();
    } else {
        p_hw_output_y_scan_1_phi_fu_141_p4 = p_hw_output_y_scan_1_reg_137.read();
    }
}

void Loop_1_proc::thread_p_hw_output_y_scan_2_fu_192_p2() {
    p_hw_output_y_scan_2_fu_192_p2 = (!ap_const_lv11_1.is_01() || !p_hw_output_y_scan_1_phi_fu_141_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(p_hw_output_y_scan_1_phi_fu_141_p4.read()));
}

void Loop_1_proc::thread_p_hw_output_y_scan_s_fu_204_p3() {
    p_hw_output_y_scan_s_fu_204_p3 = (!exitcond8_reg_474.read()[0].is_01())? sc_lv<11>(): ((exitcond8_reg_474.read()[0].to_bool())? p_hw_output_y_scan_2_fu_192_p2.read(): p_hw_output_y_scan_1_phi_fu_141_p4.read());
}

void Loop_1_proc::thread_tmp1_cast_fu_374_p1() {
    tmp1_cast_fu_374_p1 = esl_zext<10,9>(tmp1_reg_510.read());
}

void Loop_1_proc::thread_tmp1_fu_283_p2() {
    tmp1_fu_283_p2 = (!p_370_cast_cast_fu_279_p1.read().is_01() || !p_363_cast_cast_fu_257_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_370_cast_cast_fu_279_p1.read()) + sc_biguint<9>(p_363_cast_cast_fu_257_p1.read()));
}

void Loop_1_proc::thread_tmp2_fu_422_p2() {
    tmp2_fu_422_p2 = (!p_377_cast_fu_418_p1.read().is_01() || !p_371_cast_fu_408_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_377_cast_fu_418_p1.read()) + sc_biguint<11>(p_371_cast_fu_408_p1.read()));
}

void Loop_1_proc::thread_tmp3_cast_fu_428_p1() {
    tmp3_cast_fu_428_p1 = esl_zext<11,10>(tmp3_reg_550.read());
}

void Loop_1_proc::thread_tmp3_fu_397_p2() {
    tmp3_fu_397_p2 = (!p_384_cast_cast_fu_390_p1.read().is_01() || !tmp4_cast_fu_394_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_384_cast_cast_fu_390_p1.read()) + sc_biguint<10>(tmp4_cast_fu_394_p1.read()));
}

void Loop_1_proc::thread_tmp4_cast_fu_394_p1() {
    tmp4_cast_fu_394_p1 = esl_zext<10,9>(tmp4_reg_525.read());
}

void Loop_1_proc::thread_tmp4_fu_345_p2() {
    tmp4_fu_345_p2 = (!p_398_cast_cast_fu_341_p1.read().is_01() || !p_391_cast_cast_fu_319_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_398_cast_cast_fu_341_p1.read()) + sc_biguint<9>(p_391_cast_cast_fu_319_p1.read()));
}

void Loop_1_proc::thread_tmp5_fu_198_p2() {
    tmp5_fu_198_p2 = (!p_hw_output_y_scan_1_phi_fu_141_p4.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_phi_fu_141_p4.read() == ap_const_lv11_435);
}

void Loop_1_proc::thread_tmp_2_fu_219_p4() {
    tmp_2_fu_219_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(38, 32);
}

void Loop_1_proc::thread_tmp_3_fu_261_p4() {
    tmp_3_fu_261_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(102, 96);
}

void Loop_1_proc::thread_tmp_6_fu_323_p4() {
    tmp_6_fu_323_p4 = p_hw_input_stencil_stream_V_value_V_dout.read().range(230, 224);
}

void Loop_1_proc::thread_tmp_last_V_fu_437_p2() {
    tmp_last_V_fu_437_p2 = (ap_reg_pp0_iter2_tmp_s_reg_535.read() & tmp_mid2_fu_403_p3.read());
}

void Loop_1_proc::thread_tmp_mid1_fu_366_p2() {
    tmp_mid1_fu_366_p2 = (!p_hw_output_y_scan_2_reg_490.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_2_reg_490.read() == ap_const_lv11_435);
}

void Loop_1_proc::thread_tmp_mid2_fu_403_p3() {
    tmp_mid2_fu_403_p3 = (!ap_reg_pp0_iter2_exitcond8_reg_474.read()[0].is_01())? sc_lv<1>(): ((ap_reg_pp0_iter2_exitcond8_reg_474.read()[0].to_bool())? tmp_mid1_reg_540.read(): ap_reg_pp0_iter2_tmp5_reg_495.read());
}

void Loop_1_proc::thread_tmp_s_fu_361_p2() {
    tmp_s_fu_361_p2 = (!p_hw_output_x_scan_s_reg_480.read().is_01() || !ap_const_lv11_77D.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_s_reg_480.read() == ap_const_lv11_77D);
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


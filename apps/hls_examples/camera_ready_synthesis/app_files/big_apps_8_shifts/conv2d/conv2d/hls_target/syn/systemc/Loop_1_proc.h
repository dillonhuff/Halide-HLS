// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_1_proc_HH_
#define _Loop_1_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_1_proc : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<288> > p_hw_input_stencil_stream_V_value_V_dout;
    sc_in< sc_logic > p_hw_input_stencil_stream_V_value_V_empty_n;
    sc_out< sc_logic > p_hw_input_stencil_stream_V_value_V_read;
    sc_out< sc_lv<8> > hw_output_V_value_V;
    sc_out< sc_logic > hw_output_V_value_V_ap_vld;
    sc_in< sc_logic > hw_output_V_value_V_ap_ack;
    sc_out< sc_lv<1> > hw_output_V_last_V;
    sc_out< sc_logic > hw_output_V_last_V_ap_vld;
    sc_in< sc_logic > hw_output_V_last_V_ap_ack;


    // Module declarations
    Loop_1_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_1_proc);

    ~Loop_1_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > p_hw_input_stencil_stream_V_value_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_465;
    sc_signal< sc_logic > hw_output_V_value_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter3_exitcond_flatten_reg_465;
    sc_signal< sc_logic > hw_output_V_last_V_blk_n;
    sc_signal< sc_lv<21> > indvar_flatten_reg_126;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_1_reg_137;
    sc_signal< sc_lv<11> > p_hw_output_x_scan_2_reg_149;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_160_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< sc_logic > ap_sig_ioackin_hw_output_V_value_V_ap_ack;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond_flatten_reg_465;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond_flatten_reg_465;
    sc_signal< sc_lv<21> > indvar_flatten_next_fu_166_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond8_fu_172_p2;
    sc_signal< sc_lv<1> > exitcond8_reg_474;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond8_reg_474;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_exitcond8_reg_474;
    sc_signal< sc_lv<11> > p_hw_output_x_scan_s_fu_178_p3;
    sc_signal< sc_lv<11> > p_hw_output_x_scan_s_reg_480;
    sc_signal< sc_lv<11> > p_hw_output_x_scan_1_fu_186_p2;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_2_fu_192_p2;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_2_reg_490;
    sc_signal< sc_lv<1> > tmp5_fu_198_p2;
    sc_signal< sc_lv<1> > tmp5_reg_495;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp5_reg_495;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_s_fu_204_p3;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_s_reg_500;
    sc_signal< sc_lv<9> > p_357_fu_241_p2;
    sc_signal< sc_lv<9> > p_357_reg_505;
    sc_signal< sc_lv<9> > tmp1_fu_283_p2;
    sc_signal< sc_lv<9> > tmp1_reg_510;
    sc_signal< sc_lv<6> > tmp_4_reg_515;
    sc_signal< sc_lv<6> > ap_reg_pp0_iter2_tmp_4_reg_515;
    sc_signal< sc_lv<7> > tmp_5_reg_520;
    sc_signal< sc_lv<9> > tmp4_fu_345_p2;
    sc_signal< sc_lv<9> > tmp4_reg_525;
    sc_signal< sc_lv<8> > p_402_reg_530;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter2_p_402_reg_530;
    sc_signal< sc_lv<8> > ap_reg_pp0_iter3_p_402_reg_530;
    sc_signal< sc_lv<1> > tmp_s_fu_361_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_535;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp_s_reg_535;
    sc_signal< sc_lv<1> > tmp_mid1_fu_366_p2;
    sc_signal< sc_lv<1> > tmp_mid1_reg_540;
    sc_signal< sc_lv<10> > p_371_fu_377_p2;
    sc_signal< sc_lv<10> > p_371_reg_545;
    sc_signal< sc_lv<10> > tmp3_fu_397_p2;
    sc_signal< sc_lv<10> > tmp3_reg_550;
    sc_signal< sc_lv<11> > p_399_fu_431_p2;
    sc_signal< sc_lv<11> > p_399_reg_555;
    sc_signal< sc_lv<1> > tmp_last_V_fu_437_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_560;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<11> > p_hw_output_y_scan_1_phi_fu_141_p4;
    sc_signal< bool > ap_block_pp0_stage0_flag00001001;
    sc_signal< sc_logic > ap_reg_ioackin_hw_output_V_value_V_ap_ack;
    sc_signal< sc_logic > ap_reg_ioackin_hw_output_V_last_V_ap_ack;
    sc_signal< sc_lv<8> > p_346_fu_211_p1;
    sc_signal< sc_lv<7> > tmp_2_fu_219_p4;
    sc_signal< sc_lv<8> > p_355_fu_229_p3;
    sc_signal< sc_lv<9> > p_356_cast_fu_237_p1;
    sc_signal< sc_lv<9> > p_349_cast_fu_215_p1;
    sc_signal< sc_lv<8> > p_360_fu_247_p4;
    sc_signal< sc_lv<7> > tmp_3_fu_261_p4;
    sc_signal< sc_lv<8> > p_369_fu_271_p3;
    sc_signal< sc_lv<9> > p_370_cast_cast_fu_279_p1;
    sc_signal< sc_lv<9> > p_363_cast_cast_fu_257_p1;
    sc_signal< sc_lv<8> > p_388_fu_309_p4;
    sc_signal< sc_lv<7> > tmp_6_fu_323_p4;
    sc_signal< sc_lv<8> > p_397_fu_333_p3;
    sc_signal< sc_lv<9> > p_398_cast_cast_fu_341_p1;
    sc_signal< sc_lv<9> > p_391_cast_cast_fu_319_p1;
    sc_signal< sc_lv<10> > p_357_cast_fu_371_p1;
    sc_signal< sc_lv<10> > tmp1_cast_fu_374_p1;
    sc_signal< sc_lv<8> > p_383_fu_383_p3;
    sc_signal< sc_lv<10> > p_384_cast_cast_fu_390_p1;
    sc_signal< sc_lv<10> > tmp4_cast_fu_394_p1;
    sc_signal< sc_lv<8> > p_376_fu_411_p3;
    sc_signal< sc_lv<11> > p_377_cast_fu_418_p1;
    sc_signal< sc_lv<11> > p_371_cast_fu_408_p1;
    sc_signal< sc_lv<11> > tmp2_fu_422_p2;
    sc_signal< sc_lv<11> > tmp3_cast_fu_428_p1;
    sc_signal< sc_lv<1> > tmp_mid2_fu_403_p3;
    sc_signal< sc_lv<12> > p_405_cast_fu_445_p1;
    sc_signal< sc_lv<12> > p_399_cast_fu_442_p1;
    sc_signal< sc_lv<12> > p_406_fu_448_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<21> ap_const_lv21_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<21> ap_const_lv21_1F8C94;
    static const sc_lv<21> ap_const_lv21_1;
    static const sc_lv<11> ap_const_lv11_77E;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_435;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_66;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_85;
    static const sc_lv<32> ap_const_lv32_A0;
    static const sc_lv<32> ap_const_lv32_A6;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_C7;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_E6;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_107;
    static const sc_lv<11> ap_const_lv11_77D;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00001001();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack();
    void thread_exitcond8_fu_172_p2();
    void thread_exitcond_flatten_fu_160_p2();
    void thread_hw_output_V_last_V();
    void thread_hw_output_V_last_V_ap_vld();
    void thread_hw_output_V_last_V_blk_n();
    void thread_hw_output_V_value_V();
    void thread_hw_output_V_value_V_ap_vld();
    void thread_hw_output_V_value_V_blk_n();
    void thread_indvar_flatten_next_fu_166_p2();
    void thread_p_346_fu_211_p1();
    void thread_p_349_cast_fu_215_p1();
    void thread_p_355_fu_229_p3();
    void thread_p_356_cast_fu_237_p1();
    void thread_p_357_cast_fu_371_p1();
    void thread_p_357_fu_241_p2();
    void thread_p_360_fu_247_p4();
    void thread_p_363_cast_cast_fu_257_p1();
    void thread_p_369_fu_271_p3();
    void thread_p_370_cast_cast_fu_279_p1();
    void thread_p_371_cast_fu_408_p1();
    void thread_p_371_fu_377_p2();
    void thread_p_376_fu_411_p3();
    void thread_p_377_cast_fu_418_p1();
    void thread_p_383_fu_383_p3();
    void thread_p_384_cast_cast_fu_390_p1();
    void thread_p_388_fu_309_p4();
    void thread_p_391_cast_cast_fu_319_p1();
    void thread_p_397_fu_333_p3();
    void thread_p_398_cast_cast_fu_341_p1();
    void thread_p_399_cast_fu_442_p1();
    void thread_p_399_fu_431_p2();
    void thread_p_405_cast_fu_445_p1();
    void thread_p_406_fu_448_p2();
    void thread_p_hw_input_stencil_stream_V_value_V_blk_n();
    void thread_p_hw_input_stencil_stream_V_value_V_read();
    void thread_p_hw_output_x_scan_1_fu_186_p2();
    void thread_p_hw_output_x_scan_s_fu_178_p3();
    void thread_p_hw_output_y_scan_1_phi_fu_141_p4();
    void thread_p_hw_output_y_scan_2_fu_192_p2();
    void thread_p_hw_output_y_scan_s_fu_204_p3();
    void thread_tmp1_cast_fu_374_p1();
    void thread_tmp1_fu_283_p2();
    void thread_tmp2_fu_422_p2();
    void thread_tmp3_cast_fu_428_p1();
    void thread_tmp3_fu_397_p2();
    void thread_tmp4_cast_fu_394_p1();
    void thread_tmp4_fu_345_p2();
    void thread_tmp5_fu_198_p2();
    void thread_tmp_2_fu_219_p4();
    void thread_tmp_3_fu_261_p4();
    void thread_tmp_6_fu_323_p4();
    void thread_tmp_last_V_fu_437_p2();
    void thread_tmp_mid1_fu_366_p2();
    void thread_tmp_mid2_fu_403_p3();
    void thread_tmp_s_fu_361_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

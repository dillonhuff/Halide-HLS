

================================================================
== Vivado HLS Report for 'Loop_4_proc'
================================================================
* Date:           Tue Mar 17 19:40:36 2020

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        sharpen
* Solution:       hls_target
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.60|      7.33|        0.70|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2067608|  2067608|  2067608|  2067608|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |          |      Latency      | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+---------+---------+----------+-----------+-----------+---------+----------+
        |- Loop 1  |  2067606|  2067606|         4|          1|          1|  2067604|    yes   |
        +----------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 1
  Pipeline-0: II = 1, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	6  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	2  / true
6 --> 
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_7 (5)  [1/1] 0.00ns
newFuncRoot:0  call void (...)* @_ssdm_op_SpecMemCore(i32* %p_mul_stencil_stream_V_value_V, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_8 (6)  [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecMemCore(i32* %p_delayed_input_stencil_stream_V_value_V, [1 x i8]* @p_str, [9 x i8]* @p_str2, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_9 (7)  [1/1] 0.00ns
newFuncRoot:2  call void (...)* @_ssdm_op_SpecInterface(i32* %p_mul_stencil_stream_V_value_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_10 (8)  [1/1] 0.00ns
newFuncRoot:3  call void (...)* @_ssdm_op_SpecInterface(i32* %p_delayed_input_stencil_stream_V_value_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_11 (9)  [1/1] 1.59ns
newFuncRoot:4  br label %.preheader


 <State 2>: 7.33ns
ST_2: indvar_flatten (11)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i21 [ 0, %newFuncRoot ], [ %indvar_flatten_next, %.preheader56 ]

ST_2: p_hw_output_y_scan_1 (12)  [1/1] 0.00ns  loc: hls_target.cpp:301
.preheader:1  %p_hw_output_y_scan_1 = phi i11 [ 0, %newFuncRoot ], [ %p_hw_output_y_scan_s, %.preheader56 ]

ST_2: p_hw_output_x_scan_2 (13)  [1/1] 0.00ns
.preheader:2  %p_hw_output_x_scan_2 = phi i11 [ 0, %newFuncRoot ], [ %p_hw_output_x_scan_1, %.preheader56 ]

ST_2: exitcond_flatten (14)  [1/1] 3.15ns
.preheader:3  %exitcond_flatten = icmp eq i21 %indvar_flatten, -29548

ST_2: indvar_flatten_next (15)  [1/1] 2.59ns
.preheader:4  %indvar_flatten_next = add i21 %indvar_flatten, 1

ST_2: StgValue_17 (16)  [1/1] 0.00ns
.preheader:5  br i1 %exitcond_flatten, label %.exitStub, label %.preheader56

ST_2: exitcond7 (19)  [1/1] 2.94ns  loc: hls_target.cpp:301
.preheader56:1  %exitcond7 = icmp eq i11 %p_hw_output_x_scan_2, -130

ST_2: p_hw_output_x_scan_s (20)  [1/1] 2.07ns  loc: hls_target.cpp:301
.preheader56:2  %p_hw_output_x_scan_s = select i1 %exitcond7, i11 0, i11 %p_hw_output_x_scan_2

ST_2: p_hw_output_x_scan_1 (50)  [1/1] 2.33ns  loc: hls_target.cpp:301
.preheader56:32  %p_hw_output_x_scan_1 = add i11 1, %p_hw_output_x_scan_s


 <State 3>: 4.77ns
ST_3: p_hw_output_y_scan_2 (21)  [1/1] 2.33ns  loc: hls_target.cpp:299
.preheader56:3  %p_hw_output_y_scan_2 = add i11 1, %p_hw_output_y_scan_1

ST_3: tmp_1 (23)  [1/1] 2.94ns  loc: hls_target.cpp:334
.preheader56:5  %tmp_1 = icmp eq i11 %p_hw_output_y_scan_1, -971

ST_3: p_hw_output_y_scan_s (25)  [1/1] 2.07ns  loc: hls_target.cpp:301
.preheader56:7  %p_hw_output_y_scan_s = select i1 %exitcond7, i11 %p_hw_output_y_scan_2, i11 %p_hw_output_y_scan_1

ST_3: tmp_value_V_4 (28)  [1/1] 2.45ns  loc: hls_target.cpp:307
.preheader56:10  %tmp_value_V_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %p_mul_stencil_stream_V_value_V)

ST_3: tmp_value_V_5 (29)  [1/1] 2.45ns  loc: hls_target.cpp:312
.preheader56:11  %tmp_value_V_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %p_delayed_input_stencil_stream_V_value_V)

ST_3: p_471 (30)  [1/1] 0.00ns  loc: hls_target.cpp:318
.preheader56:12  %p_471 = trunc i32 %tmp_value_V_5 to i8

ST_3: p_s (31)  [1/1] 0.00ns  loc: hls_target.cpp:321
.preheader56:13  %p_s = call i4 @_ssdm_op_PartSelect.i4.i32.i32.i32(i32 %tmp_value_V_4, i32 4, i32 7)

ST_3: p_474 (32)  [1/1] 0.00ns  loc: hls_target.cpp:321
.preheader56:14  %p_474 = zext i4 %p_s to i8

ST_3: p_479 (33)  [1/1] 2.32ns  loc: hls_target.cpp:326
.preheader56:15  %p_479 = sub i8 %p_474, %p_471

ST_3: p_475 (34)  [1/1] 2.32ns  loc: hls_target.cpp:322
.preheader56:16  %p_475 = sub i8 %p_471, %p_474

ST_3: tmp_12 (35)  [1/1] 0.00ns  loc: hls_target.cpp:325
.preheader56:17  %tmp_12 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %p_475, i32 4, i32 7)

ST_3: tmp_13 (37)  [1/1] 0.00ns  loc: hls_target.cpp:327
.preheader56:19  %tmp_13 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %p_479, i32 4, i32 7)

ST_3: tmp_s (46)  [1/1] 2.94ns  loc: hls_target.cpp:334
.preheader56:28  %tmp_s = icmp eq i11 %p_hw_output_x_scan_s, -131


 <State 4>: 3.10ns
ST_4: tmp_3_mid1 (22)  [1/1] 2.94ns  loc: hls_target.cpp:334
.preheader56:4  %tmp_3_mid1 = icmp eq i11 %p_hw_output_y_scan_2, -971

ST_4: p_478 (36)  [1/1] 3.10ns  loc: hls_target.cpp:325
.preheader56:18  %p_478 = icmp ne i4 %tmp_12, 0

ST_4: p_480 (38)  [1/1] 3.10ns  loc: hls_target.cpp:327
.preheader56:20  %p_480 = icmp ne i4 %tmp_13, 0


 <State 5>: 2.32ns
ST_5: empty (18)  [1/1] 0.00ns
.preheader56:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2067604, i64 2067604, i64 2067604)

ST_5: tmp_3_mid2 (24)  [1/1] 0.00ns  loc: hls_target.cpp:334 (grouped into LUT with out node tmp_last_V)
.preheader56:6  %tmp_3_mid2 = select i1 %exitcond7, i1 %tmp_3_mid1, i1 %tmp_1

ST_5: tmp_4 (26)  [1/1] 0.00ns  loc: hls_target.cpp:302
.preheader56:8  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_5: StgValue_40 (27)  [1/1] 0.00ns  loc: hls_target.cpp:303
.preheader56:9  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_5: tmp (39)  [1/1] 0.00ns  loc: hls_target.cpp:330 (grouped into LUT with out node p_484)
.preheader56:21  %tmp = call i6 @_ssdm_op_PartSelect.i6.i8.i32.i32(i8 %p_475, i32 2, i32 7)

ST_5: tmp_14 (40)  [1/1] 0.00ns  loc: hls_target.cpp:329 (grouped into LUT with out node p_484)
.preheader56:22  %tmp_14 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %p_475, i32 2, i32 3)

ST_5: tmp_15 (41)  [1/1] 0.00ns  loc: hls_target.cpp:328 (grouped into LUT with out node p_484)
.preheader56:23  %tmp_15 = select i1 %p_480, i2 %tmp_14, i2 0

ST_5: tmp_5_cast (42)  [1/1] 0.00ns  loc: hls_target.cpp:329 (grouped into LUT with out node p_484)
.preheader56:24  %tmp_5_cast = zext i2 %tmp_15 to i6

ST_5: p_483 (43)  [1/1] 0.00ns  loc: hls_target.cpp:329 (grouped into LUT with out node p_484)
.preheader56:25  %p_483 = select i1 %p_478, i6 %tmp, i6 %tmp_5_cast

ST_5: p_483_cast (44)  [1/1] 0.00ns  loc: hls_target.cpp:329 (grouped into LUT with out node p_484)
.preheader56:26  %p_483_cast = zext i6 %p_483 to i8

ST_5: p_484 (45)  [1/1] 2.32ns  loc: hls_target.cpp:331 (out node of the LUT)
.preheader56:27  %p_484 = add i8 %p_483_cast, %p_471

ST_5: tmp_last_V (47)  [1/1] 2.07ns  loc: hls_target.cpp:334 (out node of the LUT)
.preheader56:29  %tmp_last_V = and i1 %tmp_s, %tmp_3_mid2

ST_5: StgValue_49 (48)  [1/1] 0.00ns  loc: hls_target.cpp:339
.preheader56:30  call void @_ssdm_op_Write.ap_auto.volatile.i8P.i1P(i8* %hw_output_V_value_V, i1* %hw_output_V_last_V, i8 %p_484, i1 %tmp_last_V)

ST_5: empty_86 (49)  [1/1] 0.00ns  loc: hls_target.cpp:341
.preheader56:31  %empty_86 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_4)

ST_5: StgValue_51 (51)  [1/1] 0.00ns  loc: hls_target.cpp:301
.preheader56:33  br label %.preheader


 <State 6>: 0.00ns
ST_6: StgValue_52 (53)  [1/1] 0.00ns
.exitStub:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.6ns, clock uncertainty: 0.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten') with incoming values : ('indvar_flatten_next') [11]  (1.59 ns)

 <State 2>: 7.33ns
The critical path consists of the following:
	'phi' operation ('_hw_output_x___scan_dim_0') with incoming values : ('_hw_output_x___scan_dim_0', hls_target.cpp:301) [13]  (0 ns)
	'icmp' operation ('exitcond7', hls_target.cpp:301) [19]  (2.94 ns)
	'select' operation ('p_hw_output_x_scan_s', hls_target.cpp:301) [20]  (2.07 ns)
	'add' operation ('_hw_output_x___scan_dim_0', hls_target.cpp:301) [50]  (2.33 ns)

 <State 3>: 4.77ns
The critical path consists of the following:
	fifo read on port 'p_mul_stencil_stream_V_value_V' (hls_target.cpp:307) [28]  (2.45 ns)
	'sub' operation ('_479', hls_target.cpp:326) [33]  (2.32 ns)

 <State 4>: 3.1ns
The critical path consists of the following:
	'icmp' operation ('_478', hls_target.cpp:325) [36]  (3.1 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'select' operation ('_483', hls_target.cpp:329) [43]  (0 ns)
	'add' operation ('_484', hls_target.cpp:331) [45]  (2.32 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

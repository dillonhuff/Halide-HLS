// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_1_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_1_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_1_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_1_proc::ap_ST_fsm_state7 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_1_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_1_proc::ap_const_lv32_1 = "1";
const bool Loop_1_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_1_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_1_proc::ap_const_lv1_1 = "1";
const sc_lv<21> Loop_1_proc::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<11> Loop_1_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1F8C94 = "111111000110010010100";
const sc_lv<21> Loop_1_proc::ap_const_lv21_1 = "1";
const sc_lv<11> Loop_1_proc::ap_const_lv11_77E = "11101111110";
const sc_lv<11> Loop_1_proc::ap_const_lv11_1 = "1";
const sc_lv<11> Loop_1_proc::ap_const_lv11_435 = "10000110101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_40 = "1000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_5F = "1011111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_C0 = "11000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_DF = "11011111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_100 = "100000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_11F = "100011111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_20 = "100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_3E = "111110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_60 = "1100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_7E = "1111110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_80 = "10000000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_9D = "10011101";
const sc_lv<32> Loop_1_proc::ap_const_lv32_A0 = "10100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_BE = "10111110";
const sc_lv<32> Loop_1_proc::ap_const_lv32_E0 = "11100000";
const sc_lv<32> Loop_1_proc::ap_const_lv32_FE = "11111110";
const sc_lv<11> Loop_1_proc::ap_const_lv11_77D = "11101111101";
const sc_lv<2> Loop_1_proc::ap_const_lv2_0 = "00";
const sc_lv<32> Loop_1_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_1_proc::ap_const_lv32_1F = "11111";
const sc_lv<32> Loop_1_proc::ap_const_lv32_2 = "10";

Loop_1_proc::Loop_1_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_405 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_160_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_exitcond_flatten_fu_160_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_126 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_172_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_x_scan_2_reg_149 );
    sensitive << ( exitcond_flatten_fu_160_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );
    sensitive << ( tmp_last_V_reg_520 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( tmp_3_fu_390_p4 );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_405 );

    SC_METHOD(thread_indvar_flatten_next_fu_166_p2);
    sensitive << ( indvar_flatten_reg_126 );

    SC_METHOD(thread_p_345_fu_211_p1);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_dout );

    SC_METHOD(thread_p_353_fu_305_p3);
    sensitive << ( tmp_2_reg_465 );

    SC_METHOD(thread_p_365_fu_359_p3);
    sensitive << ( ap_reg_pp0_iter2_tmp_4_reg_470 );

    SC_METHOD(thread_p_371_fu_312_p3);
    sensitive << ( tmp_5_reg_475 );

    SC_METHOD(thread_p_377_fu_319_p3);
    sensitive << ( tmp_6_reg_480 );

    SC_METHOD(thread_p_389_fu_326_p3);
    sensitive << ( tmp_7_reg_485 );

    SC_METHOD(thread_p_397_fu_385_p2);
    sensitive << ( tmp1_reg_515 );
    sensitive << ( tmp4_fu_381_p2 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_hw_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_405 );

    SC_METHOD(thread_p_hw_input_stencil_stream_V_value_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_hw_output_x_scan_1_fu_186_p2);
    sensitive << ( p_hw_output_x_scan_s_fu_178_p3 );

    SC_METHOD(thread_p_hw_output_x_scan_s_fu_178_p3);
    sensitive << ( p_hw_output_x_scan_2_reg_149 );
    sensitive << ( exitcond_fu_172_p2 );

    SC_METHOD(thread_p_hw_output_y_scan_1_phi_fu_141_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( p_hw_output_y_scan_1_reg_137 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_405 );
    sensitive << ( p_hw_output_y_scan_s_reg_440 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_hw_output_y_scan_2_fu_192_p2);
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_p_hw_output_y_scan_s_fu_204_p3);
    sensitive << ( exitcond_reg_414 );
    sensitive << ( p_hw_output_y_scan_2_fu_192_p2 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_tmp1_fu_371_p2);
    sensitive << ( tmp2_reg_500 );
    sensitive << ( tmp3_fu_366_p2 );

    SC_METHOD(thread_tmp2_fu_333_p2);
    sensitive << ( p_345_reg_445 );
    sensitive << ( p_353_fu_305_p3 );

    SC_METHOD(thread_tmp3_fu_366_p2);
    sensitive << ( ap_reg_pp0_iter2_p_357_reg_450 );
    sensitive << ( p_365_fu_359_p3 );

    SC_METHOD(thread_tmp4_fu_381_p2);
    sensitive << ( ap_reg_pp0_iter3_tmp5_reg_505 );
    sensitive << ( ap_reg_pp0_iter3_tmp6_reg_510 );

    SC_METHOD(thread_tmp5_fu_338_p2);
    sensitive << ( p_377_fu_319_p3 );
    sensitive << ( p_371_fu_312_p3 );

    SC_METHOD(thread_tmp6_fu_349_p2);
    sensitive << ( p_381_reg_455 );
    sensitive << ( tmp7_fu_344_p2 );

    SC_METHOD(thread_tmp7_fu_344_p2);
    sensitive << ( p_393_reg_460 );
    sensitive << ( p_389_fu_326_p3 );

    SC_METHOD(thread_tmp8_fu_198_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( exitcond_reg_414 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_141_p4 );

    SC_METHOD(thread_tmp_3_fu_390_p4);
    sensitive << ( p_397_fu_385_p2 );

    SC_METHOD(thread_tmp_last_V_fu_376_p2);
    sensitive << ( ap_reg_pp0_iter2_tmp_s_reg_490 );
    sensitive << ( tmp_mid2_fu_354_p3 );

    SC_METHOD(thread_tmp_mid1_fu_300_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_405 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_reg_414 );
    sensitive << ( p_hw_output_y_scan_2_reg_430 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_mid2_fu_354_p3);
    sensitive << ( ap_reg_pp0_iter2_exitcond_reg_414 );
    sensitive << ( ap_reg_pp0_iter2_tmp8_reg_435 );
    sensitive << ( tmp_mid1_reg_495 );

    SC_METHOD(thread_tmp_s_fu_295_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_405 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( p_hw_output_x_scan_s_reg_420 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_fu_160_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_1_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_dout, "(port)p_hw_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_empty_n, "(port)p_hw_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_read, "(port)p_hw_input_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_hw_input_stencil_stream_V_value_V_blk_n, "p_hw_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_405, "exitcond_flatten_reg_405");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_405, "ap_reg_pp0_iter3_exitcond_flatten_reg_405");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_126, "indvar_flatten_reg_126");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_reg_137, "p_hw_output_y_scan_1_reg_137");
    sc_trace(mVcdFile, p_hw_output_x_scan_2_reg_149, "p_hw_output_x_scan_2_reg_149");
    sc_trace(mVcdFile, exitcond_flatten_fu_160_p2, "exitcond_flatten_fu_160_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_405, "ap_reg_pp0_iter1_exitcond_flatten_reg_405");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_405, "ap_reg_pp0_iter2_exitcond_flatten_reg_405");
    sc_trace(mVcdFile, indvar_flatten_next_fu_166_p2, "indvar_flatten_next_fu_166_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond_fu_172_p2, "exitcond_fu_172_p2");
    sc_trace(mVcdFile, exitcond_reg_414, "exitcond_reg_414");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_414, "ap_reg_pp0_iter1_exitcond_reg_414");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_414, "ap_reg_pp0_iter2_exitcond_reg_414");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_fu_178_p3, "p_hw_output_x_scan_s_fu_178_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_reg_420, "p_hw_output_x_scan_s_reg_420");
    sc_trace(mVcdFile, p_hw_output_x_scan_1_fu_186_p2, "p_hw_output_x_scan_1_fu_186_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_fu_192_p2, "p_hw_output_y_scan_2_fu_192_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_reg_430, "p_hw_output_y_scan_2_reg_430");
    sc_trace(mVcdFile, tmp8_fu_198_p2, "tmp8_fu_198_p2");
    sc_trace(mVcdFile, tmp8_reg_435, "tmp8_reg_435");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp8_reg_435, "ap_reg_pp0_iter2_tmp8_reg_435");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_fu_204_p3, "p_hw_output_y_scan_s_fu_204_p3");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_reg_440, "p_hw_output_y_scan_s_reg_440");
    sc_trace(mVcdFile, p_345_fu_211_p1, "p_345_fu_211_p1");
    sc_trace(mVcdFile, p_345_reg_445, "p_345_reg_445");
    sc_trace(mVcdFile, p_357_reg_450, "p_357_reg_450");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_p_357_reg_450, "ap_reg_pp0_iter2_p_357_reg_450");
    sc_trace(mVcdFile, p_381_reg_455, "p_381_reg_455");
    sc_trace(mVcdFile, p_393_reg_460, "p_393_reg_460");
    sc_trace(mVcdFile, tmp_2_reg_465, "tmp_2_reg_465");
    sc_trace(mVcdFile, tmp_4_reg_470, "tmp_4_reg_470");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_4_reg_470, "ap_reg_pp0_iter2_tmp_4_reg_470");
    sc_trace(mVcdFile, tmp_5_reg_475, "tmp_5_reg_475");
    sc_trace(mVcdFile, tmp_6_reg_480, "tmp_6_reg_480");
    sc_trace(mVcdFile, tmp_7_reg_485, "tmp_7_reg_485");
    sc_trace(mVcdFile, tmp_s_fu_295_p2, "tmp_s_fu_295_p2");
    sc_trace(mVcdFile, tmp_s_reg_490, "tmp_s_reg_490");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_s_reg_490, "ap_reg_pp0_iter2_tmp_s_reg_490");
    sc_trace(mVcdFile, tmp_mid1_fu_300_p2, "tmp_mid1_fu_300_p2");
    sc_trace(mVcdFile, tmp_mid1_reg_495, "tmp_mid1_reg_495");
    sc_trace(mVcdFile, tmp2_fu_333_p2, "tmp2_fu_333_p2");
    sc_trace(mVcdFile, tmp2_reg_500, "tmp2_reg_500");
    sc_trace(mVcdFile, tmp5_fu_338_p2, "tmp5_fu_338_p2");
    sc_trace(mVcdFile, tmp5_reg_505, "tmp5_reg_505");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp5_reg_505, "ap_reg_pp0_iter3_tmp5_reg_505");
    sc_trace(mVcdFile, tmp6_fu_349_p2, "tmp6_fu_349_p2");
    sc_trace(mVcdFile, tmp6_reg_510, "tmp6_reg_510");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp6_reg_510, "ap_reg_pp0_iter3_tmp6_reg_510");
    sc_trace(mVcdFile, tmp1_fu_371_p2, "tmp1_fu_371_p2");
    sc_trace(mVcdFile, tmp1_reg_515, "tmp1_reg_515");
    sc_trace(mVcdFile, tmp_last_V_fu_376_p2, "tmp_last_V_fu_376_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_520, "tmp_last_V_reg_520");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_phi_fu_141_p4, "p_hw_output_y_scan_1_phi_fu_141_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_353_fu_305_p3, "p_353_fu_305_p3");
    sc_trace(mVcdFile, p_377_fu_319_p3, "p_377_fu_319_p3");
    sc_trace(mVcdFile, p_371_fu_312_p3, "p_371_fu_312_p3");
    sc_trace(mVcdFile, p_389_fu_326_p3, "p_389_fu_326_p3");
    sc_trace(mVcdFile, tmp7_fu_344_p2, "tmp7_fu_344_p2");
    sc_trace(mVcdFile, p_365_fu_359_p3, "p_365_fu_359_p3");
    sc_trace(mVcdFile, tmp3_fu_366_p2, "tmp3_fu_366_p2");
    sc_trace(mVcdFile, tmp_mid2_fu_354_p3, "tmp_mid2_fu_354_p3");
    sc_trace(mVcdFile, tmp4_fu_381_p2, "tmp4_fu_381_p2");
    sc_trace(mVcdFile, p_397_fu_385_p2, "p_397_fu_385_p2");
    sc_trace(mVcdFile, tmp_3_fu_390_p4, "tmp_3_fu_390_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_1_proc::~Loop_1_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_1_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        indvar_flatten_reg_126 = indvar_flatten_next_fu_166_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_126 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        p_hw_output_x_scan_2_reg_149 = p_hw_output_x_scan_1_fu_186_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_x_scan_2_reg_149 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_405.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_reg_137 = p_hw_output_y_scan_s_reg_440.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_y_scan_1_reg_137 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_405 = exitcond_flatten_reg_405.read();
        ap_reg_pp0_iter1_exitcond_reg_414 = exitcond_reg_414.read();
        exitcond_flatten_reg_405 = exitcond_flatten_fu_160_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_405 = ap_reg_pp0_iter1_exitcond_flatten_reg_405.read();
        ap_reg_pp0_iter2_exitcond_reg_414 = ap_reg_pp0_iter1_exitcond_reg_414.read();
        ap_reg_pp0_iter2_p_357_reg_450 = p_357_reg_450.read();
        ap_reg_pp0_iter2_tmp8_reg_435 = tmp8_reg_435.read();
        ap_reg_pp0_iter2_tmp_4_reg_470 = tmp_4_reg_470.read();
        ap_reg_pp0_iter2_tmp_s_reg_490 = tmp_s_reg_490.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_405 = ap_reg_pp0_iter2_exitcond_flatten_reg_405.read();
        ap_reg_pp0_iter3_tmp5_reg_505 = tmp5_reg_505.read();
        ap_reg_pp0_iter3_tmp6_reg_510 = tmp6_reg_510.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_160_p2.read()))) {
        exitcond_reg_414 = exitcond_fu_172_p2.read();
        p_hw_output_x_scan_s_reg_420 = p_hw_output_x_scan_s_fu_178_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_345_reg_445 = p_345_fu_211_p1.read();
        p_357_reg_450 = p_hw_input_stencil_stream_V_value_V_dout.read().range(95, 64);
        p_381_reg_455 = p_hw_input_stencil_stream_V_value_V_dout.read().range(223, 192);
        p_393_reg_460 = p_hw_input_stencil_stream_V_value_V_dout.read().range(287, 256);
        p_hw_output_y_scan_2_reg_430 = p_hw_output_y_scan_2_fu_192_p2.read();
        tmp_2_reg_465 = p_hw_input_stencil_stream_V_value_V_dout.read().range(62, 32);
        tmp_4_reg_470 = p_hw_input_stencil_stream_V_value_V_dout.read().range(126, 96);
        tmp_5_reg_475 = p_hw_input_stencil_stream_V_value_V_dout.read().range(157, 128);
        tmp_6_reg_480 = p_hw_input_stencil_stream_V_value_V_dout.read().range(190, 160);
        tmp_7_reg_485 = p_hw_input_stencil_stream_V_value_V_dout.read().range(254, 224);
        tmp_s_reg_490 = tmp_s_fu_295_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_output_y_scan_s_reg_440 = p_hw_output_y_scan_s_fu_204_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_405.read()))) {
        tmp1_reg_515 = tmp1_fu_371_p2.read();
        tmp_last_V_reg_520 = tmp_last_V_fu_376_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_405.read()))) {
        tmp2_reg_500 = tmp2_fu_333_p2.read();
        tmp5_reg_505 = tmp5_fu_338_p2.read();
        tmp6_reg_510 = tmp6_fu_349_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_414.read()))) {
        tmp8_reg_435 = tmp8_fu_198_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_405.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_reg_414.read(), ap_const_lv1_1))) {
        tmp_mid1_reg_495 = tmp_mid1_fu_300_p2.read();
    }
}

void Loop_1_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_1_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_1_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_1_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_1_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, p_hw_input_stencil_stream_V_value_V_empty_n.read()));
}

void Loop_1_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()));
}

void Loop_1_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_1_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_1_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_1_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_exitcond_flatten_fu_160_p2() {
    exitcond_flatten_fu_160_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv21_1F8C94.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_126.read() == ap_const_lv21_1F8C94);
}

void Loop_1_proc::thread_exitcond_fu_172_p2() {
    exitcond_fu_172_p2 = (!p_hw_output_x_scan_2_reg_149.read().is_01() || !ap_const_lv11_77E.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_2_reg_149.read() == ap_const_lv11_77E);
}

void Loop_1_proc::thread_hw_output_V_last_V() {
    hw_output_V_last_V = tmp_last_V_reg_520.read();
}

void Loop_1_proc::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()))) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V() {
    hw_output_V_value_V = esl_sext<32,28>(tmp_3_fu_390_p4.read());
}

void Loop_1_proc::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_hw_output_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_405.read()))) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_indvar_flatten_next_fu_166_p2() {
    indvar_flatten_next_fu_166_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_126.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void Loop_1_proc::thread_p_345_fu_211_p1() {
    p_345_fu_211_p1 = p_hw_input_stencil_stream_V_value_V_dout.read().range(32-1, 0);
}

void Loop_1_proc::thread_p_353_fu_305_p3() {
    p_353_fu_305_p3 = esl_concat<31,1>(tmp_2_reg_465.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_365_fu_359_p3() {
    p_365_fu_359_p3 = esl_concat<31,1>(ap_reg_pp0_iter2_tmp_4_reg_470.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_371_fu_312_p3() {
    p_371_fu_312_p3 = esl_concat<30,2>(tmp_5_reg_475.read(), ap_const_lv2_0);
}

void Loop_1_proc::thread_p_377_fu_319_p3() {
    p_377_fu_319_p3 = esl_concat<31,1>(tmp_6_reg_480.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_389_fu_326_p3() {
    p_389_fu_326_p3 = esl_concat<31,1>(tmp_7_reg_485.read(), ap_const_lv1_0);
}

void Loop_1_proc::thread_p_397_fu_385_p2() {
    p_397_fu_385_p2 = (!tmp1_reg_515.read().is_01() || !tmp4_fu_381_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp1_reg_515.read()) + sc_biguint<32>(tmp4_fu_381_p2.read()));
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0))) {
        p_hw_input_stencil_stream_V_value_V_blk_n = p_hw_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_hw_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_1_proc::thread_p_hw_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_405.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_hw_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_1_proc::thread_p_hw_output_x_scan_1_fu_186_p2() {
    p_hw_output_x_scan_1_fu_186_p2 = (!ap_const_lv11_1.is_01() || !p_hw_output_x_scan_s_fu_178_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(p_hw_output_x_scan_s_fu_178_p3.read()));
}

void Loop_1_proc::thread_p_hw_output_x_scan_s_fu_178_p3() {
    p_hw_output_x_scan_s_fu_178_p3 = (!exitcond_fu_172_p2.read()[0].is_01())? sc_lv<11>(): ((exitcond_fu_172_p2.read()[0].to_bool())? ap_const_lv11_0: p_hw_output_x_scan_2_reg_149.read());
}

void Loop_1_proc::thread_p_hw_output_y_scan_1_phi_fu_141_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_405.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_phi_fu_141_p4 = p_hw_output_y_scan_s_reg_440.read();
    } else {
        p_hw_output_y_scan_1_phi_fu_141_p4 = p_hw_output_y_scan_1_reg_137.read();
    }
}

void Loop_1_proc::thread_p_hw_output_y_scan_2_fu_192_p2() {
    p_hw_output_y_scan_2_fu_192_p2 = (!ap_const_lv11_1.is_01() || !p_hw_output_y_scan_1_phi_fu_141_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(p_hw_output_y_scan_1_phi_fu_141_p4.read()));
}

void Loop_1_proc::thread_p_hw_output_y_scan_s_fu_204_p3() {
    p_hw_output_y_scan_s_fu_204_p3 = (!exitcond_reg_414.read()[0].is_01())? sc_lv<11>(): ((exitcond_reg_414.read()[0].to_bool())? p_hw_output_y_scan_2_fu_192_p2.read(): p_hw_output_y_scan_1_phi_fu_141_p4.read());
}

void Loop_1_proc::thread_tmp1_fu_371_p2() {
    tmp1_fu_371_p2 = (!tmp2_reg_500.read().is_01() || !tmp3_fu_366_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp2_reg_500.read()) + sc_biguint<32>(tmp3_fu_366_p2.read()));
}

void Loop_1_proc::thread_tmp2_fu_333_p2() {
    tmp2_fu_333_p2 = (!p_345_reg_445.read().is_01() || !p_353_fu_305_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_345_reg_445.read()) + sc_biguint<32>(p_353_fu_305_p3.read()));
}

void Loop_1_proc::thread_tmp3_fu_366_p2() {
    tmp3_fu_366_p2 = (!p_365_fu_359_p3.read().is_01() || !ap_reg_pp0_iter2_p_357_reg_450.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_365_fu_359_p3.read()) + sc_biguint<32>(ap_reg_pp0_iter2_p_357_reg_450.read()));
}

void Loop_1_proc::thread_tmp4_fu_381_p2() {
    tmp4_fu_381_p2 = (!ap_reg_pp0_iter3_tmp5_reg_505.read().is_01() || !ap_reg_pp0_iter3_tmp6_reg_510.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_reg_pp0_iter3_tmp5_reg_505.read()) + sc_biguint<32>(ap_reg_pp0_iter3_tmp6_reg_510.read()));
}

void Loop_1_proc::thread_tmp5_fu_338_p2() {
    tmp5_fu_338_p2 = (!p_377_fu_319_p3.read().is_01() || !p_371_fu_312_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_377_fu_319_p3.read()) + sc_biguint<32>(p_371_fu_312_p3.read()));
}

void Loop_1_proc::thread_tmp6_fu_349_p2() {
    tmp6_fu_349_p2 = (!p_381_reg_455.read().is_01() || !tmp7_fu_344_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_381_reg_455.read()) + sc_biguint<32>(tmp7_fu_344_p2.read()));
}

void Loop_1_proc::thread_tmp7_fu_344_p2() {
    tmp7_fu_344_p2 = (!p_393_reg_460.read().is_01() || !p_389_fu_326_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_393_reg_460.read()) + sc_biguint<32>(p_389_fu_326_p3.read()));
}

void Loop_1_proc::thread_tmp8_fu_198_p2() {
    tmp8_fu_198_p2 = (!p_hw_output_y_scan_1_phi_fu_141_p4.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_phi_fu_141_p4.read() == ap_const_lv11_435);
}

void Loop_1_proc::thread_tmp_3_fu_390_p4() {
    tmp_3_fu_390_p4 = p_397_fu_385_p2.read().range(31, 4);
}

void Loop_1_proc::thread_tmp_last_V_fu_376_p2() {
    tmp_last_V_fu_376_p2 = (ap_reg_pp0_iter2_tmp_s_reg_490.read() & tmp_mid2_fu_354_p3.read());
}

void Loop_1_proc::thread_tmp_mid1_fu_300_p2() {
    tmp_mid1_fu_300_p2 = (!p_hw_output_y_scan_2_reg_430.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_2_reg_430.read() == ap_const_lv11_435);
}

void Loop_1_proc::thread_tmp_mid2_fu_354_p3() {
    tmp_mid2_fu_354_p3 = (!ap_reg_pp0_iter2_exitcond_reg_414.read()[0].is_01())? sc_lv<1>(): ((ap_reg_pp0_iter2_exitcond_reg_414.read()[0].to_bool())? tmp_mid1_reg_495.read(): ap_reg_pp0_iter2_tmp8_reg_435.read());
}

void Loop_1_proc::thread_tmp_s_fu_295_p2() {
    tmp_s_fu_295_p2 = (!p_hw_output_x_scan_s_reg_420.read().is_01() || !ap_const_lv11_77D.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_s_reg_420.read() == ap_const_lv11_77D);
}

void Loop_1_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_160_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


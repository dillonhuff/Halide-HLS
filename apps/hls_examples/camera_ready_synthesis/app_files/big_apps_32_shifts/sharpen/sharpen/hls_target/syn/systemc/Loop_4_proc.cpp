// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_4_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_4_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_4_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_4_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_4_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_4_proc::ap_ST_fsm_state7 = "100";
const sc_lv<32> Loop_4_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_4_proc::ap_const_boolean_1 = true;
const bool Loop_4_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_4_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_4_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_4_proc::ap_const_lv1_1 = "1";
const sc_lv<21> Loop_4_proc::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<11> Loop_4_proc::ap_const_lv11_0 = "00000000000";
const sc_lv<21> Loop_4_proc::ap_const_lv21_1F8C94 = "111111000110010010100";
const sc_lv<21> Loop_4_proc::ap_const_lv21_1 = "1";
const sc_lv<11> Loop_4_proc::ap_const_lv11_77E = "11101111110";
const sc_lv<11> Loop_4_proc::ap_const_lv11_1 = "1";
const sc_lv<11> Loop_4_proc::ap_const_lv11_435 = "10000110101";
const sc_lv<32> Loop_4_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_4_proc::ap_const_lv32_1F = "11111";
const sc_lv<11> Loop_4_proc::ap_const_lv11_77D = "11101111101";
const sc_lv<28> Loop_4_proc::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> Loop_4_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_4_proc::ap_const_lv32_3 = "11";
const sc_lv<2> Loop_4_proc::ap_const_lv2_0 = "00";

Loop_4_proc::Loop_4_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00001001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( exitcond_flatten_reg_302 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );
    sensitive << ( ap_sig_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_132_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_exitcond7_fu_144_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( p_hw_output_x_scan_2_reg_121 );
    sensitive << ( exitcond_flatten_fu_132_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_132_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_98 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_hw_output_V_last_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );
    sensitive << ( tmp_last_V_reg_390 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );

    SC_METHOD(thread_hw_output_V_last_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_last_V_ap_ack );

    SC_METHOD(thread_hw_output_V_last_V_blk_n);
    sensitive << ( hw_output_V_last_V_ap_ack );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );

    SC_METHOD(thread_hw_output_V_value_V);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );
    sensitive << ( ap_reg_pp0_iter3_tmp_value_V_5_reg_342 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( p_447_cast_fu_292_p1 );

    SC_METHOD(thread_hw_output_V_value_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );
    sensitive << ( ap_block_pp0_stage0_flag00001001 );
    sensitive << ( ap_reg_ioackin_hw_output_V_value_V_ap_ack );

    SC_METHOD(thread_hw_output_V_value_V_blk_n);
    sensitive << ( hw_output_V_value_V_ap_ack );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_reg_pp0_iter3_exitcond_flatten_reg_302 );

    SC_METHOD(thread_indvar_flatten_next_fu_138_p2);
    sensitive << ( indvar_flatten_reg_98 );

    SC_METHOD(thread_p_438_fu_203_p1);
    sensitive << ( p_s_reg_349 );

    SC_METHOD(thread_p_439_fu_211_p2);
    sensitive << ( tmp_value_V_5_reg_342 );
    sensitive << ( p_438_fu_203_p1 );

    SC_METHOD(thread_p_442_fu_241_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_302 );
    sensitive << ( tmp_11_reg_370 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_p_443_fu_206_p2);
    sensitive << ( tmp_value_V_5_reg_342 );
    sensitive << ( p_438_fu_203_p1 );

    SC_METHOD(thread_p_444_fu_246_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_flatten_reg_302 );
    sensitive << ( tmp_12_reg_375 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_p_447_cast_fu_292_p1);
    sensitive << ( p_447_fu_285_p3 );

    SC_METHOD(thread_p_447_fu_285_p3);
    sensitive << ( p_442_reg_380 );
    sensitive << ( tmp_fu_256_p4 );
    sensitive << ( tmp_5_cast_fu_281_p1 );

    SC_METHOD(thread_p_delayed_input_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_delayed_input_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_p_delayed_input_stencil_stream_V_value_V_read);
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_p_hw_output_x_scan_1_fu_158_p2);
    sensitive << ( p_hw_output_x_scan_s_fu_150_p3 );

    SC_METHOD(thread_p_hw_output_x_scan_s_fu_150_p3);
    sensitive << ( p_hw_output_x_scan_2_reg_121 );
    sensitive << ( exitcond7_fu_144_p2 );

    SC_METHOD(thread_p_hw_output_y_scan_1_phi_fu_113_p4);
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( p_hw_output_y_scan_1_reg_109 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_302 );
    sensitive << ( p_hw_output_y_scan_s_reg_337 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_hw_output_y_scan_2_fu_164_p2);
    sensitive << ( p_hw_output_y_scan_1_phi_fu_113_p4 );

    SC_METHOD(thread_p_hw_output_y_scan_s_fu_176_p3);
    sensitive << ( exitcond7_reg_311 );
    sensitive << ( p_hw_output_y_scan_2_fu_164_p2 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_113_p4 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_blk_n);
    sensitive << ( p_mul_stencil_stream_V_value_V_empty_n );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_p_mul_stencil_stream_V_value_V_read);
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_tmp_13_fu_265_p4);
    sensitive << ( ap_reg_pp0_iter3_p_439_reg_364 );

    SC_METHOD(thread_tmp_14_fu_274_p3);
    sensitive << ( p_444_reg_385 );
    sensitive << ( tmp_13_fu_265_p4 );

    SC_METHOD(thread_tmp_1_fu_170_p2);
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( exitcond7_reg_311 );
    sensitive << ( p_hw_output_y_scan_1_phi_fu_113_p4 );

    SC_METHOD(thread_tmp_3_mid1_fu_198_p2);
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten_reg_302 );
    sensitive << ( ap_reg_pp0_iter1_exitcond7_reg_311 );
    sensitive << ( p_hw_output_y_scan_2_reg_327 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_3_mid2_fu_236_p3);
    sensitive << ( ap_reg_pp0_iter2_exitcond7_reg_311 );
    sensitive << ( ap_reg_pp0_iter2_tmp_1_reg_332 );
    sensitive << ( tmp_3_mid1_reg_359 );

    SC_METHOD(thread_tmp_5_cast_fu_281_p1);
    sensitive << ( tmp_14_fu_274_p3 );

    SC_METHOD(thread_tmp_fu_256_p4);
    sensitive << ( ap_reg_pp0_iter3_p_439_reg_364 );

    SC_METHOD(thread_tmp_last_V_fu_251_p2);
    sensitive << ( ap_reg_pp0_iter2_tmp_s_reg_354 );
    sensitive << ( tmp_3_mid2_fu_236_p3 );

    SC_METHOD(thread_tmp_s_fu_193_p2);
    sensitive << ( exitcond_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( p_hw_output_x_scan_s_reg_317 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_fu_132_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_value_V_ap_ack = SC_LOGIC_0;
    ap_reg_ioackin_hw_output_V_last_V_ap_ack = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_4_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, hw_output_V_value_V, "(port)hw_output_V_value_V");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_vld, "(port)hw_output_V_value_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_value_V_ap_ack, "(port)hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, hw_output_V_last_V, "(port)hw_output_V_last_V");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_vld, "(port)hw_output_V_last_V_ap_vld");
    sc_trace(mVcdFile, hw_output_V_last_V_ap_ack, "(port)hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_dout, "(port)p_mul_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_empty_n, "(port)p_mul_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_read, "(port)p_mul_stencil_stream_V_value_V_read");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_dout, "(port)p_delayed_input_stencil_stream_V_value_V_dout");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_empty_n, "(port)p_delayed_input_stencil_stream_V_value_V_empty_n");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_read, "(port)p_delayed_input_stencil_stream_V_value_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, hw_output_V_value_V_blk_n, "hw_output_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, exitcond_flatten_reg_302, "exitcond_flatten_reg_302");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_302, "ap_reg_pp0_iter3_exitcond_flatten_reg_302");
    sc_trace(mVcdFile, hw_output_V_last_V_blk_n, "hw_output_V_last_V_blk_n");
    sc_trace(mVcdFile, p_mul_stencil_stream_V_value_V_blk_n, "p_mul_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, p_delayed_input_stencil_stream_V_value_V_blk_n, "p_delayed_input_stencil_stream_V_value_V_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_98, "indvar_flatten_reg_98");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_reg_109, "p_hw_output_y_scan_1_reg_109");
    sc_trace(mVcdFile, p_hw_output_x_scan_2_reg_121, "p_hw_output_x_scan_2_reg_121");
    sc_trace(mVcdFile, exitcond_flatten_fu_132_p2, "exitcond_flatten_fu_132_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_sig_ioackin_hw_output_V_value_V_ap_ack, "ap_sig_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_302, "ap_reg_pp0_iter1_exitcond_flatten_reg_302");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_302, "ap_reg_pp0_iter2_exitcond_flatten_reg_302");
    sc_trace(mVcdFile, indvar_flatten_next_fu_138_p2, "indvar_flatten_next_fu_138_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, exitcond7_fu_144_p2, "exitcond7_fu_144_p2");
    sc_trace(mVcdFile, exitcond7_reg_311, "exitcond7_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond7_reg_311, "ap_reg_pp0_iter1_exitcond7_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond7_reg_311, "ap_reg_pp0_iter2_exitcond7_reg_311");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_fu_150_p3, "p_hw_output_x_scan_s_fu_150_p3");
    sc_trace(mVcdFile, p_hw_output_x_scan_s_reg_317, "p_hw_output_x_scan_s_reg_317");
    sc_trace(mVcdFile, p_hw_output_x_scan_1_fu_158_p2, "p_hw_output_x_scan_1_fu_158_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_fu_164_p2, "p_hw_output_y_scan_2_fu_164_p2");
    sc_trace(mVcdFile, p_hw_output_y_scan_2_reg_327, "p_hw_output_y_scan_2_reg_327");
    sc_trace(mVcdFile, tmp_1_fu_170_p2, "tmp_1_fu_170_p2");
    sc_trace(mVcdFile, tmp_1_reg_332, "tmp_1_reg_332");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_1_reg_332, "ap_reg_pp0_iter2_tmp_1_reg_332");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_fu_176_p3, "p_hw_output_y_scan_s_fu_176_p3");
    sc_trace(mVcdFile, p_hw_output_y_scan_s_reg_337, "p_hw_output_y_scan_s_reg_337");
    sc_trace(mVcdFile, tmp_value_V_5_reg_342, "tmp_value_V_5_reg_342");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_value_V_5_reg_342, "ap_reg_pp0_iter2_tmp_value_V_5_reg_342");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_tmp_value_V_5_reg_342, "ap_reg_pp0_iter3_tmp_value_V_5_reg_342");
    sc_trace(mVcdFile, p_s_reg_349, "p_s_reg_349");
    sc_trace(mVcdFile, tmp_s_fu_193_p2, "tmp_s_fu_193_p2");
    sc_trace(mVcdFile, tmp_s_reg_354, "tmp_s_reg_354");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_tmp_s_reg_354, "ap_reg_pp0_iter2_tmp_s_reg_354");
    sc_trace(mVcdFile, tmp_3_mid1_fu_198_p2, "tmp_3_mid1_fu_198_p2");
    sc_trace(mVcdFile, tmp_3_mid1_reg_359, "tmp_3_mid1_reg_359");
    sc_trace(mVcdFile, p_439_fu_211_p2, "p_439_fu_211_p2");
    sc_trace(mVcdFile, p_439_reg_364, "p_439_reg_364");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_p_439_reg_364, "ap_reg_pp0_iter3_p_439_reg_364");
    sc_trace(mVcdFile, tmp_11_reg_370, "tmp_11_reg_370");
    sc_trace(mVcdFile, tmp_12_reg_375, "tmp_12_reg_375");
    sc_trace(mVcdFile, p_442_fu_241_p2, "p_442_fu_241_p2");
    sc_trace(mVcdFile, p_442_reg_380, "p_442_reg_380");
    sc_trace(mVcdFile, p_444_fu_246_p2, "p_444_fu_246_p2");
    sc_trace(mVcdFile, p_444_reg_385, "p_444_reg_385");
    sc_trace(mVcdFile, tmp_last_V_fu_251_p2, "tmp_last_V_fu_251_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_390, "tmp_last_V_reg_390");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, p_hw_output_y_scan_1_phi_fu_113_p4, "p_hw_output_y_scan_1_phi_fu_113_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00001001, "ap_block_pp0_stage0_flag00001001");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_value_V_ap_ack, "ap_reg_ioackin_hw_output_V_value_V_ap_ack");
    sc_trace(mVcdFile, ap_reg_ioackin_hw_output_V_last_V_ap_ack, "ap_reg_ioackin_hw_output_V_last_V_ap_ack");
    sc_trace(mVcdFile, p_438_fu_203_p1, "p_438_fu_203_p1");
    sc_trace(mVcdFile, p_443_fu_206_p2, "p_443_fu_206_p2");
    sc_trace(mVcdFile, tmp_3_mid2_fu_236_p3, "tmp_3_mid2_fu_236_p3");
    sc_trace(mVcdFile, tmp_13_fu_265_p4, "tmp_13_fu_265_p4");
    sc_trace(mVcdFile, tmp_14_fu_274_p3, "tmp_14_fu_274_p3");
    sc_trace(mVcdFile, tmp_fu_256_p4, "tmp_fu_256_p4");
    sc_trace(mVcdFile, tmp_5_cast_fu_281_p1, "tmp_5_cast_fu_281_p1");
    sc_trace(mVcdFile, p_447_fu_285_p3, "p_447_fu_285_p3");
    sc_trace(mVcdFile, p_447_cast_fu_292_p1, "p_447_cast_fu_292_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_4_proc::~Loop_4_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_4_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_last_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_last_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, hw_output_V_value_V_ap_ack.read()))) {
                ap_reg_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_132_p2.read()))) {
        indvar_flatten_reg_98 = indvar_flatten_next_fu_138_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_98 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_132_p2.read()))) {
        p_hw_output_x_scan_2_reg_121 = p_hw_output_x_scan_1_fu_158_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_x_scan_2_reg_121 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_302.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_reg_109 = p_hw_output_y_scan_s_reg_337.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_hw_output_y_scan_1_reg_109 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond7_reg_311 = exitcond7_reg_311.read();
        ap_reg_pp0_iter1_exitcond_flatten_reg_302 = exitcond_flatten_reg_302.read();
        exitcond_flatten_reg_302 = exitcond_flatten_fu_132_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond7_reg_311 = ap_reg_pp0_iter1_exitcond7_reg_311.read();
        ap_reg_pp0_iter2_exitcond_flatten_reg_302 = ap_reg_pp0_iter1_exitcond_flatten_reg_302.read();
        ap_reg_pp0_iter2_tmp_1_reg_332 = tmp_1_reg_332.read();
        ap_reg_pp0_iter2_tmp_s_reg_354 = tmp_s_reg_354.read();
        ap_reg_pp0_iter2_tmp_value_V_5_reg_342 = tmp_value_V_5_reg_342.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_302 = ap_reg_pp0_iter2_exitcond_flatten_reg_302.read();
        ap_reg_pp0_iter3_p_439_reg_364 = p_439_reg_364.read();
        ap_reg_pp0_iter3_tmp_value_V_5_reg_342 = ap_reg_pp0_iter2_tmp_value_V_5_reg_342.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_132_p2.read()))) {
        exitcond7_reg_311 = exitcond7_fu_144_p2.read();
        p_hw_output_x_scan_s_reg_317 = p_hw_output_x_scan_s_fu_150_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_302.read()))) {
        p_439_reg_364 = p_439_fu_211_p2.read();
        tmp_11_reg_370 = p_439_fu_211_p2.read().range(31, 4);
        tmp_12_reg_375 = p_443_fu_206_p2.read().range(31, 4);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_302.read()))) {
        p_442_reg_380 = p_442_fu_241_p2.read();
        p_444_reg_385 = p_444_fu_246_p2.read();
        tmp_last_V_reg_390 = tmp_last_V_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_output_y_scan_2_reg_327 = p_hw_output_y_scan_2_fu_164_p2.read();
        p_s_reg_349 = p_mul_stencil_stream_V_value_V_dout.read().range(31, 4);
        tmp_s_reg_354 = tmp_s_fu_193_p2.read();
        tmp_value_V_5_reg_342 = p_delayed_input_stencil_stream_V_value_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_hw_output_y_scan_s_reg_337 = p_hw_output_y_scan_s_fu_176_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond7_reg_311.read()))) {
        tmp_1_reg_332 = tmp_1_fu_170_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_302.read()) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond7_reg_311.read(), ap_const_lv1_1))) {
        tmp_3_mid1_reg_359 = tmp_3_mid1_fu_198_p2.read();
    }
}

void Loop_4_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_4_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_4_proc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00001001() {
    ap_block_pp0_stage0_flag00001001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read()))));
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_4_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
    esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void Loop_4_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_4_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_mul_stencil_stream_V_value_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_delayed_input_stencil_stream_V_value_V_empty_n.read())));
}

void Loop_4_proc::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_hw_output_V_value_V_ap_ack.read()));
}

void Loop_4_proc::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_4_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_132_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_4_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_4_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_ap_sig_ioackin_hw_output_V_value_V_ap_ack() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read())) {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = hw_output_V_value_V_ap_ack.read();
    } else {
        ap_sig_ioackin_hw_output_V_value_V_ap_ack = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_exitcond7_fu_144_p2() {
    exitcond7_fu_144_p2 = (!p_hw_output_x_scan_2_reg_121.read().is_01() || !ap_const_lv11_77E.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_2_reg_121.read() == ap_const_lv11_77E);
}

void Loop_4_proc::thread_exitcond_flatten_fu_132_p2() {
    exitcond_flatten_fu_132_p2 = (!indvar_flatten_reg_98.read().is_01() || !ap_const_lv21_1F8C94.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_98.read() == ap_const_lv21_1F8C94);
}

void Loop_4_proc::thread_hw_output_V_last_V() {
    hw_output_V_last_V = tmp_last_V_reg_390.read();
}

void Loop_4_proc::thread_hw_output_V_last_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_last_V_ap_ack.read()))) {
        hw_output_V_last_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_last_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_hw_output_V_last_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
        hw_output_V_last_V_blk_n = hw_output_V_last_V_ap_ack.read();
    } else {
        hw_output_V_last_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_hw_output_V_value_V() {
    hw_output_V_value_V = (!p_447_cast_fu_292_p1.read().is_01() || !ap_reg_pp0_iter3_tmp_value_V_5_reg_342.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_447_cast_fu_292_p1.read()) + sc_biguint<32>(ap_reg_pp0_iter3_tmp_value_V_5_reg_342.read()));
}

void Loop_4_proc::thread_hw_output_V_value_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00001001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_hw_output_V_value_V_ap_ack.read()))) {
        hw_output_V_value_V_ap_vld = ap_const_logic_1;
    } else {
        hw_output_V_value_V_ap_vld = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_hw_output_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
        hw_output_V_value_V_blk_n = hw_output_V_value_V_ap_ack.read();
    } else {
        hw_output_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_indvar_flatten_next_fu_138_p2() {
    indvar_flatten_next_fu_138_p2 = (!indvar_flatten_reg_98.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(indvar_flatten_reg_98.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void Loop_4_proc::thread_p_438_fu_203_p1() {
    p_438_fu_203_p1 = esl_zext<32,28>(p_s_reg_349.read());
}

void Loop_4_proc::thread_p_439_fu_211_p2() {
    p_439_fu_211_p2 = (!tmp_value_V_5_reg_342.read().is_01() || !p_438_fu_203_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_value_V_5_reg_342.read()) - sc_biguint<32>(p_438_fu_203_p1.read()));
}

void Loop_4_proc::thread_p_442_fu_241_p2() {
    p_442_fu_241_p2 = (!tmp_11_reg_370.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_reg_370.read() != ap_const_lv28_0);
}

void Loop_4_proc::thread_p_443_fu_206_p2() {
    p_443_fu_206_p2 = (!p_438_fu_203_p1.read().is_01() || !tmp_value_V_5_reg_342.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_438_fu_203_p1.read()) - sc_biguint<32>(tmp_value_V_5_reg_342.read()));
}

void Loop_4_proc::thread_p_444_fu_246_p2() {
    p_444_fu_246_p2 = (!tmp_12_reg_375.read().is_01() || !ap_const_lv28_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_reg_375.read() != ap_const_lv28_0);
}

void Loop_4_proc::thread_p_447_cast_fu_292_p1() {
    p_447_cast_fu_292_p1 = esl_zext<32,30>(p_447_fu_285_p3.read());
}

void Loop_4_proc::thread_p_447_fu_285_p3() {
    p_447_fu_285_p3 = (!p_442_reg_380.read()[0].is_01())? sc_lv<30>(): ((p_442_reg_380.read()[0].to_bool())? tmp_fu_256_p4.read(): tmp_5_cast_fu_281_p1.read());
}

void Loop_4_proc::thread_p_delayed_input_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
        p_delayed_input_stencil_stream_V_value_V_blk_n = p_delayed_input_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_delayed_input_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_p_delayed_input_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_delayed_input_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_delayed_input_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_p_hw_output_x_scan_1_fu_158_p2() {
    p_hw_output_x_scan_1_fu_158_p2 = (!p_hw_output_x_scan_s_fu_150_p3.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_hw_output_x_scan_s_fu_150_p3.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_4_proc::thread_p_hw_output_x_scan_s_fu_150_p3() {
    p_hw_output_x_scan_s_fu_150_p3 = (!exitcond7_fu_144_p2.read()[0].is_01())? sc_lv<11>(): ((exitcond7_fu_144_p2.read()[0].to_bool())? ap_const_lv11_0: p_hw_output_x_scan_2_reg_121.read());
}

void Loop_4_proc::thread_p_hw_output_y_scan_1_phi_fu_113_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_flatten_reg_302.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_hw_output_y_scan_1_phi_fu_113_p4 = p_hw_output_y_scan_s_reg_337.read();
    } else {
        p_hw_output_y_scan_1_phi_fu_113_p4 = p_hw_output_y_scan_1_reg_109.read();
    }
}

void Loop_4_proc::thread_p_hw_output_y_scan_2_fu_164_p2() {
    p_hw_output_y_scan_2_fu_164_p2 = (!p_hw_output_y_scan_1_phi_fu_113_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(p_hw_output_y_scan_1_phi_fu_113_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Loop_4_proc::thread_p_hw_output_y_scan_s_fu_176_p3() {
    p_hw_output_y_scan_s_fu_176_p3 = (!exitcond7_reg_311.read()[0].is_01())? sc_lv<11>(): ((exitcond7_reg_311.read()[0].to_bool())? p_hw_output_y_scan_2_fu_164_p2.read(): p_hw_output_y_scan_1_phi_fu_113_p4.read());
}

void Loop_4_proc::thread_p_mul_stencil_stream_V_value_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0))) {
        p_mul_stencil_stream_V_value_V_blk_n = p_mul_stencil_stream_V_value_V_empty_n.read();
    } else {
        p_mul_stencil_stream_V_value_V_blk_n = ap_const_logic_1;
    }
}

void Loop_4_proc::thread_p_mul_stencil_stream_V_value_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_302.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_1;
    } else {
        p_mul_stencil_stream_V_value_V_read = ap_const_logic_0;
    }
}

void Loop_4_proc::thread_tmp_13_fu_265_p4() {
    tmp_13_fu_265_p4 = ap_reg_pp0_iter3_p_439_reg_364.read().range(3, 2);
}

void Loop_4_proc::thread_tmp_14_fu_274_p3() {
    tmp_14_fu_274_p3 = (!p_444_reg_385.read()[0].is_01())? sc_lv<2>(): ((p_444_reg_385.read()[0].to_bool())? tmp_13_fu_265_p4.read(): ap_const_lv2_0);
}

void Loop_4_proc::thread_tmp_1_fu_170_p2() {
    tmp_1_fu_170_p2 = (!p_hw_output_y_scan_1_phi_fu_113_p4.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_1_phi_fu_113_p4.read() == ap_const_lv11_435);
}

void Loop_4_proc::thread_tmp_3_mid1_fu_198_p2() {
    tmp_3_mid1_fu_198_p2 = (!p_hw_output_y_scan_2_reg_327.read().is_01() || !ap_const_lv11_435.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_y_scan_2_reg_327.read() == ap_const_lv11_435);
}

void Loop_4_proc::thread_tmp_3_mid2_fu_236_p3() {
    tmp_3_mid2_fu_236_p3 = (!ap_reg_pp0_iter2_exitcond7_reg_311.read()[0].is_01())? sc_lv<1>(): ((ap_reg_pp0_iter2_exitcond7_reg_311.read()[0].to_bool())? tmp_3_mid1_reg_359.read(): ap_reg_pp0_iter2_tmp_1_reg_332.read());
}

void Loop_4_proc::thread_tmp_5_cast_fu_281_p1() {
    tmp_5_cast_fu_281_p1 = esl_zext<30,2>(tmp_14_fu_274_p3.read());
}

void Loop_4_proc::thread_tmp_fu_256_p4() {
    tmp_fu_256_p4 = ap_reg_pp0_iter3_p_439_reg_364.read().range(31, 2);
}

void Loop_4_proc::thread_tmp_last_V_fu_251_p2() {
    tmp_last_V_fu_251_p2 = (ap_reg_pp0_iter2_tmp_s_reg_354.read() & tmp_3_mid2_fu_236_p3.read());
}

void Loop_4_proc::thread_tmp_s_fu_193_p2() {
    tmp_s_fu_193_p2 = (!p_hw_output_x_scan_s_reg_317.read().is_01() || !ap_const_lv11_77D.is_01())? sc_lv<1>(): sc_lv<1>(p_hw_output_x_scan_s_reg_317.read() == ap_const_lv11_77D);
}

void Loop_4_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_132_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_132_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

